import * as _0 from "./ics23/v1/proofs";
import * as _1 from "./auth/v1beta1/auth";
import * as _2 from "./auth/v1beta1/genesis";
import * as _3 from "./auth/v1beta1/query";
import * as _4 from "./authz/v1beta1/authz";
import * as _5 from "./authz/v1beta1/event";
import * as _6 from "./authz/v1beta1/genesis";
import * as _7 from "./authz/v1beta1/query";
import * as _8 from "./authz/v1beta1/tx";
import * as _9 from "./bank/v1beta1/authz";
import * as _10 from "./bank/v1beta1/bank";
import * as _11 from "./bank/v1beta1/genesis";
import * as _12 from "./bank/v1beta1/query";
import * as _13 from "./bank/v1beta1/tx";
import * as _14 from "./base/abci/v1beta1/abci";
import * as _15 from "./base/kv/v1beta1/kv";
import * as _16 from "./base/node/v1beta1/query";
import * as _17 from "./base/query/v1beta1/pagination";
import * as _18 from "./base/reflection/v1beta1/reflection";
import * as _19 from "./base/reflection/v2alpha1/reflection";
import * as _20 from "./base/snapshots/v1beta1/snapshot";
import * as _21 from "./base/store/v1beta1/commit_info";
import * as _22 from "./base/store/v1beta1/listening";
import * as _23 from "./base/tendermint/v1beta1/query";
import * as _24 from "./base/v1beta1/coin";
import * as _25 from "./capability/v1beta1/capability";
import * as _26 from "./capability/v1beta1/genesis";
import * as _27 from "./crisis/v1beta1/genesis";
import * as _28 from "./crisis/v1beta1/tx";
import * as _29 from "./crypto/ed25519/keys";
import * as _30 from "./crypto/multisig/keys";
import * as _31 from "./crypto/secp256k1/keys";
import * as _32 from "./crypto/secp256r1/keys";
import * as _33 from "./crypto/hd/v1/hd";
import * as _34 from "./crypto/keyring/v1/record";
import * as _35 from "./distribution/v1beta1/distribution";
import * as _36 from "./distribution/v1beta1/genesis";
import * as _37 from "./distribution/v1beta1/query";
import * as _38 from "./distribution/v1beta1/tx";
import * as _39 from "./evidence/v1beta1/evidence";
import * as _40 from "./evidence/v1beta1/genesis";
import * as _41 from "./evidence/v1beta1/query";
import * as _42 from "./evidence/v1beta1/tx";
import * as _43 from "./feegrant/v1beta1/feegrant";
import * as _44 from "./feegrant/v1beta1/genesis";
import * as _45 from "./feegrant/v1beta1/query";
import * as _46 from "./feegrant/v1beta1/tx";
import * as _47 from "./genutil/v1beta1/genesis";
import * as _48 from "./gov/v1beta1/genesis";
import * as _49 from "./gov/v1beta1/gov";
import * as _50 from "./gov/v1beta1/query";
import * as _51 from "./gov/v1beta1/tx";
import * as _52 from "./gov/v1/genesis";
import * as _53 from "./gov/v1/gov";
import * as _54 from "./gov/v1/query";
import * as _55 from "./gov/v1/tx";
import * as _56 from "./mint/v1beta1/genesis";
import * as _57 from "./mint/v1beta1/mint";
import * as _58 from "./mint/v1beta1/query";
import * as _59 from "./params/v1beta1/params";
import * as _60 from "./params/v1beta1/query";
import * as _61 from "./slashing/v1beta1/genesis";
import * as _62 from "./slashing/v1beta1/query";
import * as _63 from "./slashing/v1beta1/slashing";
import * as _64 from "./slashing/v1beta1/tx";
import * as _65 from "./staking/v1beta1/authz";
import * as _66 from "./staking/v1beta1/genesis";
import * as _67 from "./staking/v1beta1/query";
import * as _68 from "./staking/v1beta1/staking";
import * as _69 from "./staking/v1beta1/tx";
import * as _70 from "./tx/signing/v1beta1/signing";
import * as _71 from "./tx/v1beta1/service";
import * as _72 from "./tx/v1beta1/tx";
import * as _73 from "./upgrade/v1beta1/query";
import * as _74 from "./upgrade/v1beta1/upgrade";
import * as _75 from "./upgrade/v1beta1/tx";
import * as _76 from "./vesting/v1beta1/tx";
import * as _77 from "./vesting/v1beta1/vesting";
import * as _78 from "./app/v1alpha1/config";
import * as _79 from "./app/v1alpha1/module";
import * as _80 from "./app/v1alpha1/query";
import * as _81 from "./group/v1/events";
import * as _82 from "./group/v1/genesis";
import * as _83 from "./group/v1/query";
import * as _84 from "./group/v1/tx";
import * as _85 from "./group/v1/types";
import * as _87 from "./nft/v1beta1/event";
import * as _88 from "./nft/v1beta1/genesis";
import * as _89 from "./nft/v1beta1/nft";
import * as _90 from "./nft/v1beta1/query";
import * as _91 from "./nft/v1beta1/tx";
import * as _92 from "./orm/v1/orm";
import * as _93 from "./orm/v1alpha1/schema";
import * as _193 from "./auth/v1beta1/query.rpc.Query";
import * as _194 from "./authz/v1beta1/query.rpc.Query";
import * as _195 from "./bank/v1beta1/query.rpc.Query";
import * as _196 from "./base/node/v1beta1/query.rpc.Service";
import * as _197 from "./base/tendermint/v1beta1/query.rpc.Service";
import * as _198 from "./distribution/v1beta1/query.rpc.Query";
import * as _199 from "./evidence/v1beta1/query.rpc.Query";
import * as _200 from "./feegrant/v1beta1/query.rpc.Query";
import * as _201 from "./gov/v1beta1/query.rpc.Query";
import * as _202 from "./mint/v1beta1/query.rpc.Query";
import * as _203 from "./params/v1beta1/query.rpc.Query";
import * as _204 from "./slashing/v1beta1/query.rpc.Query";
import * as _205 from "./staking/v1beta1/query.rpc.Query";
import * as _206 from "./tx/v1beta1/service.rpc.Service";
import * as _207 from "./upgrade/v1beta1/query.rpc.Query";
import * as _208 from "./app/v1alpha1/query.rpc.Query";
import * as _209 from "./gov/v1/query.rpc.Query";
import * as _210 from "./group/v1/query.rpc.Query";
import * as _211 from "./nft/v1beta1/query.rpc.Query";
import * as _212 from "./authz/v1beta1/tx.rpc.msg";
import * as _213 from "./bank/v1beta1/tx.rpc.msg";
import * as _214 from "./crisis/v1beta1/tx.rpc.msg";
import * as _215 from "./distribution/v1beta1/tx.rpc.msg";
import * as _216 from "./evidence/v1beta1/tx.rpc.msg";
import * as _217 from "./feegrant/v1beta1/tx.rpc.msg";
import * as _218 from "./gov/v1beta1/tx.rpc.msg";
import * as _219 from "./slashing/v1beta1/tx.rpc.msg";
import * as _220 from "./staking/v1beta1/tx.rpc.msg";
import * as _221 from "./vesting/v1beta1/tx.rpc.msg";
import * as _222 from "./gov/v1/tx.rpc.msg";
import * as _223 from "./group/v1/tx.rpc.msg";
import * as _224 from "./nft/v1beta1/tx.rpc.msg";
import * as _225 from "./upgrade/v1beta1/tx.rpc.msg";
export declare namespace cosmos {
    namespace ics23 {
        const v1: {
            hashOpFromJSON(object: any): _0.HashOp;
            hashOpToJSON(object: _0.HashOp): string;
            lengthOpFromJSON(object: any): _0.LengthOp;
            lengthOpToJSON(object: _0.LengthOp): string;
            HashOp: typeof _0.HashOp;
            HashOpSDKType: typeof _0.HashOp;
            HashOpAmino: typeof _0.HashOp;
            LengthOp: typeof _0.LengthOp;
            LengthOpSDKType: typeof _0.LengthOp;
            LengthOpAmino: typeof _0.LengthOp;
            ExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.ExistenceProof;
                fromJSON(object: any): _0.ExistenceProof;
                toJSON(message: _0.ExistenceProof): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                    value?: Uint8Array;
                    leaf?: {
                        hash?: _0.HashOp;
                        prehashKey?: _0.HashOp;
                        prehashValue?: _0.HashOp;
                        length?: _0.LengthOp;
                        prefix?: Uint8Array;
                    };
                    path?: {
                        hash?: _0.HashOp;
                        prefix?: Uint8Array;
                        suffix?: Uint8Array;
                    }[];
                }): _0.ExistenceProof;
                fromSDK(object: _0.ExistenceProofSDKType): _0.ExistenceProof;
                toSDK(message: _0.ExistenceProof): _0.ExistenceProofSDKType;
                fromAmino(object: _0.ExistenceProofAmino): _0.ExistenceProof;
                toAmino(message: _0.ExistenceProof): _0.ExistenceProofAmino;
                fromAminoMsg(object: _0.ExistenceProofAminoMsg): _0.ExistenceProof;
                toAminoMsg(message: _0.ExistenceProof): _0.ExistenceProofAminoMsg;
                fromProtoMsg(message: _0.ExistenceProofProtoMsg): _0.ExistenceProof;
                toProto(message: _0.ExistenceProof): Uint8Array;
                toProtoMsg(message: _0.ExistenceProof): _0.ExistenceProofProtoMsg;
            };
            NonExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.NonExistenceProof;
                fromJSON(object: any): _0.NonExistenceProof;
                toJSON(message: _0.NonExistenceProof): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                    left?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _0.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    right?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _0.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                }): _0.NonExistenceProof;
                fromSDK(object: _0.NonExistenceProofSDKType): _0.NonExistenceProof;
                toSDK(message: _0.NonExistenceProof): _0.NonExistenceProofSDKType;
                fromAmino(object: _0.NonExistenceProofAmino): _0.NonExistenceProof;
                toAmino(message: _0.NonExistenceProof): _0.NonExistenceProofAmino;
                fromAminoMsg(object: _0.NonExistenceProofAminoMsg): _0.NonExistenceProof;
                toAminoMsg(message: _0.NonExistenceProof): _0.NonExistenceProofAminoMsg;
                fromProtoMsg(message: _0.NonExistenceProofProtoMsg): _0.NonExistenceProof;
                toProto(message: _0.NonExistenceProof): Uint8Array;
                toProtoMsg(message: _0.NonExistenceProof): _0.NonExistenceProofProtoMsg;
            };
            CommitmentProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.CommitmentProof;
                fromJSON(object: any): _0.CommitmentProof;
                toJSON(message: _0.CommitmentProof): unknown;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _0.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _0.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _0.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                    };
                    batch?: {
                        entries?: {
                            exist?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _0.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                            nonexist?: {
                                key?: Uint8Array;
                                left?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _0.HashOp;
                                        prehashKey?: _0.HashOp;
                                        prehashValue?: _0.HashOp;
                                        length?: _0.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: {
                                        hash?: _0.HashOp;
                                        prefix?: Uint8Array;
                                        suffix?: Uint8Array;
                                    }[];
                                };
                                right?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _0.HashOp;
                                        prehashKey?: _0.HashOp;
                                        prehashValue?: _0.HashOp;
                                        length?: _0.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: {
                                        hash?: _0.HashOp;
                                        prefix?: Uint8Array;
                                        suffix?: Uint8Array;
                                    }[];
                                };
                            };
                        }[];
                    };
                    compressed?: {
                        entries?: {
                            exist?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                            nonexist?: {
                                key?: Uint8Array;
                                left?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _0.HashOp;
                                        prehashKey?: _0.HashOp;
                                        prehashValue?: _0.HashOp;
                                        length?: _0.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: number[];
                                };
                                right?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _0.HashOp;
                                        prehashKey?: _0.HashOp;
                                        prehashValue?: _0.HashOp;
                                        length?: _0.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: number[];
                                };
                            };
                        }[];
                        lookupInners?: {
                            hash?: _0.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                }): _0.CommitmentProof;
                fromSDK(object: _0.CommitmentProofSDKType): _0.CommitmentProof;
                toSDK(message: _0.CommitmentProof): _0.CommitmentProofSDKType;
                fromAmino(object: _0.CommitmentProofAmino): _0.CommitmentProof;
                toAmino(message: _0.CommitmentProof): _0.CommitmentProofAmino;
                fromAminoMsg(object: _0.CommitmentProofAminoMsg): _0.CommitmentProof;
                toAminoMsg(message: _0.CommitmentProof): _0.CommitmentProofAminoMsg;
                fromProtoMsg(message: _0.CommitmentProofProtoMsg): _0.CommitmentProof;
                toProto(message: _0.CommitmentProof): Uint8Array;
                toProtoMsg(message: _0.CommitmentProof): _0.CommitmentProofProtoMsg;
            };
            LeafOp: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.LeafOp;
                fromJSON(object: any): _0.LeafOp;
                toJSON(message: _0.LeafOp): unknown;
                fromPartial(object: {
                    hash?: _0.HashOp;
                    prehashKey?: _0.HashOp;
                    prehashValue?: _0.HashOp;
                    length?: _0.LengthOp;
                    prefix?: Uint8Array;
                }): _0.LeafOp;
                fromSDK(object: _0.LeafOpSDKType): _0.LeafOp;
                toSDK(message: _0.LeafOp): _0.LeafOpSDKType;
                fromAmino(object: _0.LeafOpAmino): _0.LeafOp;
                toAmino(message: _0.LeafOp): _0.LeafOpAmino;
                fromAminoMsg(object: _0.LeafOpAminoMsg): _0.LeafOp;
                toAminoMsg(message: _0.LeafOp): _0.LeafOpAminoMsg;
                fromProtoMsg(message: _0.LeafOpProtoMsg): _0.LeafOp;
                toProto(message: _0.LeafOp): Uint8Array;
                toProtoMsg(message: _0.LeafOp): _0.LeafOpProtoMsg;
            };
            InnerOp: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.InnerOp;
                fromJSON(object: any): _0.InnerOp;
                toJSON(message: _0.InnerOp): unknown;
                fromPartial(object: {
                    hash?: _0.HashOp;
                    prefix?: Uint8Array;
                    suffix?: Uint8Array;
                }): _0.InnerOp;
                fromSDK(object: _0.InnerOpSDKType): _0.InnerOp;
                toSDK(message: _0.InnerOp): _0.InnerOpSDKType;
                fromAmino(object: _0.InnerOpAmino): _0.InnerOp;
                toAmino(message: _0.InnerOp): _0.InnerOpAmino;
                fromAminoMsg(object: _0.InnerOpAminoMsg): _0.InnerOp;
                toAminoMsg(message: _0.InnerOp): _0.InnerOpAminoMsg;
                fromProtoMsg(message: _0.InnerOpProtoMsg): _0.InnerOp;
                toProto(message: _0.InnerOp): Uint8Array;
                toProtoMsg(message: _0.InnerOp): _0.InnerOpProtoMsg;
            };
            ProofSpec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.ProofSpec;
                fromJSON(object: any): _0.ProofSpec;
                toJSON(message: _0.ProofSpec): unknown;
                fromPartial(object: {
                    leafSpec?: {
                        hash?: _0.HashOp;
                        prehashKey?: _0.HashOp;
                        prehashValue?: _0.HashOp;
                        length?: _0.LengthOp;
                        prefix?: Uint8Array;
                    };
                    innerSpec?: {
                        childOrder?: number[];
                        childSize?: number;
                        minPrefixLength?: number;
                        maxPrefixLength?: number;
                        emptyChild?: Uint8Array;
                        hash?: _0.HashOp;
                    };
                    maxDepth?: number;
                    minDepth?: number;
                    prehashKeyBeforeComparison?: boolean;
                }): _0.ProofSpec;
                fromSDK(object: _0.ProofSpecSDKType): _0.ProofSpec;
                toSDK(message: _0.ProofSpec): _0.ProofSpecSDKType;
                fromAmino(object: _0.ProofSpecAmino): _0.ProofSpec;
                toAmino(message: _0.ProofSpec): _0.ProofSpecAmino;
                fromAminoMsg(object: _0.ProofSpecAminoMsg): _0.ProofSpec;
                toAminoMsg(message: _0.ProofSpec): _0.ProofSpecAminoMsg;
                fromProtoMsg(message: _0.ProofSpecProtoMsg): _0.ProofSpec;
                toProto(message: _0.ProofSpec): Uint8Array;
                toProtoMsg(message: _0.ProofSpec): _0.ProofSpecProtoMsg;
            };
            InnerSpec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.InnerSpec;
                fromJSON(object: any): _0.InnerSpec;
                toJSON(message: _0.InnerSpec): unknown;
                fromPartial(object: {
                    childOrder?: number[];
                    childSize?: number;
                    minPrefixLength?: number;
                    maxPrefixLength?: number;
                    emptyChild?: Uint8Array;
                    hash?: _0.HashOp;
                }): _0.InnerSpec;
                fromSDK(object: _0.InnerSpecSDKType): _0.InnerSpec;
                toSDK(message: _0.InnerSpec): _0.InnerSpecSDKType;
                fromAmino(object: _0.InnerSpecAmino): _0.InnerSpec;
                toAmino(message: _0.InnerSpec): _0.InnerSpecAmino;
                fromAminoMsg(object: _0.InnerSpecAminoMsg): _0.InnerSpec;
                toAminoMsg(message: _0.InnerSpec): _0.InnerSpecAminoMsg;
                fromProtoMsg(message: _0.InnerSpecProtoMsg): _0.InnerSpec;
                toProto(message: _0.InnerSpec): Uint8Array;
                toProtoMsg(message: _0.InnerSpec): _0.InnerSpecProtoMsg;
            };
            BatchProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.BatchProof;
                fromJSON(object: any): _0.BatchProof;
                toJSON(message: _0.BatchProof): unknown;
                fromPartial(object: {
                    entries?: {
                        exist?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _0.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        nonexist?: {
                            key?: Uint8Array;
                            left?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _0.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                            right?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _0.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                        };
                    }[];
                }): _0.BatchProof;
                fromSDK(object: _0.BatchProofSDKType): _0.BatchProof;
                toSDK(message: _0.BatchProof): _0.BatchProofSDKType;
                fromAmino(object: _0.BatchProofAmino): _0.BatchProof;
                toAmino(message: _0.BatchProof): _0.BatchProofAmino;
                fromAminoMsg(object: _0.BatchProofAminoMsg): _0.BatchProof;
                toAminoMsg(message: _0.BatchProof): _0.BatchProofAminoMsg;
                fromProtoMsg(message: _0.BatchProofProtoMsg): _0.BatchProof;
                toProto(message: _0.BatchProof): Uint8Array;
                toProtoMsg(message: _0.BatchProof): _0.BatchProofProtoMsg;
            };
            BatchEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.BatchEntry;
                fromJSON(object: any): _0.BatchEntry;
                toJSON(message: _0.BatchEntry): unknown;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _0.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _0.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _0.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                    };
                }): _0.BatchEntry;
                fromSDK(object: _0.BatchEntrySDKType): _0.BatchEntry;
                toSDK(message: _0.BatchEntry): _0.BatchEntrySDKType;
                fromAmino(object: _0.BatchEntryAmino): _0.BatchEntry;
                toAmino(message: _0.BatchEntry): _0.BatchEntryAmino;
                fromAminoMsg(object: _0.BatchEntryAminoMsg): _0.BatchEntry;
                toAminoMsg(message: _0.BatchEntry): _0.BatchEntryAminoMsg;
                fromProtoMsg(message: _0.BatchEntryProtoMsg): _0.BatchEntry;
                toProto(message: _0.BatchEntry): Uint8Array;
                toProtoMsg(message: _0.BatchEntry): _0.BatchEntryProtoMsg;
            };
            CompressedBatchProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.CompressedBatchProof;
                fromJSON(object: any): _0.CompressedBatchProof;
                toJSON(message: _0.CompressedBatchProof): unknown;
                fromPartial(object: {
                    entries?: {
                        exist?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                        nonexist?: {
                            key?: Uint8Array;
                            left?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                            right?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _0.HashOp;
                                    prehashKey?: _0.HashOp;
                                    prehashValue?: _0.HashOp;
                                    length?: _0.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                        };
                    }[];
                    lookupInners?: {
                        hash?: _0.HashOp;
                        prefix?: Uint8Array;
                        suffix?: Uint8Array;
                    }[];
                }): _0.CompressedBatchProof;
                fromSDK(object: _0.CompressedBatchProofSDKType): _0.CompressedBatchProof;
                toSDK(message: _0.CompressedBatchProof): _0.CompressedBatchProofSDKType;
                fromAmino(object: _0.CompressedBatchProofAmino): _0.CompressedBatchProof;
                toAmino(message: _0.CompressedBatchProof): _0.CompressedBatchProofAmino;
                fromAminoMsg(object: _0.CompressedBatchProofAminoMsg): _0.CompressedBatchProof;
                toAminoMsg(message: _0.CompressedBatchProof): _0.CompressedBatchProofAminoMsg;
                fromProtoMsg(message: _0.CompressedBatchProofProtoMsg): _0.CompressedBatchProof;
                toProto(message: _0.CompressedBatchProof): Uint8Array;
                toProtoMsg(message: _0.CompressedBatchProof): _0.CompressedBatchProofProtoMsg;
            };
            CompressedBatchEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.CompressedBatchEntry;
                fromJSON(object: any): _0.CompressedBatchEntry;
                toJSON(message: _0.CompressedBatchEntry): unknown;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _0.HashOp;
                                prehashKey?: _0.HashOp;
                                prehashValue?: _0.HashOp;
                                length?: _0.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                    };
                }): _0.CompressedBatchEntry;
                fromSDK(object: _0.CompressedBatchEntrySDKType): _0.CompressedBatchEntry;
                toSDK(message: _0.CompressedBatchEntry): _0.CompressedBatchEntrySDKType;
                fromAmino(object: _0.CompressedBatchEntryAmino): _0.CompressedBatchEntry;
                toAmino(message: _0.CompressedBatchEntry): _0.CompressedBatchEntryAmino;
                fromAminoMsg(object: _0.CompressedBatchEntryAminoMsg): _0.CompressedBatchEntry;
                toAminoMsg(message: _0.CompressedBatchEntry): _0.CompressedBatchEntryAminoMsg;
                fromProtoMsg(message: _0.CompressedBatchEntryProtoMsg): _0.CompressedBatchEntry;
                toProto(message: _0.CompressedBatchEntry): Uint8Array;
                toProtoMsg(message: _0.CompressedBatchEntry): _0.CompressedBatchEntryProtoMsg;
            };
            CompressedExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.CompressedExistenceProof;
                fromJSON(object: any): _0.CompressedExistenceProof;
                toJSON(message: _0.CompressedExistenceProof): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                    value?: Uint8Array;
                    leaf?: {
                        hash?: _0.HashOp;
                        prehashKey?: _0.HashOp;
                        prehashValue?: _0.HashOp;
                        length?: _0.LengthOp;
                        prefix?: Uint8Array;
                    };
                    path?: number[];
                }): _0.CompressedExistenceProof;
                fromSDK(object: _0.CompressedExistenceProofSDKType): _0.CompressedExistenceProof;
                toSDK(message: _0.CompressedExistenceProof): _0.CompressedExistenceProofSDKType;
                fromAmino(object: _0.CompressedExistenceProofAmino): _0.CompressedExistenceProof;
                toAmino(message: _0.CompressedExistenceProof): _0.CompressedExistenceProofAmino;
                fromAminoMsg(object: _0.CompressedExistenceProofAminoMsg): _0.CompressedExistenceProof;
                toAminoMsg(message: _0.CompressedExistenceProof): _0.CompressedExistenceProofAminoMsg;
                fromProtoMsg(message: _0.CompressedExistenceProofProtoMsg): _0.CompressedExistenceProof;
                toProto(message: _0.CompressedExistenceProof): Uint8Array;
                toProtoMsg(message: _0.CompressedExistenceProof): _0.CompressedExistenceProofProtoMsg;
            };
            CompressedNonExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _0.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _0.CompressedNonExistenceProof;
                fromJSON(object: any): _0.CompressedNonExistenceProof;
                toJSON(message: _0.CompressedNonExistenceProof): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                    left?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                    right?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _0.HashOp;
                            prehashKey?: _0.HashOp;
                            prehashValue?: _0.HashOp;
                            length?: _0.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                }): _0.CompressedNonExistenceProof;
                fromSDK(object: _0.CompressedNonExistenceProofSDKType): _0.CompressedNonExistenceProof;
                toSDK(message: _0.CompressedNonExistenceProof): _0.CompressedNonExistenceProofSDKType;
                fromAmino(object: _0.CompressedNonExistenceProofAmino): _0.CompressedNonExistenceProof;
                toAmino(message: _0.CompressedNonExistenceProof): _0.CompressedNonExistenceProofAmino;
                fromAminoMsg(object: _0.CompressedNonExistenceProofAminoMsg): _0.CompressedNonExistenceProof;
                toAminoMsg(message: _0.CompressedNonExistenceProof): _0.CompressedNonExistenceProofAminoMsg;
                fromProtoMsg(message: _0.CompressedNonExistenceProofProtoMsg): _0.CompressedNonExistenceProof;
                toProto(message: _0.CompressedNonExistenceProof): Uint8Array;
                toProtoMsg(message: _0.CompressedNonExistenceProof): _0.CompressedNonExistenceProofProtoMsg;
            };
        };
    }
    namespace auth {
        const v1beta1: {
            QueryClientImpl: typeof _193.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                accounts(request?: _3.QueryAccountsRequest): Promise<_3.QueryAccountsResponse>;
                account(request: _3.QueryAccountRequest): Promise<_3.QueryAccountResponse>;
                params(request?: _3.QueryParamsRequest): Promise<_3.QueryParamsResponse>;
                moduleAccounts(request?: _3.QueryModuleAccountsRequest): Promise<_3.QueryModuleAccountsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useAccounts: <TData = _3.QueryAccountsResponse>({ request, options }: _193.UseAccountsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useAccount: <TData_1 = _3.QueryAccountResponse>({ request, options }: _193.UseAccountQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useParams: <TData_2 = _3.QueryParamsResponse>({ request, options }: _193.UseParamsQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useModuleAccounts: <TData_3 = _3.QueryModuleAccountsResponse>({ request, options }: _193.UseModuleAccountsQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
            };
            QueryAccountsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryAccountsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryAccountsRequest;
                fromJSON(object: any): _3.QueryAccountsRequest;
                toJSON(message: _3.QueryAccountsRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _3.QueryAccountsRequest;
                fromSDK(object: _3.QueryAccountsRequestSDKType): _3.QueryAccountsRequest;
                toSDK(message: _3.QueryAccountsRequest): _3.QueryAccountsRequestSDKType;
                fromAmino(object: _3.QueryAccountsRequestAmino): _3.QueryAccountsRequest;
                toAmino(message: _3.QueryAccountsRequest): _3.QueryAccountsRequestAmino;
                fromAminoMsg(object: _3.QueryAccountsRequestAminoMsg): _3.QueryAccountsRequest;
                toAminoMsg(message: _3.QueryAccountsRequest): _3.QueryAccountsRequestAminoMsg;
                fromProtoMsg(message: _3.QueryAccountsRequestProtoMsg): _3.QueryAccountsRequest;
                toProto(message: _3.QueryAccountsRequest): Uint8Array;
                toProtoMsg(message: _3.QueryAccountsRequest): _3.QueryAccountsRequestProtoMsg;
            };
            QueryAccountsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryAccountsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryAccountsResponse;
                fromJSON(object: any): _3.QueryAccountsResponse;
                toJSON(message: _3.QueryAccountsResponse): unknown;
                fromPartial(object: {
                    accounts?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _3.QueryAccountsResponse;
                fromSDK(object: _3.QueryAccountsResponseSDKType): _3.QueryAccountsResponse;
                toSDK(message: _3.QueryAccountsResponse): _3.QueryAccountsResponseSDKType;
                fromAmino(object: _3.QueryAccountsResponseAmino): _3.QueryAccountsResponse;
                toAmino(message: _3.QueryAccountsResponse): _3.QueryAccountsResponseAmino;
                fromAminoMsg(object: _3.QueryAccountsResponseAminoMsg): _3.QueryAccountsResponse;
                toAminoMsg(message: _3.QueryAccountsResponse): _3.QueryAccountsResponseAminoMsg;
                fromProtoMsg(message: _3.QueryAccountsResponseProtoMsg): _3.QueryAccountsResponse;
                toProto(message: _3.QueryAccountsResponse): Uint8Array;
                toProtoMsg(message: _3.QueryAccountsResponse): _3.QueryAccountsResponseProtoMsg;
            };
            QueryAccountRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryAccountRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryAccountRequest;
                fromJSON(object: any): _3.QueryAccountRequest;
                toJSON(message: _3.QueryAccountRequest): unknown;
                fromPartial(object: {
                    address?: string;
                }): _3.QueryAccountRequest;
                fromSDK(object: _3.QueryAccountRequestSDKType): _3.QueryAccountRequest;
                toSDK(message: _3.QueryAccountRequest): _3.QueryAccountRequestSDKType;
                fromAmino(object: _3.QueryAccountRequestAmino): _3.QueryAccountRequest;
                toAmino(message: _3.QueryAccountRequest): _3.QueryAccountRequestAmino;
                fromAminoMsg(object: _3.QueryAccountRequestAminoMsg): _3.QueryAccountRequest;
                toAminoMsg(message: _3.QueryAccountRequest): _3.QueryAccountRequestAminoMsg;
                fromProtoMsg(message: _3.QueryAccountRequestProtoMsg): _3.QueryAccountRequest;
                toProto(message: _3.QueryAccountRequest): Uint8Array;
                toProtoMsg(message: _3.QueryAccountRequest): _3.QueryAccountRequestProtoMsg;
            };
            QueryAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryAccountResponse;
                fromJSON(object: any): _3.QueryAccountResponse;
                toJSON(message: _3.QueryAccountResponse): unknown;
                fromPartial(object: {
                    account?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _3.QueryAccountResponse;
                fromSDK(object: _3.QueryAccountResponseSDKType): _3.QueryAccountResponse;
                toSDK(message: _3.QueryAccountResponse): _3.QueryAccountResponseSDKType;
                fromAmino(object: _3.QueryAccountResponseAmino): _3.QueryAccountResponse;
                toAmino(message: _3.QueryAccountResponse): _3.QueryAccountResponseAmino;
                fromAminoMsg(object: _3.QueryAccountResponseAminoMsg): _3.QueryAccountResponse;
                toAminoMsg(message: _3.QueryAccountResponse): _3.QueryAccountResponseAminoMsg;
                fromProtoMsg(message: _3.QueryAccountResponseProtoMsg): _3.QueryAccountResponse;
                toProto(message: _3.QueryAccountResponse): Uint8Array;
                toProtoMsg(message: _3.QueryAccountResponse): _3.QueryAccountResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _3.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryParamsRequest;
                fromJSON(_: any): _3.QueryParamsRequest;
                toJSON(_: _3.QueryParamsRequest): unknown;
                fromPartial(_: {}): _3.QueryParamsRequest;
                fromSDK(_: _3.QueryParamsRequestSDKType): _3.QueryParamsRequest;
                toSDK(_: _3.QueryParamsRequest): _3.QueryParamsRequestSDKType;
                fromAmino(_: _3.QueryParamsRequestAmino): _3.QueryParamsRequest;
                toAmino(_: _3.QueryParamsRequest): _3.QueryParamsRequestAmino;
                fromAminoMsg(object: _3.QueryParamsRequestAminoMsg): _3.QueryParamsRequest;
                toAminoMsg(message: _3.QueryParamsRequest): _3.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _3.QueryParamsRequestProtoMsg): _3.QueryParamsRequest;
                toProto(message: _3.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _3.QueryParamsRequest): _3.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryParamsResponse;
                fromJSON(object: any): _3.QueryParamsResponse;
                toJSON(message: _3.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        maxMemoCharacters?: bigint;
                        txSigLimit?: bigint;
                        txSizeCostPerByte?: bigint;
                        sigVerifyCostEd25519?: bigint;
                        sigVerifyCostSecp256k1?: bigint;
                    };
                }): _3.QueryParamsResponse;
                fromSDK(object: _3.QueryParamsResponseSDKType): _3.QueryParamsResponse;
                toSDK(message: _3.QueryParamsResponse): _3.QueryParamsResponseSDKType;
                fromAmino(object: _3.QueryParamsResponseAmino): _3.QueryParamsResponse;
                toAmino(message: _3.QueryParamsResponse): _3.QueryParamsResponseAmino;
                fromAminoMsg(object: _3.QueryParamsResponseAminoMsg): _3.QueryParamsResponse;
                toAminoMsg(message: _3.QueryParamsResponse): _3.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _3.QueryParamsResponseProtoMsg): _3.QueryParamsResponse;
                toProto(message: _3.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _3.QueryParamsResponse): _3.QueryParamsResponseProtoMsg;
            };
            QueryModuleAccountsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _3.QueryModuleAccountsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryModuleAccountsRequest;
                fromJSON(_: any): _3.QueryModuleAccountsRequest;
                toJSON(_: _3.QueryModuleAccountsRequest): unknown;
                fromPartial(_: {}): _3.QueryModuleAccountsRequest;
                fromSDK(_: _3.QueryModuleAccountsRequestSDKType): _3.QueryModuleAccountsRequest;
                toSDK(_: _3.QueryModuleAccountsRequest): _3.QueryModuleAccountsRequestSDKType;
                fromAmino(_: _3.QueryModuleAccountsRequestAmino): _3.QueryModuleAccountsRequest;
                toAmino(_: _3.QueryModuleAccountsRequest): _3.QueryModuleAccountsRequestAmino;
                fromAminoMsg(object: _3.QueryModuleAccountsRequestAminoMsg): _3.QueryModuleAccountsRequest;
                toAminoMsg(message: _3.QueryModuleAccountsRequest): _3.QueryModuleAccountsRequestAminoMsg;
                fromProtoMsg(message: _3.QueryModuleAccountsRequestProtoMsg): _3.QueryModuleAccountsRequest;
                toProto(message: _3.QueryModuleAccountsRequest): Uint8Array;
                toProtoMsg(message: _3.QueryModuleAccountsRequest): _3.QueryModuleAccountsRequestProtoMsg;
            };
            QueryModuleAccountsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.QueryModuleAccountsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.QueryModuleAccountsResponse;
                fromJSON(object: any): _3.QueryModuleAccountsResponse;
                toJSON(message: _3.QueryModuleAccountsResponse): unknown;
                fromPartial(object: {
                    accounts?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _3.QueryModuleAccountsResponse;
                fromSDK(object: _3.QueryModuleAccountsResponseSDKType): _3.QueryModuleAccountsResponse;
                toSDK(message: _3.QueryModuleAccountsResponse): _3.QueryModuleAccountsResponseSDKType;
                fromAmino(object: _3.QueryModuleAccountsResponseAmino): _3.QueryModuleAccountsResponse;
                toAmino(message: _3.QueryModuleAccountsResponse): _3.QueryModuleAccountsResponseAmino;
                fromAminoMsg(object: _3.QueryModuleAccountsResponseAminoMsg): _3.QueryModuleAccountsResponse;
                toAminoMsg(message: _3.QueryModuleAccountsResponse): _3.QueryModuleAccountsResponseAminoMsg;
                fromProtoMsg(message: _3.QueryModuleAccountsResponseProtoMsg): _3.QueryModuleAccountsResponse;
                toProto(message: _3.QueryModuleAccountsResponse): Uint8Array;
                toProtoMsg(message: _3.QueryModuleAccountsResponse): _3.QueryModuleAccountsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _2.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _2.GenesisState;
                fromJSON(object: any): _2.GenesisState;
                toJSON(message: _2.GenesisState): unknown;
                fromPartial(object: {
                    params?: {
                        maxMemoCharacters?: bigint;
                        txSigLimit?: bigint;
                        txSizeCostPerByte?: bigint;
                        sigVerifyCostEd25519?: bigint;
                        sigVerifyCostSecp256k1?: bigint;
                    };
                    accounts?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _2.GenesisState;
                fromSDK(object: _2.GenesisStateSDKType): _2.GenesisState;
                toSDK(message: _2.GenesisState): _2.GenesisStateSDKType;
                fromAmino(object: _2.GenesisStateAmino): _2.GenesisState;
                toAmino(message: _2.GenesisState): _2.GenesisStateAmino;
                fromAminoMsg(object: _2.GenesisStateAminoMsg): _2.GenesisState;
                toAminoMsg(message: _2.GenesisState): _2.GenesisStateAminoMsg;
                fromProtoMsg(message: _2.GenesisStateProtoMsg): _2.GenesisState;
                toProto(message: _2.GenesisState): Uint8Array;
                toProtoMsg(message: _2.GenesisState): _2.GenesisStateProtoMsg;
            };
            BaseAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _1.BaseAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _1.BaseAccount;
                fromJSON(object: any): _1.BaseAccount;
                toJSON(message: _1.BaseAccount): unknown;
                fromPartial(object: {
                    address?: string;
                    pubKey?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    accountNumber?: bigint;
                    sequence?: bigint;
                }): _1.BaseAccount;
                fromSDK(object: _1.BaseAccountSDKType): _1.BaseAccount;
                toSDK(message: _1.BaseAccount): _1.BaseAccountSDKType;
                fromAmino(object: _1.BaseAccountAmino): _1.BaseAccount;
                toAmino(message: _1.BaseAccount): _1.BaseAccountAmino;
                fromAminoMsg(object: _1.BaseAccountAminoMsg): _1.BaseAccount;
                toAminoMsg(message: _1.BaseAccount): _1.BaseAccountAminoMsg;
                fromProtoMsg(message: _1.BaseAccountProtoMsg): _1.BaseAccount;
                toProto(message: _1.BaseAccount): Uint8Array;
                toProtoMsg(message: _1.BaseAccount): _1.BaseAccountProtoMsg;
            };
            ModuleAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _1.ModuleAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _1.ModuleAccount;
                fromJSON(object: any): _1.ModuleAccount;
                toJSON(message: _1.ModuleAccount): unknown;
                fromPartial(object: {
                    baseAccount?: {
                        address?: string;
                        pubKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                    name?: string;
                    permissions?: string[];
                }): _1.ModuleAccount;
                fromSDK(object: _1.ModuleAccountSDKType): _1.ModuleAccount;
                toSDK(message: _1.ModuleAccount): _1.ModuleAccountSDKType;
                fromAmino(object: _1.ModuleAccountAmino): _1.ModuleAccount;
                toAmino(message: _1.ModuleAccount): _1.ModuleAccountAmino;
                fromAminoMsg(object: _1.ModuleAccountAminoMsg): _1.ModuleAccount;
                toAminoMsg(message: _1.ModuleAccount): _1.ModuleAccountAminoMsg;
                fromProtoMsg(message: _1.ModuleAccountProtoMsg): _1.ModuleAccount;
                toProto(message: _1.ModuleAccount): Uint8Array;
                toProtoMsg(message: _1.ModuleAccount): _1.ModuleAccountProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _1.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _1.Params;
                fromJSON(object: any): _1.Params;
                toJSON(message: _1.Params): unknown;
                fromPartial(object: {
                    maxMemoCharacters?: bigint;
                    txSigLimit?: bigint;
                    txSizeCostPerByte?: bigint;
                    sigVerifyCostEd25519?: bigint;
                    sigVerifyCostSecp256k1?: bigint;
                }): _1.Params;
                fromSDK(object: _1.ParamsSDKType): _1.Params;
                toSDK(message: _1.Params): _1.ParamsSDKType;
                fromAmino(object: _1.ParamsAmino): _1.Params;
                toAmino(message: _1.Params): _1.ParamsAmino;
                fromAminoMsg(object: _1.ParamsAminoMsg): _1.Params;
                toAminoMsg(message: _1.Params): _1.ParamsAminoMsg;
                fromProtoMsg(message: _1.ParamsProtoMsg): _1.Params;
                toProto(message: _1.Params): Uint8Array;
                toProtoMsg(message: _1.Params): _1.ParamsProtoMsg;
            };
        };
    }
    namespace authz {
        const v1beta1: {
            MsgClientImpl: typeof _212.MsgClientImpl;
            QueryClientImpl: typeof _194.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                grants(request: _7.QueryGrantsRequest): Promise<_7.QueryGrantsResponse>;
                granterGrants(request: _7.QueryGranterGrantsRequest): Promise<_7.QueryGranterGrantsResponse>;
                granteeGrants(request: _7.QueryGranteeGrantsRequest): Promise<_7.QueryGranteeGrantsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useGrants: <TData = _7.QueryGrantsResponse>({ request, options }: _194.UseGrantsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useGranterGrants: <TData_1 = _7.QueryGranterGrantsResponse>({ request, options }: _194.UseGranterGrantsQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useGranteeGrants: <TData_2 = _7.QueryGranteeGrantsResponse>({ request, options }: _194.UseGranteeGrantsQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    grant(value: _8.MsgGrant): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    exec(value: _8.MsgExec): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    revoke(value: _8.MsgRevoke): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    grant(value: _8.MsgGrant): {
                        typeUrl: string;
                        value: _8.MsgGrant;
                    };
                    exec(value: _8.MsgExec): {
                        typeUrl: string;
                        value: _8.MsgExec;
                    };
                    revoke(value: _8.MsgRevoke): {
                        typeUrl: string;
                        value: _8.MsgRevoke;
                    };
                };
                toJSON: {
                    grant(value: _8.MsgGrant): {
                        typeUrl: string;
                        value: unknown;
                    };
                    exec(value: _8.MsgExec): {
                        typeUrl: string;
                        value: unknown;
                    };
                    revoke(value: _8.MsgRevoke): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    grant(value: any): {
                        typeUrl: string;
                        value: _8.MsgGrant;
                    };
                    exec(value: any): {
                        typeUrl: string;
                        value: _8.MsgExec;
                    };
                    revoke(value: any): {
                        typeUrl: string;
                        value: _8.MsgRevoke;
                    };
                };
                fromPartial: {
                    grant(value: _8.MsgGrant): {
                        typeUrl: string;
                        value: _8.MsgGrant;
                    };
                    exec(value: _8.MsgExec): {
                        typeUrl: string;
                        value: _8.MsgExec;
                    };
                    revoke(value: _8.MsgRevoke): {
                        typeUrl: string;
                        value: _8.MsgRevoke;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.authz.v1beta1.MsgGrant": {
                    aminoType: string;
                    toAmino: (message: _8.MsgGrant) => _8.MsgGrantAmino;
                    fromAmino: (object: _8.MsgGrantAmino) => _8.MsgGrant;
                };
                "/cosmos.authz.v1beta1.MsgExec": {
                    aminoType: string;
                    toAmino: (message: _8.MsgExec) => _8.MsgExecAmino;
                    fromAmino: (object: _8.MsgExecAmino) => _8.MsgExec;
                };
                "/cosmos.authz.v1beta1.MsgRevoke": {
                    aminoType: string;
                    toAmino: (message: _8.MsgRevoke) => _8.MsgRevokeAmino;
                    fromAmino: (object: _8.MsgRevokeAmino) => _8.MsgRevoke;
                };
            };
            MsgGrant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.MsgGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgGrant;
                fromJSON(object: any): _8.MsgGrant;
                toJSON(message: _8.MsgGrant): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    grant?: {
                        authorization?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        expiration?: Date;
                    };
                }): _8.MsgGrant;
                fromSDK(object: _8.MsgGrantSDKType): _8.MsgGrant;
                toSDK(message: _8.MsgGrant): _8.MsgGrantSDKType;
                fromAmino(object: _8.MsgGrantAmino): _8.MsgGrant;
                toAmino(message: _8.MsgGrant): _8.MsgGrantAmino;
                fromAminoMsg(object: _8.MsgGrantAminoMsg): _8.MsgGrant;
                toAminoMsg(message: _8.MsgGrant): _8.MsgGrantAminoMsg;
                fromProtoMsg(message: _8.MsgGrantProtoMsg): _8.MsgGrant;
                toProto(message: _8.MsgGrant): Uint8Array;
                toProtoMsg(message: _8.MsgGrant): _8.MsgGrantProtoMsg;
            };
            MsgExecResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.MsgExecResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgExecResponse;
                fromJSON(object: any): _8.MsgExecResponse;
                toJSON(message: _8.MsgExecResponse): unknown;
                fromPartial(object: {
                    results?: Uint8Array[];
                }): _8.MsgExecResponse;
                fromSDK(object: _8.MsgExecResponseSDKType): _8.MsgExecResponse;
                toSDK(message: _8.MsgExecResponse): _8.MsgExecResponseSDKType;
                fromAmino(object: _8.MsgExecResponseAmino): _8.MsgExecResponse;
                toAmino(message: _8.MsgExecResponse): _8.MsgExecResponseAmino;
                fromAminoMsg(object: _8.MsgExecResponseAminoMsg): _8.MsgExecResponse;
                toAminoMsg(message: _8.MsgExecResponse): _8.MsgExecResponseAminoMsg;
                fromProtoMsg(message: _8.MsgExecResponseProtoMsg): _8.MsgExecResponse;
                toProto(message: _8.MsgExecResponse): Uint8Array;
                toProtoMsg(message: _8.MsgExecResponse): _8.MsgExecResponseProtoMsg;
            };
            MsgExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.MsgExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgExec;
                fromJSON(object: any): _8.MsgExec;
                toJSON(message: _8.MsgExec): unknown;
                fromPartial(object: {
                    grantee?: string;
                    msgs?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _8.MsgExec;
                fromSDK(object: _8.MsgExecSDKType): _8.MsgExec;
                toSDK(message: _8.MsgExec): _8.MsgExecSDKType;
                fromAmino(object: _8.MsgExecAmino): _8.MsgExec;
                toAmino(message: _8.MsgExec): _8.MsgExecAmino;
                fromAminoMsg(object: _8.MsgExecAminoMsg): _8.MsgExec;
                toAminoMsg(message: _8.MsgExec): _8.MsgExecAminoMsg;
                fromProtoMsg(message: _8.MsgExecProtoMsg): _8.MsgExec;
                toProto(message: _8.MsgExec): Uint8Array;
                toProtoMsg(message: _8.MsgExec): _8.MsgExecProtoMsg;
            };
            MsgGrantResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _8.MsgGrantResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgGrantResponse;
                fromJSON(_: any): _8.MsgGrantResponse;
                toJSON(_: _8.MsgGrantResponse): unknown;
                fromPartial(_: {}): _8.MsgGrantResponse;
                fromSDK(_: _8.MsgGrantResponseSDKType): _8.MsgGrantResponse;
                toSDK(_: _8.MsgGrantResponse): _8.MsgGrantResponseSDKType;
                fromAmino(_: _8.MsgGrantResponseAmino): _8.MsgGrantResponse;
                toAmino(_: _8.MsgGrantResponse): _8.MsgGrantResponseAmino;
                fromAminoMsg(object: _8.MsgGrantResponseAminoMsg): _8.MsgGrantResponse;
                toAminoMsg(message: _8.MsgGrantResponse): _8.MsgGrantResponseAminoMsg;
                fromProtoMsg(message: _8.MsgGrantResponseProtoMsg): _8.MsgGrantResponse;
                toProto(message: _8.MsgGrantResponse): Uint8Array;
                toProtoMsg(message: _8.MsgGrantResponse): _8.MsgGrantResponseProtoMsg;
            };
            MsgRevoke: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.MsgRevoke, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgRevoke;
                fromJSON(object: any): _8.MsgRevoke;
                toJSON(message: _8.MsgRevoke): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    msgTypeUrl?: string;
                }): _8.MsgRevoke;
                fromSDK(object: _8.MsgRevokeSDKType): _8.MsgRevoke;
                toSDK(message: _8.MsgRevoke): _8.MsgRevokeSDKType;
                fromAmino(object: _8.MsgRevokeAmino): _8.MsgRevoke;
                toAmino(message: _8.MsgRevoke): _8.MsgRevokeAmino;
                fromAminoMsg(object: _8.MsgRevokeAminoMsg): _8.MsgRevoke;
                toAminoMsg(message: _8.MsgRevoke): _8.MsgRevokeAminoMsg;
                fromProtoMsg(message: _8.MsgRevokeProtoMsg): _8.MsgRevoke;
                toProto(message: _8.MsgRevoke): Uint8Array;
                toProtoMsg(message: _8.MsgRevoke): _8.MsgRevokeProtoMsg;
            };
            MsgRevokeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _8.MsgRevokeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.MsgRevokeResponse;
                fromJSON(_: any): _8.MsgRevokeResponse;
                toJSON(_: _8.MsgRevokeResponse): unknown;
                fromPartial(_: {}): _8.MsgRevokeResponse;
                fromSDK(_: _8.MsgRevokeResponseSDKType): _8.MsgRevokeResponse;
                toSDK(_: _8.MsgRevokeResponse): _8.MsgRevokeResponseSDKType;
                fromAmino(_: _8.MsgRevokeResponseAmino): _8.MsgRevokeResponse;
                toAmino(_: _8.MsgRevokeResponse): _8.MsgRevokeResponseAmino;
                fromAminoMsg(object: _8.MsgRevokeResponseAminoMsg): _8.MsgRevokeResponse;
                toAminoMsg(message: _8.MsgRevokeResponse): _8.MsgRevokeResponseAminoMsg;
                fromProtoMsg(message: _8.MsgRevokeResponseProtoMsg): _8.MsgRevokeResponse;
                toProto(message: _8.MsgRevokeResponse): Uint8Array;
                toProtoMsg(message: _8.MsgRevokeResponse): _8.MsgRevokeResponseProtoMsg;
            };
            QueryGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGrantsRequest;
                fromJSON(object: any): _7.QueryGrantsRequest;
                toJSON(message: _7.QueryGrantsRequest): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    msgTypeUrl?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _7.QueryGrantsRequest;
                fromSDK(object: _7.QueryGrantsRequestSDKType): _7.QueryGrantsRequest;
                toSDK(message: _7.QueryGrantsRequest): _7.QueryGrantsRequestSDKType;
                fromAmino(object: _7.QueryGrantsRequestAmino): _7.QueryGrantsRequest;
                toAmino(message: _7.QueryGrantsRequest): _7.QueryGrantsRequestAmino;
                fromAminoMsg(object: _7.QueryGrantsRequestAminoMsg): _7.QueryGrantsRequest;
                toAminoMsg(message: _7.QueryGrantsRequest): _7.QueryGrantsRequestAminoMsg;
                fromProtoMsg(message: _7.QueryGrantsRequestProtoMsg): _7.QueryGrantsRequest;
                toProto(message: _7.QueryGrantsRequest): Uint8Array;
                toProtoMsg(message: _7.QueryGrantsRequest): _7.QueryGrantsRequestProtoMsg;
            };
            QueryGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGrantsResponse;
                fromJSON(object: any): _7.QueryGrantsResponse;
                toJSON(message: _7.QueryGrantsResponse): unknown;
                fromPartial(object: {
                    grants?: {
                        authorization?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _7.QueryGrantsResponse;
                fromSDK(object: _7.QueryGrantsResponseSDKType): _7.QueryGrantsResponse;
                toSDK(message: _7.QueryGrantsResponse): _7.QueryGrantsResponseSDKType;
                fromAmino(object: _7.QueryGrantsResponseAmino): _7.QueryGrantsResponse;
                toAmino(message: _7.QueryGrantsResponse): _7.QueryGrantsResponseAmino;
                fromAminoMsg(object: _7.QueryGrantsResponseAminoMsg): _7.QueryGrantsResponse;
                toAminoMsg(message: _7.QueryGrantsResponse): _7.QueryGrantsResponseAminoMsg;
                fromProtoMsg(message: _7.QueryGrantsResponseProtoMsg): _7.QueryGrantsResponse;
                toProto(message: _7.QueryGrantsResponse): Uint8Array;
                toProtoMsg(message: _7.QueryGrantsResponse): _7.QueryGrantsResponseProtoMsg;
            };
            QueryGranterGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGranterGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGranterGrantsRequest;
                fromJSON(object: any): _7.QueryGranterGrantsRequest;
                toJSON(message: _7.QueryGranterGrantsRequest): unknown;
                fromPartial(object: {
                    granter?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _7.QueryGranterGrantsRequest;
                fromSDK(object: _7.QueryGranterGrantsRequestSDKType): _7.QueryGranterGrantsRequest;
                toSDK(message: _7.QueryGranterGrantsRequest): _7.QueryGranterGrantsRequestSDKType;
                fromAmino(object: _7.QueryGranterGrantsRequestAmino): _7.QueryGranterGrantsRequest;
                toAmino(message: _7.QueryGranterGrantsRequest): _7.QueryGranterGrantsRequestAmino;
                fromAminoMsg(object: _7.QueryGranterGrantsRequestAminoMsg): _7.QueryGranterGrantsRequest;
                toAminoMsg(message: _7.QueryGranterGrantsRequest): _7.QueryGranterGrantsRequestAminoMsg;
                fromProtoMsg(message: _7.QueryGranterGrantsRequestProtoMsg): _7.QueryGranterGrantsRequest;
                toProto(message: _7.QueryGranterGrantsRequest): Uint8Array;
                toProtoMsg(message: _7.QueryGranterGrantsRequest): _7.QueryGranterGrantsRequestProtoMsg;
            };
            QueryGranterGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGranterGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGranterGrantsResponse;
                fromJSON(object: any): _7.QueryGranterGrantsResponse;
                toJSON(message: _7.QueryGranterGrantsResponse): unknown;
                fromPartial(object: {
                    grants?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _7.QueryGranterGrantsResponse;
                fromSDK(object: _7.QueryGranterGrantsResponseSDKType): _7.QueryGranterGrantsResponse;
                toSDK(message: _7.QueryGranterGrantsResponse): _7.QueryGranterGrantsResponseSDKType;
                fromAmino(object: _7.QueryGranterGrantsResponseAmino): _7.QueryGranterGrantsResponse;
                toAmino(message: _7.QueryGranterGrantsResponse): _7.QueryGranterGrantsResponseAmino;
                fromAminoMsg(object: _7.QueryGranterGrantsResponseAminoMsg): _7.QueryGranterGrantsResponse;
                toAminoMsg(message: _7.QueryGranterGrantsResponse): _7.QueryGranterGrantsResponseAminoMsg;
                fromProtoMsg(message: _7.QueryGranterGrantsResponseProtoMsg): _7.QueryGranterGrantsResponse;
                toProto(message: _7.QueryGranterGrantsResponse): Uint8Array;
                toProtoMsg(message: _7.QueryGranterGrantsResponse): _7.QueryGranterGrantsResponseProtoMsg;
            };
            QueryGranteeGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGranteeGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGranteeGrantsRequest;
                fromJSON(object: any): _7.QueryGranteeGrantsRequest;
                toJSON(message: _7.QueryGranteeGrantsRequest): unknown;
                fromPartial(object: {
                    grantee?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _7.QueryGranteeGrantsRequest;
                fromSDK(object: _7.QueryGranteeGrantsRequestSDKType): _7.QueryGranteeGrantsRequest;
                toSDK(message: _7.QueryGranteeGrantsRequest): _7.QueryGranteeGrantsRequestSDKType;
                fromAmino(object: _7.QueryGranteeGrantsRequestAmino): _7.QueryGranteeGrantsRequest;
                toAmino(message: _7.QueryGranteeGrantsRequest): _7.QueryGranteeGrantsRequestAmino;
                fromAminoMsg(object: _7.QueryGranteeGrantsRequestAminoMsg): _7.QueryGranteeGrantsRequest;
                toAminoMsg(message: _7.QueryGranteeGrantsRequest): _7.QueryGranteeGrantsRequestAminoMsg;
                fromProtoMsg(message: _7.QueryGranteeGrantsRequestProtoMsg): _7.QueryGranteeGrantsRequest;
                toProto(message: _7.QueryGranteeGrantsRequest): Uint8Array;
                toProtoMsg(message: _7.QueryGranteeGrantsRequest): _7.QueryGranteeGrantsRequestProtoMsg;
            };
            QueryGranteeGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.QueryGranteeGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.QueryGranteeGrantsResponse;
                fromJSON(object: any): _7.QueryGranteeGrantsResponse;
                toJSON(message: _7.QueryGranteeGrantsResponse): unknown;
                fromPartial(object: {
                    grants?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _7.QueryGranteeGrantsResponse;
                fromSDK(object: _7.QueryGranteeGrantsResponseSDKType): _7.QueryGranteeGrantsResponse;
                toSDK(message: _7.QueryGranteeGrantsResponse): _7.QueryGranteeGrantsResponseSDKType;
                fromAmino(object: _7.QueryGranteeGrantsResponseAmino): _7.QueryGranteeGrantsResponse;
                toAmino(message: _7.QueryGranteeGrantsResponse): _7.QueryGranteeGrantsResponseAmino;
                fromAminoMsg(object: _7.QueryGranteeGrantsResponseAminoMsg): _7.QueryGranteeGrantsResponse;
                toAminoMsg(message: _7.QueryGranteeGrantsResponse): _7.QueryGranteeGrantsResponseAminoMsg;
                fromProtoMsg(message: _7.QueryGranteeGrantsResponseProtoMsg): _7.QueryGranteeGrantsResponse;
                toProto(message: _7.QueryGranteeGrantsResponse): Uint8Array;
                toProtoMsg(message: _7.QueryGranteeGrantsResponse): _7.QueryGranteeGrantsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _6.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _6.GenesisState;
                fromJSON(object: any): _6.GenesisState;
                toJSON(message: _6.GenesisState): unknown;
                fromPartial(object: {
                    authorization?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        expiration?: Date;
                    }[];
                }): _6.GenesisState;
                fromSDK(object: _6.GenesisStateSDKType): _6.GenesisState;
                toSDK(message: _6.GenesisState): _6.GenesisStateSDKType;
                fromAmino(object: _6.GenesisStateAmino): _6.GenesisState;
                toAmino(message: _6.GenesisState): _6.GenesisStateAmino;
                fromAminoMsg(object: _6.GenesisStateAminoMsg): _6.GenesisState;
                toAminoMsg(message: _6.GenesisState): _6.GenesisStateAminoMsg;
                fromProtoMsg(message: _6.GenesisStateProtoMsg): _6.GenesisState;
                toProto(message: _6.GenesisState): Uint8Array;
                toProtoMsg(message: _6.GenesisState): _6.GenesisStateProtoMsg;
            };
            EventGrant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _5.EventGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _5.EventGrant;
                fromJSON(object: any): _5.EventGrant;
                toJSON(message: _5.EventGrant): unknown;
                fromPartial(object: {
                    msgTypeUrl?: string;
                    granter?: string;
                    grantee?: string;
                }): _5.EventGrant;
                fromSDK(object: _5.EventGrantSDKType): _5.EventGrant;
                toSDK(message: _5.EventGrant): _5.EventGrantSDKType;
                fromAmino(object: _5.EventGrantAmino): _5.EventGrant;
                toAmino(message: _5.EventGrant): _5.EventGrantAmino;
                fromAminoMsg(object: _5.EventGrantAminoMsg): _5.EventGrant;
                toAminoMsg(message: _5.EventGrant): _5.EventGrantAminoMsg;
                fromProtoMsg(message: _5.EventGrantProtoMsg): _5.EventGrant;
                toProto(message: _5.EventGrant): Uint8Array;
                toProtoMsg(message: _5.EventGrant): _5.EventGrantProtoMsg;
            };
            EventRevoke: {
                typeUrl: string;
                aminoType: string;
                encode(message: _5.EventRevoke, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _5.EventRevoke;
                fromJSON(object: any): _5.EventRevoke;
                toJSON(message: _5.EventRevoke): unknown;
                fromPartial(object: {
                    msgTypeUrl?: string;
                    granter?: string;
                    grantee?: string;
                }): _5.EventRevoke;
                fromSDK(object: _5.EventRevokeSDKType): _5.EventRevoke;
                toSDK(message: _5.EventRevoke): _5.EventRevokeSDKType;
                fromAmino(object: _5.EventRevokeAmino): _5.EventRevoke;
                toAmino(message: _5.EventRevoke): _5.EventRevokeAmino;
                fromAminoMsg(object: _5.EventRevokeAminoMsg): _5.EventRevoke;
                toAminoMsg(message: _5.EventRevoke): _5.EventRevokeAminoMsg;
                fromProtoMsg(message: _5.EventRevokeProtoMsg): _5.EventRevoke;
                toProto(message: _5.EventRevoke): Uint8Array;
                toProtoMsg(message: _5.EventRevoke): _5.EventRevokeProtoMsg;
            };
            GenericAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _4.GenericAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _4.GenericAuthorization;
                fromJSON(object: any): _4.GenericAuthorization;
                toJSON(message: _4.GenericAuthorization): unknown;
                fromPartial(object: {
                    msg?: string;
                }): _4.GenericAuthorization;
                fromSDK(object: _4.GenericAuthorizationSDKType): _4.GenericAuthorization;
                toSDK(message: _4.GenericAuthorization): _4.GenericAuthorizationSDKType;
                fromAmino(object: _4.GenericAuthorizationAmino): _4.GenericAuthorization;
                toAmino(message: _4.GenericAuthorization): _4.GenericAuthorizationAmino;
                fromAminoMsg(object: _4.GenericAuthorizationAminoMsg): _4.GenericAuthorization;
                toAminoMsg(message: _4.GenericAuthorization): _4.GenericAuthorizationAminoMsg;
                fromProtoMsg(message: _4.GenericAuthorizationProtoMsg): _4.GenericAuthorization;
                toProto(message: _4.GenericAuthorization): Uint8Array;
                toProtoMsg(message: _4.GenericAuthorization): _4.GenericAuthorizationProtoMsg;
            };
            Grant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _4.Grant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _4.Grant;
                fromJSON(object: any): _4.Grant;
                toJSON(message: _4.Grant): unknown;
                fromPartial(object: {
                    authorization?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    expiration?: Date;
                }): _4.Grant;
                fromSDK(object: _4.GrantSDKType): _4.Grant;
                toSDK(message: _4.Grant): _4.GrantSDKType;
                fromAmino(object: _4.GrantAmino): _4.Grant;
                toAmino(message: _4.Grant): _4.GrantAmino;
                fromAminoMsg(object: _4.GrantAminoMsg): _4.Grant;
                toAminoMsg(message: _4.Grant): _4.GrantAminoMsg;
                fromProtoMsg(message: _4.GrantProtoMsg): _4.Grant;
                toProto(message: _4.Grant): Uint8Array;
                toProtoMsg(message: _4.Grant): _4.GrantProtoMsg;
            };
            GrantAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _4.GrantAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _4.GrantAuthorization;
                fromJSON(object: any): _4.GrantAuthorization;
                toJSON(message: _4.GrantAuthorization): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    authorization?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    expiration?: Date;
                }): _4.GrantAuthorization;
                fromSDK(object: _4.GrantAuthorizationSDKType): _4.GrantAuthorization;
                toSDK(message: _4.GrantAuthorization): _4.GrantAuthorizationSDKType;
                fromAmino(object: _4.GrantAuthorizationAmino): _4.GrantAuthorization;
                toAmino(message: _4.GrantAuthorization): _4.GrantAuthorizationAmino;
                fromAminoMsg(object: _4.GrantAuthorizationAminoMsg): _4.GrantAuthorization;
                toAminoMsg(message: _4.GrantAuthorization): _4.GrantAuthorizationAminoMsg;
                fromProtoMsg(message: _4.GrantAuthorizationProtoMsg): _4.GrantAuthorization;
                toProto(message: _4.GrantAuthorization): Uint8Array;
                toProtoMsg(message: _4.GrantAuthorization): _4.GrantAuthorizationProtoMsg;
            };
        };
    }
    namespace bank {
        const v1beta1: {
            MsgClientImpl: typeof _213.MsgClientImpl;
            QueryClientImpl: typeof _195.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                balance(request: _12.QueryBalanceRequest): Promise<_12.QueryBalanceResponse>;
                allBalances(request: _12.QueryAllBalancesRequest): Promise<_12.QueryAllBalancesResponse>;
                totalSupply(request?: _12.QueryTotalSupplyRequest): Promise<_12.QueryTotalSupplyResponse>;
                supplyOf(request: _12.QuerySupplyOfRequest): Promise<_12.QuerySupplyOfResponse>;
                totalSupplyWithoutOffset(request?: _12.QueryTotalSupplyWithoutOffsetRequest): Promise<_12.QueryTotalSupplyWithoutOffsetResponse>;
                supplyOfWithoutOffset(request: _12.QuerySupplyOfWithoutOffsetRequest): Promise<_12.QuerySupplyOfWithoutOffsetResponse>;
                params(request?: _12.QueryParamsRequest): Promise<_12.QueryParamsResponse>;
                denomMetadata(request: _12.QueryDenomMetadataRequest): Promise<_12.QueryDenomMetadataResponse>;
                denomsMetadata(request?: _12.QueryDenomsMetadataRequest): Promise<_12.QueryDenomsMetadataResponse>;
                baseDenom(request: _12.QueryBaseDenomRequest): Promise<_12.QueryBaseDenomResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useBalance: <TData = _12.QueryBalanceResponse>({ request, options }: _195.UseBalanceQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useAllBalances: <TData_1 = _12.QueryAllBalancesResponse>({ request, options }: _195.UseAllBalancesQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useTotalSupply: <TData_2 = _12.QueryTotalSupplyResponse>({ request, options }: _195.UseTotalSupplyQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useSupplyOf: <TData_3 = _12.QuerySupplyOfResponse>({ request, options }: _195.UseSupplyOfQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useTotalSupplyWithoutOffset: <TData_4 = _12.QueryTotalSupplyWithoutOffsetResponse>({ request, options }: _195.UseTotalSupplyWithoutOffsetQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useSupplyOfWithoutOffset: <TData_5 = _12.QuerySupplyOfWithoutOffsetResponse>({ request, options }: _195.UseSupplyOfWithoutOffsetQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useParams: <TData_6 = _12.QueryParamsResponse>({ request, options }: _195.UseParamsQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useDenomMetadata: <TData_7 = _12.QueryDenomMetadataResponse>({ request, options }: _195.UseDenomMetadataQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
                useDenomsMetadata: <TData_8 = _12.QueryDenomsMetadataResponse>({ request, options }: _195.UseDenomsMetadataQuery<TData_8>) => import("@tanstack/react-query").UseQueryResult<TData_8, Error>;
                useBaseDenom: <TData_9 = _12.QueryBaseDenomResponse>({ request, options }: _195.UseBaseDenomQuery<TData_9>) => import("@tanstack/react-query").UseQueryResult<TData_9, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    send(value: _13.MsgSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    multiSend(value: _13.MsgMultiSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    send(value: _13.MsgSend): {
                        typeUrl: string;
                        value: _13.MsgSend;
                    };
                    multiSend(value: _13.MsgMultiSend): {
                        typeUrl: string;
                        value: _13.MsgMultiSend;
                    };
                };
                toJSON: {
                    send(value: _13.MsgSend): {
                        typeUrl: string;
                        value: unknown;
                    };
                    multiSend(value: _13.MsgMultiSend): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    send(value: any): {
                        typeUrl: string;
                        value: _13.MsgSend;
                    };
                    multiSend(value: any): {
                        typeUrl: string;
                        value: _13.MsgMultiSend;
                    };
                };
                fromPartial: {
                    send(value: _13.MsgSend): {
                        typeUrl: string;
                        value: _13.MsgSend;
                    };
                    multiSend(value: _13.MsgMultiSend): {
                        typeUrl: string;
                        value: _13.MsgMultiSend;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.bank.v1beta1.MsgSend": {
                    aminoType: string;
                    toAmino: (message: _13.MsgSend) => _13.MsgSendAmino;
                    fromAmino: (object: _13.MsgSendAmino) => _13.MsgSend;
                };
                "/cosmos.bank.v1beta1.MsgMultiSend": {
                    aminoType: string;
                    toAmino: (message: _13.MsgMultiSend) => _13.MsgMultiSendAmino;
                    fromAmino: (object: _13.MsgMultiSendAmino) => _13.MsgMultiSend;
                };
            };
            MsgSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _13.MsgSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _13.MsgSend;
                fromJSON(object: any): _13.MsgSend;
                toJSON(message: _13.MsgSend): unknown;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _13.MsgSend;
                fromSDK(object: _13.MsgSendSDKType): _13.MsgSend;
                toSDK(message: _13.MsgSend): _13.MsgSendSDKType;
                fromAmino(object: _13.MsgSendAmino): _13.MsgSend;
                toAmino(message: _13.MsgSend): _13.MsgSendAmino;
                fromAminoMsg(object: _13.MsgSendAminoMsg): _13.MsgSend;
                toAminoMsg(message: _13.MsgSend): _13.MsgSendAminoMsg;
                fromProtoMsg(message: _13.MsgSendProtoMsg): _13.MsgSend;
                toProto(message: _13.MsgSend): Uint8Array;
                toProtoMsg(message: _13.MsgSend): _13.MsgSendProtoMsg;
            };
            MsgSendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _13.MsgSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _13.MsgSendResponse;
                fromJSON(_: any): _13.MsgSendResponse;
                toJSON(_: _13.MsgSendResponse): unknown;
                fromPartial(_: {}): _13.MsgSendResponse;
                fromSDK(_: _13.MsgSendResponseSDKType): _13.MsgSendResponse;
                toSDK(_: _13.MsgSendResponse): _13.MsgSendResponseSDKType;
                fromAmino(_: _13.MsgSendResponseAmino): _13.MsgSendResponse;
                toAmino(_: _13.MsgSendResponse): _13.MsgSendResponseAmino;
                fromAminoMsg(object: _13.MsgSendResponseAminoMsg): _13.MsgSendResponse;
                toAminoMsg(message: _13.MsgSendResponse): _13.MsgSendResponseAminoMsg;
                fromProtoMsg(message: _13.MsgSendResponseProtoMsg): _13.MsgSendResponse;
                toProto(message: _13.MsgSendResponse): Uint8Array;
                toProtoMsg(message: _13.MsgSendResponse): _13.MsgSendResponseProtoMsg;
            };
            MsgMultiSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _13.MsgMultiSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _13.MsgMultiSend;
                fromJSON(object: any): _13.MsgMultiSend;
                toJSON(message: _13.MsgMultiSend): unknown;
                fromPartial(object: {
                    inputs?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    outputs?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _13.MsgMultiSend;
                fromSDK(object: _13.MsgMultiSendSDKType): _13.MsgMultiSend;
                toSDK(message: _13.MsgMultiSend): _13.MsgMultiSendSDKType;
                fromAmino(object: _13.MsgMultiSendAmino): _13.MsgMultiSend;
                toAmino(message: _13.MsgMultiSend): _13.MsgMultiSendAmino;
                fromAminoMsg(object: _13.MsgMultiSendAminoMsg): _13.MsgMultiSend;
                toAminoMsg(message: _13.MsgMultiSend): _13.MsgMultiSendAminoMsg;
                fromProtoMsg(message: _13.MsgMultiSendProtoMsg): _13.MsgMultiSend;
                toProto(message: _13.MsgMultiSend): Uint8Array;
                toProtoMsg(message: _13.MsgMultiSend): _13.MsgMultiSendProtoMsg;
            };
            MsgMultiSendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _13.MsgMultiSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _13.MsgMultiSendResponse;
                fromJSON(_: any): _13.MsgMultiSendResponse;
                toJSON(_: _13.MsgMultiSendResponse): unknown;
                fromPartial(_: {}): _13.MsgMultiSendResponse;
                fromSDK(_: _13.MsgMultiSendResponseSDKType): _13.MsgMultiSendResponse;
                toSDK(_: _13.MsgMultiSendResponse): _13.MsgMultiSendResponseSDKType;
                fromAmino(_: _13.MsgMultiSendResponseAmino): _13.MsgMultiSendResponse;
                toAmino(_: _13.MsgMultiSendResponse): _13.MsgMultiSendResponseAmino;
                fromAminoMsg(object: _13.MsgMultiSendResponseAminoMsg): _13.MsgMultiSendResponse;
                toAminoMsg(message: _13.MsgMultiSendResponse): _13.MsgMultiSendResponseAminoMsg;
                fromProtoMsg(message: _13.MsgMultiSendResponseProtoMsg): _13.MsgMultiSendResponse;
                toProto(message: _13.MsgMultiSendResponse): Uint8Array;
                toProtoMsg(message: _13.MsgMultiSendResponse): _13.MsgMultiSendResponseProtoMsg;
            };
            QueryBalanceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryBalanceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryBalanceRequest;
                fromJSON(object: any): _12.QueryBalanceRequest;
                toJSON(message: _12.QueryBalanceRequest): unknown;
                fromPartial(object: {
                    address?: string;
                    denom?: string;
                }): _12.QueryBalanceRequest;
                fromSDK(object: _12.QueryBalanceRequestSDKType): _12.QueryBalanceRequest;
                toSDK(message: _12.QueryBalanceRequest): _12.QueryBalanceRequestSDKType;
                fromAmino(object: _12.QueryBalanceRequestAmino): _12.QueryBalanceRequest;
                toAmino(message: _12.QueryBalanceRequest): _12.QueryBalanceRequestAmino;
                fromAminoMsg(object: _12.QueryBalanceRequestAminoMsg): _12.QueryBalanceRequest;
                toAminoMsg(message: _12.QueryBalanceRequest): _12.QueryBalanceRequestAminoMsg;
                fromProtoMsg(message: _12.QueryBalanceRequestProtoMsg): _12.QueryBalanceRequest;
                toProto(message: _12.QueryBalanceRequest): Uint8Array;
                toProtoMsg(message: _12.QueryBalanceRequest): _12.QueryBalanceRequestProtoMsg;
            };
            QueryBalanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryBalanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryBalanceResponse;
                fromJSON(object: any): _12.QueryBalanceResponse;
                toJSON(message: _12.QueryBalanceResponse): unknown;
                fromPartial(object: {
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _12.QueryBalanceResponse;
                fromSDK(object: _12.QueryBalanceResponseSDKType): _12.QueryBalanceResponse;
                toSDK(message: _12.QueryBalanceResponse): _12.QueryBalanceResponseSDKType;
                fromAmino(object: _12.QueryBalanceResponseAmino): _12.QueryBalanceResponse;
                toAmino(message: _12.QueryBalanceResponse): _12.QueryBalanceResponseAmino;
                fromAminoMsg(object: _12.QueryBalanceResponseAminoMsg): _12.QueryBalanceResponse;
                toAminoMsg(message: _12.QueryBalanceResponse): _12.QueryBalanceResponseAminoMsg;
                fromProtoMsg(message: _12.QueryBalanceResponseProtoMsg): _12.QueryBalanceResponse;
                toProto(message: _12.QueryBalanceResponse): Uint8Array;
                toProtoMsg(message: _12.QueryBalanceResponse): _12.QueryBalanceResponseProtoMsg;
            };
            QueryAllBalancesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryAllBalancesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryAllBalancesRequest;
                fromJSON(object: any): _12.QueryAllBalancesRequest;
                toJSON(message: _12.QueryAllBalancesRequest): unknown;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _12.QueryAllBalancesRequest;
                fromSDK(object: _12.QueryAllBalancesRequestSDKType): _12.QueryAllBalancesRequest;
                toSDK(message: _12.QueryAllBalancesRequest): _12.QueryAllBalancesRequestSDKType;
                fromAmino(object: _12.QueryAllBalancesRequestAmino): _12.QueryAllBalancesRequest;
                toAmino(message: _12.QueryAllBalancesRequest): _12.QueryAllBalancesRequestAmino;
                fromAminoMsg(object: _12.QueryAllBalancesRequestAminoMsg): _12.QueryAllBalancesRequest;
                toAminoMsg(message: _12.QueryAllBalancesRequest): _12.QueryAllBalancesRequestAminoMsg;
                fromProtoMsg(message: _12.QueryAllBalancesRequestProtoMsg): _12.QueryAllBalancesRequest;
                toProto(message: _12.QueryAllBalancesRequest): Uint8Array;
                toProtoMsg(message: _12.QueryAllBalancesRequest): _12.QueryAllBalancesRequestProtoMsg;
            };
            QueryAllBalancesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryAllBalancesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryAllBalancesResponse;
                fromJSON(object: any): _12.QueryAllBalancesResponse;
                toJSON(message: _12.QueryAllBalancesResponse): unknown;
                fromPartial(object: {
                    balances?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _12.QueryAllBalancesResponse;
                fromSDK(object: _12.QueryAllBalancesResponseSDKType): _12.QueryAllBalancesResponse;
                toSDK(message: _12.QueryAllBalancesResponse): _12.QueryAllBalancesResponseSDKType;
                fromAmino(object: _12.QueryAllBalancesResponseAmino): _12.QueryAllBalancesResponse;
                toAmino(message: _12.QueryAllBalancesResponse): _12.QueryAllBalancesResponseAmino;
                fromAminoMsg(object: _12.QueryAllBalancesResponseAminoMsg): _12.QueryAllBalancesResponse;
                toAminoMsg(message: _12.QueryAllBalancesResponse): _12.QueryAllBalancesResponseAminoMsg;
                fromProtoMsg(message: _12.QueryAllBalancesResponseProtoMsg): _12.QueryAllBalancesResponse;
                toProto(message: _12.QueryAllBalancesResponse): Uint8Array;
                toProtoMsg(message: _12.QueryAllBalancesResponse): _12.QueryAllBalancesResponseProtoMsg;
            };
            QueryTotalSupplyRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryTotalSupplyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryTotalSupplyRequest;
                fromJSON(object: any): _12.QueryTotalSupplyRequest;
                toJSON(message: _12.QueryTotalSupplyRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _12.QueryTotalSupplyRequest;
                fromSDK(object: _12.QueryTotalSupplyRequestSDKType): _12.QueryTotalSupplyRequest;
                toSDK(message: _12.QueryTotalSupplyRequest): _12.QueryTotalSupplyRequestSDKType;
                fromAmino(object: _12.QueryTotalSupplyRequestAmino): _12.QueryTotalSupplyRequest;
                toAmino(message: _12.QueryTotalSupplyRequest): _12.QueryTotalSupplyRequestAmino;
                fromAminoMsg(object: _12.QueryTotalSupplyRequestAminoMsg): _12.QueryTotalSupplyRequest;
                toAminoMsg(message: _12.QueryTotalSupplyRequest): _12.QueryTotalSupplyRequestAminoMsg;
                fromProtoMsg(message: _12.QueryTotalSupplyRequestProtoMsg): _12.QueryTotalSupplyRequest;
                toProto(message: _12.QueryTotalSupplyRequest): Uint8Array;
                toProtoMsg(message: _12.QueryTotalSupplyRequest): _12.QueryTotalSupplyRequestProtoMsg;
            };
            QueryTotalSupplyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryTotalSupplyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryTotalSupplyResponse;
                fromJSON(object: any): _12.QueryTotalSupplyResponse;
                toJSON(message: _12.QueryTotalSupplyResponse): unknown;
                fromPartial(object: {
                    supply?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _12.QueryTotalSupplyResponse;
                fromSDK(object: _12.QueryTotalSupplyResponseSDKType): _12.QueryTotalSupplyResponse;
                toSDK(message: _12.QueryTotalSupplyResponse): _12.QueryTotalSupplyResponseSDKType;
                fromAmino(object: _12.QueryTotalSupplyResponseAmino): _12.QueryTotalSupplyResponse;
                toAmino(message: _12.QueryTotalSupplyResponse): _12.QueryTotalSupplyResponseAmino;
                fromAminoMsg(object: _12.QueryTotalSupplyResponseAminoMsg): _12.QueryTotalSupplyResponse;
                toAminoMsg(message: _12.QueryTotalSupplyResponse): _12.QueryTotalSupplyResponseAminoMsg;
                fromProtoMsg(message: _12.QueryTotalSupplyResponseProtoMsg): _12.QueryTotalSupplyResponse;
                toProto(message: _12.QueryTotalSupplyResponse): Uint8Array;
                toProtoMsg(message: _12.QueryTotalSupplyResponse): _12.QueryTotalSupplyResponseProtoMsg;
            };
            QuerySupplyOfRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QuerySupplyOfRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QuerySupplyOfRequest;
                fromJSON(object: any): _12.QuerySupplyOfRequest;
                toJSON(message: _12.QuerySupplyOfRequest): unknown;
                fromPartial(object: {
                    denom?: string;
                }): _12.QuerySupplyOfRequest;
                fromSDK(object: _12.QuerySupplyOfRequestSDKType): _12.QuerySupplyOfRequest;
                toSDK(message: _12.QuerySupplyOfRequest): _12.QuerySupplyOfRequestSDKType;
                fromAmino(object: _12.QuerySupplyOfRequestAmino): _12.QuerySupplyOfRequest;
                toAmino(message: _12.QuerySupplyOfRequest): _12.QuerySupplyOfRequestAmino;
                fromAminoMsg(object: _12.QuerySupplyOfRequestAminoMsg): _12.QuerySupplyOfRequest;
                toAminoMsg(message: _12.QuerySupplyOfRequest): _12.QuerySupplyOfRequestAminoMsg;
                fromProtoMsg(message: _12.QuerySupplyOfRequestProtoMsg): _12.QuerySupplyOfRequest;
                toProto(message: _12.QuerySupplyOfRequest): Uint8Array;
                toProtoMsg(message: _12.QuerySupplyOfRequest): _12.QuerySupplyOfRequestProtoMsg;
            };
            QuerySupplyOfResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QuerySupplyOfResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QuerySupplyOfResponse;
                fromJSON(object: any): _12.QuerySupplyOfResponse;
                toJSON(message: _12.QuerySupplyOfResponse): unknown;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _12.QuerySupplyOfResponse;
                fromSDK(object: _12.QuerySupplyOfResponseSDKType): _12.QuerySupplyOfResponse;
                toSDK(message: _12.QuerySupplyOfResponse): _12.QuerySupplyOfResponseSDKType;
                fromAmino(object: _12.QuerySupplyOfResponseAmino): _12.QuerySupplyOfResponse;
                toAmino(message: _12.QuerySupplyOfResponse): _12.QuerySupplyOfResponseAmino;
                fromAminoMsg(object: _12.QuerySupplyOfResponseAminoMsg): _12.QuerySupplyOfResponse;
                toAminoMsg(message: _12.QuerySupplyOfResponse): _12.QuerySupplyOfResponseAminoMsg;
                fromProtoMsg(message: _12.QuerySupplyOfResponseProtoMsg): _12.QuerySupplyOfResponse;
                toProto(message: _12.QuerySupplyOfResponse): Uint8Array;
                toProtoMsg(message: _12.QuerySupplyOfResponse): _12.QuerySupplyOfResponseProtoMsg;
            };
            QueryTotalSupplyWithoutOffsetRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryTotalSupplyWithoutOffsetRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryTotalSupplyWithoutOffsetRequest;
                fromJSON(object: any): _12.QueryTotalSupplyWithoutOffsetRequest;
                toJSON(message: _12.QueryTotalSupplyWithoutOffsetRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _12.QueryTotalSupplyWithoutOffsetRequest;
                fromSDK(object: _12.QueryTotalSupplyWithoutOffsetRequestSDKType): _12.QueryTotalSupplyWithoutOffsetRequest;
                toSDK(message: _12.QueryTotalSupplyWithoutOffsetRequest): _12.QueryTotalSupplyWithoutOffsetRequestSDKType;
                fromAmino(object: _12.QueryTotalSupplyWithoutOffsetRequestAmino): _12.QueryTotalSupplyWithoutOffsetRequest;
                toAmino(message: _12.QueryTotalSupplyWithoutOffsetRequest): _12.QueryTotalSupplyWithoutOffsetRequestAmino;
                fromAminoMsg(object: _12.QueryTotalSupplyWithoutOffsetRequestAminoMsg): _12.QueryTotalSupplyWithoutOffsetRequest;
                toAminoMsg(message: _12.QueryTotalSupplyWithoutOffsetRequest): _12.QueryTotalSupplyWithoutOffsetRequestAminoMsg;
                fromProtoMsg(message: _12.QueryTotalSupplyWithoutOffsetRequestProtoMsg): _12.QueryTotalSupplyWithoutOffsetRequest;
                toProto(message: _12.QueryTotalSupplyWithoutOffsetRequest): Uint8Array;
                toProtoMsg(message: _12.QueryTotalSupplyWithoutOffsetRequest): _12.QueryTotalSupplyWithoutOffsetRequestProtoMsg;
            };
            QueryTotalSupplyWithoutOffsetResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryTotalSupplyWithoutOffsetResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryTotalSupplyWithoutOffsetResponse;
                fromJSON(object: any): _12.QueryTotalSupplyWithoutOffsetResponse;
                toJSON(message: _12.QueryTotalSupplyWithoutOffsetResponse): unknown;
                fromPartial(object: {
                    supply?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _12.QueryTotalSupplyWithoutOffsetResponse;
                fromSDK(object: _12.QueryTotalSupplyWithoutOffsetResponseSDKType): _12.QueryTotalSupplyWithoutOffsetResponse;
                toSDK(message: _12.QueryTotalSupplyWithoutOffsetResponse): _12.QueryTotalSupplyWithoutOffsetResponseSDKType;
                fromAmino(object: _12.QueryTotalSupplyWithoutOffsetResponseAmino): _12.QueryTotalSupplyWithoutOffsetResponse;
                toAmino(message: _12.QueryTotalSupplyWithoutOffsetResponse): _12.QueryTotalSupplyWithoutOffsetResponseAmino;
                fromAminoMsg(object: _12.QueryTotalSupplyWithoutOffsetResponseAminoMsg): _12.QueryTotalSupplyWithoutOffsetResponse;
                toAminoMsg(message: _12.QueryTotalSupplyWithoutOffsetResponse): _12.QueryTotalSupplyWithoutOffsetResponseAminoMsg;
                fromProtoMsg(message: _12.QueryTotalSupplyWithoutOffsetResponseProtoMsg): _12.QueryTotalSupplyWithoutOffsetResponse;
                toProto(message: _12.QueryTotalSupplyWithoutOffsetResponse): Uint8Array;
                toProtoMsg(message: _12.QueryTotalSupplyWithoutOffsetResponse): _12.QueryTotalSupplyWithoutOffsetResponseProtoMsg;
            };
            QuerySupplyOfWithoutOffsetRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QuerySupplyOfWithoutOffsetRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QuerySupplyOfWithoutOffsetRequest;
                fromJSON(object: any): _12.QuerySupplyOfWithoutOffsetRequest;
                toJSON(message: _12.QuerySupplyOfWithoutOffsetRequest): unknown;
                fromPartial(object: {
                    denom?: string;
                }): _12.QuerySupplyOfWithoutOffsetRequest;
                fromSDK(object: _12.QuerySupplyOfWithoutOffsetRequestSDKType): _12.QuerySupplyOfWithoutOffsetRequest;
                toSDK(message: _12.QuerySupplyOfWithoutOffsetRequest): _12.QuerySupplyOfWithoutOffsetRequestSDKType;
                fromAmino(object: _12.QuerySupplyOfWithoutOffsetRequestAmino): _12.QuerySupplyOfWithoutOffsetRequest;
                toAmino(message: _12.QuerySupplyOfWithoutOffsetRequest): _12.QuerySupplyOfWithoutOffsetRequestAmino;
                fromAminoMsg(object: _12.QuerySupplyOfWithoutOffsetRequestAminoMsg): _12.QuerySupplyOfWithoutOffsetRequest;
                toAminoMsg(message: _12.QuerySupplyOfWithoutOffsetRequest): _12.QuerySupplyOfWithoutOffsetRequestAminoMsg;
                fromProtoMsg(message: _12.QuerySupplyOfWithoutOffsetRequestProtoMsg): _12.QuerySupplyOfWithoutOffsetRequest;
                toProto(message: _12.QuerySupplyOfWithoutOffsetRequest): Uint8Array;
                toProtoMsg(message: _12.QuerySupplyOfWithoutOffsetRequest): _12.QuerySupplyOfWithoutOffsetRequestProtoMsg;
            };
            QuerySupplyOfWithoutOffsetResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QuerySupplyOfWithoutOffsetResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QuerySupplyOfWithoutOffsetResponse;
                fromJSON(object: any): _12.QuerySupplyOfWithoutOffsetResponse;
                toJSON(message: _12.QuerySupplyOfWithoutOffsetResponse): unknown;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _12.QuerySupplyOfWithoutOffsetResponse;
                fromSDK(object: _12.QuerySupplyOfWithoutOffsetResponseSDKType): _12.QuerySupplyOfWithoutOffsetResponse;
                toSDK(message: _12.QuerySupplyOfWithoutOffsetResponse): _12.QuerySupplyOfWithoutOffsetResponseSDKType;
                fromAmino(object: _12.QuerySupplyOfWithoutOffsetResponseAmino): _12.QuerySupplyOfWithoutOffsetResponse;
                toAmino(message: _12.QuerySupplyOfWithoutOffsetResponse): _12.QuerySupplyOfWithoutOffsetResponseAmino;
                fromAminoMsg(object: _12.QuerySupplyOfWithoutOffsetResponseAminoMsg): _12.QuerySupplyOfWithoutOffsetResponse;
                toAminoMsg(message: _12.QuerySupplyOfWithoutOffsetResponse): _12.QuerySupplyOfWithoutOffsetResponseAminoMsg;
                fromProtoMsg(message: _12.QuerySupplyOfWithoutOffsetResponseProtoMsg): _12.QuerySupplyOfWithoutOffsetResponse;
                toProto(message: _12.QuerySupplyOfWithoutOffsetResponse): Uint8Array;
                toProtoMsg(message: _12.QuerySupplyOfWithoutOffsetResponse): _12.QuerySupplyOfWithoutOffsetResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _12.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryParamsRequest;
                fromJSON(_: any): _12.QueryParamsRequest;
                toJSON(_: _12.QueryParamsRequest): unknown;
                fromPartial(_: {}): _12.QueryParamsRequest;
                fromSDK(_: _12.QueryParamsRequestSDKType): _12.QueryParamsRequest;
                toSDK(_: _12.QueryParamsRequest): _12.QueryParamsRequestSDKType;
                fromAmino(_: _12.QueryParamsRequestAmino): _12.QueryParamsRequest;
                toAmino(_: _12.QueryParamsRequest): _12.QueryParamsRequestAmino;
                fromAminoMsg(object: _12.QueryParamsRequestAminoMsg): _12.QueryParamsRequest;
                toAminoMsg(message: _12.QueryParamsRequest): _12.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _12.QueryParamsRequestProtoMsg): _12.QueryParamsRequest;
                toProto(message: _12.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _12.QueryParamsRequest): _12.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryParamsResponse;
                fromJSON(object: any): _12.QueryParamsResponse;
                toJSON(message: _12.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        sendEnabled?: {
                            denom?: string;
                            enabled?: boolean;
                        }[];
                        defaultSendEnabled?: boolean;
                    };
                }): _12.QueryParamsResponse;
                fromSDK(object: _12.QueryParamsResponseSDKType): _12.QueryParamsResponse;
                toSDK(message: _12.QueryParamsResponse): _12.QueryParamsResponseSDKType;
                fromAmino(object: _12.QueryParamsResponseAmino): _12.QueryParamsResponse;
                toAmino(message: _12.QueryParamsResponse): _12.QueryParamsResponseAmino;
                fromAminoMsg(object: _12.QueryParamsResponseAminoMsg): _12.QueryParamsResponse;
                toAminoMsg(message: _12.QueryParamsResponse): _12.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _12.QueryParamsResponseProtoMsg): _12.QueryParamsResponse;
                toProto(message: _12.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _12.QueryParamsResponse): _12.QueryParamsResponseProtoMsg;
            };
            QueryDenomsMetadataRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryDenomsMetadataRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryDenomsMetadataRequest;
                fromJSON(object: any): _12.QueryDenomsMetadataRequest;
                toJSON(message: _12.QueryDenomsMetadataRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _12.QueryDenomsMetadataRequest;
                fromSDK(object: _12.QueryDenomsMetadataRequestSDKType): _12.QueryDenomsMetadataRequest;
                toSDK(message: _12.QueryDenomsMetadataRequest): _12.QueryDenomsMetadataRequestSDKType;
                fromAmino(object: _12.QueryDenomsMetadataRequestAmino): _12.QueryDenomsMetadataRequest;
                toAmino(message: _12.QueryDenomsMetadataRequest): _12.QueryDenomsMetadataRequestAmino;
                fromAminoMsg(object: _12.QueryDenomsMetadataRequestAminoMsg): _12.QueryDenomsMetadataRequest;
                toAminoMsg(message: _12.QueryDenomsMetadataRequest): _12.QueryDenomsMetadataRequestAminoMsg;
                fromProtoMsg(message: _12.QueryDenomsMetadataRequestProtoMsg): _12.QueryDenomsMetadataRequest;
                toProto(message: _12.QueryDenomsMetadataRequest): Uint8Array;
                toProtoMsg(message: _12.QueryDenomsMetadataRequest): _12.QueryDenomsMetadataRequestProtoMsg;
            };
            QueryDenomsMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryDenomsMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryDenomsMetadataResponse;
                fromJSON(object: any): _12.QueryDenomsMetadataResponse;
                toJSON(message: _12.QueryDenomsMetadataResponse): unknown;
                fromPartial(object: {
                    metadatas?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _12.QueryDenomsMetadataResponse;
                fromSDK(object: _12.QueryDenomsMetadataResponseSDKType): _12.QueryDenomsMetadataResponse;
                toSDK(message: _12.QueryDenomsMetadataResponse): _12.QueryDenomsMetadataResponseSDKType;
                fromAmino(object: _12.QueryDenomsMetadataResponseAmino): _12.QueryDenomsMetadataResponse;
                toAmino(message: _12.QueryDenomsMetadataResponse): _12.QueryDenomsMetadataResponseAmino;
                fromAminoMsg(object: _12.QueryDenomsMetadataResponseAminoMsg): _12.QueryDenomsMetadataResponse;
                toAminoMsg(message: _12.QueryDenomsMetadataResponse): _12.QueryDenomsMetadataResponseAminoMsg;
                fromProtoMsg(message: _12.QueryDenomsMetadataResponseProtoMsg): _12.QueryDenomsMetadataResponse;
                toProto(message: _12.QueryDenomsMetadataResponse): Uint8Array;
                toProtoMsg(message: _12.QueryDenomsMetadataResponse): _12.QueryDenomsMetadataResponseProtoMsg;
            };
            QueryDenomMetadataRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryDenomMetadataRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryDenomMetadataRequest;
                fromJSON(object: any): _12.QueryDenomMetadataRequest;
                toJSON(message: _12.QueryDenomMetadataRequest): unknown;
                fromPartial(object: {
                    denom?: string;
                }): _12.QueryDenomMetadataRequest;
                fromSDK(object: _12.QueryDenomMetadataRequestSDKType): _12.QueryDenomMetadataRequest;
                toSDK(message: _12.QueryDenomMetadataRequest): _12.QueryDenomMetadataRequestSDKType;
                fromAmino(object: _12.QueryDenomMetadataRequestAmino): _12.QueryDenomMetadataRequest;
                toAmino(message: _12.QueryDenomMetadataRequest): _12.QueryDenomMetadataRequestAmino;
                fromAminoMsg(object: _12.QueryDenomMetadataRequestAminoMsg): _12.QueryDenomMetadataRequest;
                toAminoMsg(message: _12.QueryDenomMetadataRequest): _12.QueryDenomMetadataRequestAminoMsg;
                fromProtoMsg(message: _12.QueryDenomMetadataRequestProtoMsg): _12.QueryDenomMetadataRequest;
                toProto(message: _12.QueryDenomMetadataRequest): Uint8Array;
                toProtoMsg(message: _12.QueryDenomMetadataRequest): _12.QueryDenomMetadataRequestProtoMsg;
            };
            QueryDenomMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryDenomMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryDenomMetadataResponse;
                fromJSON(object: any): _12.QueryDenomMetadataResponse;
                toJSON(message: _12.QueryDenomMetadataResponse): unknown;
                fromPartial(object: {
                    metadata?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                    };
                }): _12.QueryDenomMetadataResponse;
                fromSDK(object: _12.QueryDenomMetadataResponseSDKType): _12.QueryDenomMetadataResponse;
                toSDK(message: _12.QueryDenomMetadataResponse): _12.QueryDenomMetadataResponseSDKType;
                fromAmino(object: _12.QueryDenomMetadataResponseAmino): _12.QueryDenomMetadataResponse;
                toAmino(message: _12.QueryDenomMetadataResponse): _12.QueryDenomMetadataResponseAmino;
                fromAminoMsg(object: _12.QueryDenomMetadataResponseAminoMsg): _12.QueryDenomMetadataResponse;
                toAminoMsg(message: _12.QueryDenomMetadataResponse): _12.QueryDenomMetadataResponseAminoMsg;
                fromProtoMsg(message: _12.QueryDenomMetadataResponseProtoMsg): _12.QueryDenomMetadataResponse;
                toProto(message: _12.QueryDenomMetadataResponse): Uint8Array;
                toProtoMsg(message: _12.QueryDenomMetadataResponse): _12.QueryDenomMetadataResponseProtoMsg;
            };
            QueryBaseDenomRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryBaseDenomRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryBaseDenomRequest;
                fromJSON(object: any): _12.QueryBaseDenomRequest;
                toJSON(message: _12.QueryBaseDenomRequest): unknown;
                fromPartial(object: {
                    denom?: string;
                }): _12.QueryBaseDenomRequest;
                fromSDK(object: _12.QueryBaseDenomRequestSDKType): _12.QueryBaseDenomRequest;
                toSDK(message: _12.QueryBaseDenomRequest): _12.QueryBaseDenomRequestSDKType;
                fromAmino(object: _12.QueryBaseDenomRequestAmino): _12.QueryBaseDenomRequest;
                toAmino(message: _12.QueryBaseDenomRequest): _12.QueryBaseDenomRequestAmino;
                fromAminoMsg(object: _12.QueryBaseDenomRequestAminoMsg): _12.QueryBaseDenomRequest;
                toAminoMsg(message: _12.QueryBaseDenomRequest): _12.QueryBaseDenomRequestAminoMsg;
                fromProtoMsg(message: _12.QueryBaseDenomRequestProtoMsg): _12.QueryBaseDenomRequest;
                toProto(message: _12.QueryBaseDenomRequest): Uint8Array;
                toProtoMsg(message: _12.QueryBaseDenomRequest): _12.QueryBaseDenomRequestProtoMsg;
            };
            QueryBaseDenomResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.QueryBaseDenomResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.QueryBaseDenomResponse;
                fromJSON(object: any): _12.QueryBaseDenomResponse;
                toJSON(message: _12.QueryBaseDenomResponse): unknown;
                fromPartial(object: {
                    baseDenom?: string;
                }): _12.QueryBaseDenomResponse;
                fromSDK(object: _12.QueryBaseDenomResponseSDKType): _12.QueryBaseDenomResponse;
                toSDK(message: _12.QueryBaseDenomResponse): _12.QueryBaseDenomResponseSDKType;
                fromAmino(object: _12.QueryBaseDenomResponseAmino): _12.QueryBaseDenomResponse;
                toAmino(message: _12.QueryBaseDenomResponse): _12.QueryBaseDenomResponseAmino;
                fromAminoMsg(object: _12.QueryBaseDenomResponseAminoMsg): _12.QueryBaseDenomResponse;
                toAminoMsg(message: _12.QueryBaseDenomResponse): _12.QueryBaseDenomResponseAminoMsg;
                fromProtoMsg(message: _12.QueryBaseDenomResponseProtoMsg): _12.QueryBaseDenomResponse;
                toProto(message: _12.QueryBaseDenomResponse): Uint8Array;
                toProtoMsg(message: _12.QueryBaseDenomResponse): _12.QueryBaseDenomResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.GenesisState;
                fromJSON(object: any): _11.GenesisState;
                toJSON(message: _11.GenesisState): unknown;
                fromPartial(object: {
                    params?: {
                        sendEnabled?: {
                            denom?: string;
                            enabled?: boolean;
                        }[];
                        defaultSendEnabled?: boolean;
                    };
                    balances?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    supply?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    denomMetadata?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                    }[];
                    supplyOffsets?: {
                        denom?: string;
                        offset?: string;
                    }[];
                }): _11.GenesisState;
                fromSDK(object: _11.GenesisStateSDKType): _11.GenesisState;
                toSDK(message: _11.GenesisState): _11.GenesisStateSDKType;
                fromAmino(object: _11.GenesisStateAmino): _11.GenesisState;
                toAmino(message: _11.GenesisState): _11.GenesisStateAmino;
                fromAminoMsg(object: _11.GenesisStateAminoMsg): _11.GenesisState;
                toAminoMsg(message: _11.GenesisState): _11.GenesisStateAminoMsg;
                fromProtoMsg(message: _11.GenesisStateProtoMsg): _11.GenesisState;
                toProto(message: _11.GenesisState): Uint8Array;
                toProtoMsg(message: _11.GenesisState): _11.GenesisStateProtoMsg;
            };
            Balance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.Balance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.Balance;
                fromJSON(object: any): _11.Balance;
                toJSON(message: _11.Balance): unknown;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _11.Balance;
                fromSDK(object: _11.BalanceSDKType): _11.Balance;
                toSDK(message: _11.Balance): _11.BalanceSDKType;
                fromAmino(object: _11.BalanceAmino): _11.Balance;
                toAmino(message: _11.Balance): _11.BalanceAmino;
                fromAminoMsg(object: _11.BalanceAminoMsg): _11.Balance;
                toAminoMsg(message: _11.Balance): _11.BalanceAminoMsg;
                fromProtoMsg(message: _11.BalanceProtoMsg): _11.Balance;
                toProto(message: _11.Balance): Uint8Array;
                toProtoMsg(message: _11.Balance): _11.BalanceProtoMsg;
            };
            GenesisSupplyOffset: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.GenesisSupplyOffset, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.GenesisSupplyOffset;
                fromJSON(object: any): _11.GenesisSupplyOffset;
                toJSON(message: _11.GenesisSupplyOffset): unknown;
                fromPartial(object: {
                    denom?: string;
                    offset?: string;
                }): _11.GenesisSupplyOffset;
                fromSDK(object: _11.GenesisSupplyOffsetSDKType): _11.GenesisSupplyOffset;
                toSDK(message: _11.GenesisSupplyOffset): _11.GenesisSupplyOffsetSDKType;
                fromAmino(object: _11.GenesisSupplyOffsetAmino): _11.GenesisSupplyOffset;
                toAmino(message: _11.GenesisSupplyOffset): _11.GenesisSupplyOffsetAmino;
                fromAminoMsg(object: _11.GenesisSupplyOffsetAminoMsg): _11.GenesisSupplyOffset;
                toAminoMsg(message: _11.GenesisSupplyOffset): _11.GenesisSupplyOffsetAminoMsg;
                fromProtoMsg(message: _11.GenesisSupplyOffsetProtoMsg): _11.GenesisSupplyOffset;
                toProto(message: _11.GenesisSupplyOffset): Uint8Array;
                toProtoMsg(message: _11.GenesisSupplyOffset): _11.GenesisSupplyOffsetProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Params;
                fromJSON(object: any): _10.Params;
                toJSON(message: _10.Params): unknown;
                fromPartial(object: {
                    sendEnabled?: {
                        denom?: string;
                        enabled?: boolean;
                    }[];
                    defaultSendEnabled?: boolean;
                }): _10.Params;
                fromSDK(object: _10.ParamsSDKType): _10.Params;
                toSDK(message: _10.Params): _10.ParamsSDKType;
                fromAmino(object: _10.ParamsAmino): _10.Params;
                toAmino(message: _10.Params): _10.ParamsAmino;
                fromAminoMsg(object: _10.ParamsAminoMsg): _10.Params;
                toAminoMsg(message: _10.Params): _10.ParamsAminoMsg;
                fromProtoMsg(message: _10.ParamsProtoMsg): _10.Params;
                toProto(message: _10.Params): Uint8Array;
                toProtoMsg(message: _10.Params): _10.ParamsProtoMsg;
            };
            SendEnabled: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.SendEnabled, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.SendEnabled;
                fromJSON(object: any): _10.SendEnabled;
                toJSON(message: _10.SendEnabled): unknown;
                fromPartial(object: {
                    denom?: string;
                    enabled?: boolean;
                }): _10.SendEnabled;
                fromSDK(object: _10.SendEnabledSDKType): _10.SendEnabled;
                toSDK(message: _10.SendEnabled): _10.SendEnabledSDKType;
                fromAmino(object: _10.SendEnabledAmino): _10.SendEnabled;
                toAmino(message: _10.SendEnabled): _10.SendEnabledAmino;
                fromAminoMsg(object: _10.SendEnabledAminoMsg): _10.SendEnabled;
                toAminoMsg(message: _10.SendEnabled): _10.SendEnabledAminoMsg;
                fromProtoMsg(message: _10.SendEnabledProtoMsg): _10.SendEnabled;
                toProto(message: _10.SendEnabled): Uint8Array;
                toProtoMsg(message: _10.SendEnabled): _10.SendEnabledProtoMsg;
            };
            Input: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.Input, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Input;
                fromJSON(object: any): _10.Input;
                toJSON(message: _10.Input): unknown;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _10.Input;
                fromSDK(object: _10.InputSDKType): _10.Input;
                toSDK(message: _10.Input): _10.InputSDKType;
                fromAmino(object: _10.InputAmino): _10.Input;
                toAmino(message: _10.Input): _10.InputAmino;
                fromAminoMsg(object: _10.InputAminoMsg): _10.Input;
                toAminoMsg(message: _10.Input): _10.InputAminoMsg;
                fromProtoMsg(message: _10.InputProtoMsg): _10.Input;
                toProto(message: _10.Input): Uint8Array;
                toProtoMsg(message: _10.Input): _10.InputProtoMsg;
            };
            Output: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.Output, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Output;
                fromJSON(object: any): _10.Output;
                toJSON(message: _10.Output): unknown;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _10.Output;
                fromSDK(object: _10.OutputSDKType): _10.Output;
                toSDK(message: _10.Output): _10.OutputSDKType;
                fromAmino(object: _10.OutputAmino): _10.Output;
                toAmino(message: _10.Output): _10.OutputAmino;
                fromAminoMsg(object: _10.OutputAminoMsg): _10.Output;
                toAminoMsg(message: _10.Output): _10.OutputAminoMsg;
                fromProtoMsg(message: _10.OutputProtoMsg): _10.Output;
                toProto(message: _10.Output): Uint8Array;
                toProtoMsg(message: _10.Output): _10.OutputProtoMsg;
            };
            Supply: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.Supply, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Supply;
                fromJSON(object: any): _10.Supply;
                toJSON(message: _10.Supply): unknown;
                fromPartial(object: {
                    total?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _10.Supply;
                fromSDK(object: _10.SupplySDKType): _10.Supply;
                toSDK(message: _10.Supply): _10.SupplySDKType;
                fromAmino(object: _10.SupplyAmino): _10.Supply;
                toAmino(message: _10.Supply): _10.SupplyAmino;
                fromAminoMsg(object: _10.SupplyAminoMsg): _10.Supply;
                toAminoMsg(message: _10.Supply): _10.SupplyAminoMsg;
                fromProtoMsg(message: _10.SupplyProtoMsg): _10.Supply;
                toProto(message: _10.Supply): Uint8Array;
                toProtoMsg(message: _10.Supply): _10.SupplyProtoMsg;
            };
            DenomUnit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.DenomUnit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.DenomUnit;
                fromJSON(object: any): _10.DenomUnit;
                toJSON(message: _10.DenomUnit): unknown;
                fromPartial(object: {
                    denom?: string;
                    exponent?: number;
                    aliases?: string[];
                }): _10.DenomUnit;
                fromSDK(object: _10.DenomUnitSDKType): _10.DenomUnit;
                toSDK(message: _10.DenomUnit): _10.DenomUnitSDKType;
                fromAmino(object: _10.DenomUnitAmino): _10.DenomUnit;
                toAmino(message: _10.DenomUnit): _10.DenomUnitAmino;
                fromAminoMsg(object: _10.DenomUnitAminoMsg): _10.DenomUnit;
                toAminoMsg(message: _10.DenomUnit): _10.DenomUnitAminoMsg;
                fromProtoMsg(message: _10.DenomUnitProtoMsg): _10.DenomUnit;
                toProto(message: _10.DenomUnit): Uint8Array;
                toProtoMsg(message: _10.DenomUnit): _10.DenomUnitProtoMsg;
            };
            Metadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _10.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Metadata;
                fromJSON(object: any): _10.Metadata;
                toJSON(message: _10.Metadata): unknown;
                fromPartial(object: {
                    description?: string;
                    denomUnits?: {
                        denom?: string;
                        exponent?: number;
                        aliases?: string[];
                    }[];
                    base?: string;
                    display?: string;
                    name?: string;
                    symbol?: string;
                }): _10.Metadata;
                fromSDK(object: _10.MetadataSDKType): _10.Metadata;
                toSDK(message: _10.Metadata): _10.MetadataSDKType;
                fromAmino(object: _10.MetadataAmino): _10.Metadata;
                toAmino(message: _10.Metadata): _10.MetadataAmino;
                fromAminoMsg(object: _10.MetadataAminoMsg): _10.Metadata;
                toAminoMsg(message: _10.Metadata): _10.MetadataAminoMsg;
                fromProtoMsg(message: _10.MetadataProtoMsg): _10.Metadata;
                toProto(message: _10.Metadata): Uint8Array;
                toProtoMsg(message: _10.Metadata): _10.MetadataProtoMsg;
            };
            SendAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _9.SendAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _9.SendAuthorization;
                fromJSON(object: any): _9.SendAuthorization;
                toJSON(message: _9.SendAuthorization): unknown;
                fromPartial(object: {
                    spendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _9.SendAuthorization;
                fromSDK(object: _9.SendAuthorizationSDKType): _9.SendAuthorization;
                toSDK(message: _9.SendAuthorization): _9.SendAuthorizationSDKType;
                fromAmino(object: _9.SendAuthorizationAmino): _9.SendAuthorization;
                toAmino(message: _9.SendAuthorization): _9.SendAuthorizationAmino;
                fromAminoMsg(object: _9.SendAuthorizationAminoMsg): _9.SendAuthorization;
                toAminoMsg(message: _9.SendAuthorization): _9.SendAuthorizationAminoMsg;
                fromProtoMsg(message: _9.SendAuthorizationProtoMsg): _9.SendAuthorization;
                toProto(message: _9.SendAuthorization): Uint8Array;
                toProtoMsg(message: _9.SendAuthorization): _9.SendAuthorizationProtoMsg;
            };
        };
    }
    namespace base {
        namespace abci {
            const v1beta1: {
                TxResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.TxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.TxResponse;
                    fromJSON(object: any): _14.TxResponse;
                    toJSON(message: _14.TxResponse): unknown;
                    fromPartial(object: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    }): _14.TxResponse;
                    fromSDK(object: _14.TxResponseSDKType): _14.TxResponse;
                    toSDK(message: _14.TxResponse): _14.TxResponseSDKType;
                    fromAmino(object: _14.TxResponseAmino): _14.TxResponse;
                    toAmino(message: _14.TxResponse): _14.TxResponseAmino;
                    fromAminoMsg(object: _14.TxResponseAminoMsg): _14.TxResponse;
                    toAminoMsg(message: _14.TxResponse): _14.TxResponseAminoMsg;
                    fromProtoMsg(message: _14.TxResponseProtoMsg): _14.TxResponse;
                    toProto(message: _14.TxResponse): Uint8Array;
                    toProtoMsg(message: _14.TxResponse): _14.TxResponseProtoMsg;
                };
                ABCIMessageLog: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.ABCIMessageLog, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.ABCIMessageLog;
                    fromJSON(object: any): _14.ABCIMessageLog;
                    toJSON(message: _14.ABCIMessageLog): unknown;
                    fromPartial(object: {
                        msgIndex?: number;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                            }[];
                        }[];
                    }): _14.ABCIMessageLog;
                    fromSDK(object: _14.ABCIMessageLogSDKType): _14.ABCIMessageLog;
                    toSDK(message: _14.ABCIMessageLog): _14.ABCIMessageLogSDKType;
                    fromAmino(object: _14.ABCIMessageLogAmino): _14.ABCIMessageLog;
                    toAmino(message: _14.ABCIMessageLog): _14.ABCIMessageLogAmino;
                    fromAminoMsg(object: _14.ABCIMessageLogAminoMsg): _14.ABCIMessageLog;
                    toAminoMsg(message: _14.ABCIMessageLog): _14.ABCIMessageLogAminoMsg;
                    fromProtoMsg(message: _14.ABCIMessageLogProtoMsg): _14.ABCIMessageLog;
                    toProto(message: _14.ABCIMessageLog): Uint8Array;
                    toProtoMsg(message: _14.ABCIMessageLog): _14.ABCIMessageLogProtoMsg;
                };
                StringEvent: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.StringEvent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.StringEvent;
                    fromJSON(object: any): _14.StringEvent;
                    toJSON(message: _14.StringEvent): unknown;
                    fromPartial(object: {
                        type?: string;
                        attributes?: {
                            key?: string;
                            value?: string;
                        }[];
                    }): _14.StringEvent;
                    fromSDK(object: _14.StringEventSDKType): _14.StringEvent;
                    toSDK(message: _14.StringEvent): _14.StringEventSDKType;
                    fromAmino(object: _14.StringEventAmino): _14.StringEvent;
                    toAmino(message: _14.StringEvent): _14.StringEventAmino;
                    fromAminoMsg(object: _14.StringEventAminoMsg): _14.StringEvent;
                    toAminoMsg(message: _14.StringEvent): _14.StringEventAminoMsg;
                    fromProtoMsg(message: _14.StringEventProtoMsg): _14.StringEvent;
                    toProto(message: _14.StringEvent): Uint8Array;
                    toProtoMsg(message: _14.StringEvent): _14.StringEventProtoMsg;
                };
                Attribute: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.Attribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.Attribute;
                    fromJSON(object: any): _14.Attribute;
                    toJSON(message: _14.Attribute): unknown;
                    fromPartial(object: {
                        key?: string;
                        value?: string;
                    }): _14.Attribute;
                    fromSDK(object: _14.AttributeSDKType): _14.Attribute;
                    toSDK(message: _14.Attribute): _14.AttributeSDKType;
                    fromAmino(object: _14.AttributeAmino): _14.Attribute;
                    toAmino(message: _14.Attribute): _14.AttributeAmino;
                    fromAminoMsg(object: _14.AttributeAminoMsg): _14.Attribute;
                    toAminoMsg(message: _14.Attribute): _14.AttributeAminoMsg;
                    fromProtoMsg(message: _14.AttributeProtoMsg): _14.Attribute;
                    toProto(message: _14.Attribute): Uint8Array;
                    toProtoMsg(message: _14.Attribute): _14.AttributeProtoMsg;
                };
                GasInfo: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.GasInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.GasInfo;
                    fromJSON(object: any): _14.GasInfo;
                    toJSON(message: _14.GasInfo): unknown;
                    fromPartial(object: {
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                    }): _14.GasInfo;
                    fromSDK(object: _14.GasInfoSDKType): _14.GasInfo;
                    toSDK(message: _14.GasInfo): _14.GasInfoSDKType;
                    fromAmino(object: _14.GasInfoAmino): _14.GasInfo;
                    toAmino(message: _14.GasInfo): _14.GasInfoAmino;
                    fromAminoMsg(object: _14.GasInfoAminoMsg): _14.GasInfo;
                    toAminoMsg(message: _14.GasInfo): _14.GasInfoAminoMsg;
                    fromProtoMsg(message: _14.GasInfoProtoMsg): _14.GasInfo;
                    toProto(message: _14.GasInfo): Uint8Array;
                    toProtoMsg(message: _14.GasInfo): _14.GasInfoProtoMsg;
                };
                Result: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.Result, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.Result;
                    fromJSON(object: any): _14.Result;
                    toJSON(message: _14.Result): unknown;
                    fromPartial(object: {
                        data?: Uint8Array;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    }): _14.Result;
                    fromSDK(object: _14.ResultSDKType): _14.Result;
                    toSDK(message: _14.Result): _14.ResultSDKType;
                    fromAmino(object: _14.ResultAmino): _14.Result;
                    toAmino(message: _14.Result): _14.ResultAmino;
                    fromAminoMsg(object: _14.ResultAminoMsg): _14.Result;
                    toAminoMsg(message: _14.Result): _14.ResultAminoMsg;
                    fromProtoMsg(message: _14.ResultProtoMsg): _14.Result;
                    toProto(message: _14.Result): Uint8Array;
                    toProtoMsg(message: _14.Result): _14.ResultProtoMsg;
                };
                SimulationResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.SimulationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.SimulationResponse;
                    fromJSON(object: any): _14.SimulationResponse;
                    toJSON(message: _14.SimulationResponse): unknown;
                    fromPartial(object: {
                        gasInfo?: {
                            gasWanted?: bigint;
                            gasUsed?: bigint;
                        };
                        result?: {
                            data?: Uint8Array;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                        };
                    }): _14.SimulationResponse;
                    fromSDK(object: _14.SimulationResponseSDKType): _14.SimulationResponse;
                    toSDK(message: _14.SimulationResponse): _14.SimulationResponseSDKType;
                    fromAmino(object: _14.SimulationResponseAmino): _14.SimulationResponse;
                    toAmino(message: _14.SimulationResponse): _14.SimulationResponseAmino;
                    fromAminoMsg(object: _14.SimulationResponseAminoMsg): _14.SimulationResponse;
                    toAminoMsg(message: _14.SimulationResponse): _14.SimulationResponseAminoMsg;
                    fromProtoMsg(message: _14.SimulationResponseProtoMsg): _14.SimulationResponse;
                    toProto(message: _14.SimulationResponse): Uint8Array;
                    toProtoMsg(message: _14.SimulationResponse): _14.SimulationResponseProtoMsg;
                };
                MsgData: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.MsgData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.MsgData;
                    fromJSON(object: any): _14.MsgData;
                    toJSON(message: _14.MsgData): unknown;
                    fromPartial(object: {
                        msgType?: string;
                        data?: Uint8Array;
                    }): _14.MsgData;
                    fromSDK(object: _14.MsgDataSDKType): _14.MsgData;
                    toSDK(message: _14.MsgData): _14.MsgDataSDKType;
                    fromAmino(object: _14.MsgDataAmino): _14.MsgData;
                    toAmino(message: _14.MsgData): _14.MsgDataAmino;
                    fromAminoMsg(object: _14.MsgDataAminoMsg): _14.MsgData;
                    toAminoMsg(message: _14.MsgData): _14.MsgDataAminoMsg;
                    fromProtoMsg(message: _14.MsgDataProtoMsg): _14.MsgData;
                    toProto(message: _14.MsgData): Uint8Array;
                    toProtoMsg(message: _14.MsgData): _14.MsgDataProtoMsg;
                };
                TxMsgData: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.TxMsgData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.TxMsgData;
                    fromJSON(object: any): _14.TxMsgData;
                    toJSON(message: _14.TxMsgData): unknown;
                    fromPartial(object: {
                        data?: {
                            msgType?: string;
                            data?: Uint8Array;
                        }[];
                    }): _14.TxMsgData;
                    fromSDK(object: _14.TxMsgDataSDKType): _14.TxMsgData;
                    toSDK(message: _14.TxMsgData): _14.TxMsgDataSDKType;
                    fromAmino(object: _14.TxMsgDataAmino): _14.TxMsgData;
                    toAmino(message: _14.TxMsgData): _14.TxMsgDataAmino;
                    fromAminoMsg(object: _14.TxMsgDataAminoMsg): _14.TxMsgData;
                    toAminoMsg(message: _14.TxMsgData): _14.TxMsgDataAminoMsg;
                    fromProtoMsg(message: _14.TxMsgDataProtoMsg): _14.TxMsgData;
                    toProto(message: _14.TxMsgData): Uint8Array;
                    toProtoMsg(message: _14.TxMsgData): _14.TxMsgDataProtoMsg;
                };
                SearchTxsResult: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _14.SearchTxsResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.SearchTxsResult;
                    fromJSON(object: any): _14.SearchTxsResult;
                    toJSON(message: _14.SearchTxsResult): unknown;
                    fromPartial(object: {
                        totalCount?: bigint;
                        count?: bigint;
                        pageNumber?: bigint;
                        pageTotal?: bigint;
                        limit?: bigint;
                        txs?: {
                            height?: bigint;
                            txhash?: string;
                            codespace?: string;
                            code?: number;
                            data?: string;
                            rawLog?: string;
                            logs?: {
                                msgIndex?: number;
                                log?: string;
                                events?: {
                                    type?: string;
                                    attributes?: {
                                        key?: string;
                                        value?: string;
                                    }[];
                                }[];
                            }[];
                            info?: string;
                            gasWanted?: bigint;
                            gasUsed?: bigint;
                            tx?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            timestamp?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                        }[];
                    }): _14.SearchTxsResult;
                    fromSDK(object: _14.SearchTxsResultSDKType): _14.SearchTxsResult;
                    toSDK(message: _14.SearchTxsResult): _14.SearchTxsResultSDKType;
                    fromAmino(object: _14.SearchTxsResultAmino): _14.SearchTxsResult;
                    toAmino(message: _14.SearchTxsResult): _14.SearchTxsResultAmino;
                    fromAminoMsg(object: _14.SearchTxsResultAminoMsg): _14.SearchTxsResult;
                    toAminoMsg(message: _14.SearchTxsResult): _14.SearchTxsResultAminoMsg;
                    fromProtoMsg(message: _14.SearchTxsResultProtoMsg): _14.SearchTxsResult;
                    toProto(message: _14.SearchTxsResult): Uint8Array;
                    toProtoMsg(message: _14.SearchTxsResult): _14.SearchTxsResultProtoMsg;
                };
            };
        }
        namespace kv {
            const v1beta1: {
                Pairs: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _15.Pairs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.Pairs;
                    fromJSON(object: any): _15.Pairs;
                    toJSON(message: _15.Pairs): unknown;
                    fromPartial(object: {
                        pairs?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                        }[];
                    }): _15.Pairs;
                    fromSDK(object: _15.PairsSDKType): _15.Pairs;
                    toSDK(message: _15.Pairs): _15.PairsSDKType;
                    fromAmino(object: _15.PairsAmino): _15.Pairs;
                    toAmino(message: _15.Pairs): _15.PairsAmino;
                    fromAminoMsg(object: _15.PairsAminoMsg): _15.Pairs;
                    toAminoMsg(message: _15.Pairs): _15.PairsAminoMsg;
                    fromProtoMsg(message: _15.PairsProtoMsg): _15.Pairs;
                    toProto(message: _15.Pairs): Uint8Array;
                    toProtoMsg(message: _15.Pairs): _15.PairsProtoMsg;
                };
                Pair: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _15.Pair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.Pair;
                    fromJSON(object: any): _15.Pair;
                    toJSON(message: _15.Pair): unknown;
                    fromPartial(object: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                    }): _15.Pair;
                    fromSDK(object: _15.PairSDKType): _15.Pair;
                    toSDK(message: _15.Pair): _15.PairSDKType;
                    fromAmino(object: _15.PairAmino): _15.Pair;
                    toAmino(message: _15.Pair): _15.PairAmino;
                    fromAminoMsg(object: _15.PairAminoMsg): _15.Pair;
                    toAminoMsg(message: _15.Pair): _15.PairAminoMsg;
                    fromProtoMsg(message: _15.PairProtoMsg): _15.Pair;
                    toProto(message: _15.Pair): Uint8Array;
                    toProtoMsg(message: _15.Pair): _15.PairProtoMsg;
                };
            };
        }
        namespace node {
            const v1beta1: {
                ServiceClientImpl: typeof _196.ServiceClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    config(request?: _16.ConfigRequest): Promise<_16.ConfigResponse>;
                };
                createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                    useConfig: <TData = _16.ConfigResponse>({ request, options }: _196.UseConfigQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                };
                ConfigRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _16.ConfigRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _16.ConfigRequest;
                    fromJSON(_: any): _16.ConfigRequest;
                    toJSON(_: _16.ConfigRequest): unknown;
                    fromPartial(_: {}): _16.ConfigRequest;
                    fromSDK(_: _16.ConfigRequestSDKType): _16.ConfigRequest;
                    toSDK(_: _16.ConfigRequest): _16.ConfigRequestSDKType;
                    fromAmino(_: _16.ConfigRequestAmino): _16.ConfigRequest;
                    toAmino(_: _16.ConfigRequest): _16.ConfigRequestAmino;
                    fromAminoMsg(object: _16.ConfigRequestAminoMsg): _16.ConfigRequest;
                    toAminoMsg(message: _16.ConfigRequest): _16.ConfigRequestAminoMsg;
                    fromProtoMsg(message: _16.ConfigRequestProtoMsg): _16.ConfigRequest;
                    toProto(message: _16.ConfigRequest): Uint8Array;
                    toProtoMsg(message: _16.ConfigRequest): _16.ConfigRequestProtoMsg;
                };
                ConfigResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _16.ConfigResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _16.ConfigResponse;
                    fromJSON(object: any): _16.ConfigResponse;
                    toJSON(message: _16.ConfigResponse): unknown;
                    fromPartial(object: {
                        minimumGasPrice?: string;
                    }): _16.ConfigResponse;
                    fromSDK(object: _16.ConfigResponseSDKType): _16.ConfigResponse;
                    toSDK(message: _16.ConfigResponse): _16.ConfigResponseSDKType;
                    fromAmino(object: _16.ConfigResponseAmino): _16.ConfigResponse;
                    toAmino(message: _16.ConfigResponse): _16.ConfigResponseAmino;
                    fromAminoMsg(object: _16.ConfigResponseAminoMsg): _16.ConfigResponse;
                    toAminoMsg(message: _16.ConfigResponse): _16.ConfigResponseAminoMsg;
                    fromProtoMsg(message: _16.ConfigResponseProtoMsg): _16.ConfigResponse;
                    toProto(message: _16.ConfigResponse): Uint8Array;
                    toProtoMsg(message: _16.ConfigResponse): _16.ConfigResponseProtoMsg;
                };
            };
        }
        namespace query {
            const v1beta1: {
                PageRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _17.PageRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _17.PageRequest;
                    fromJSON(object: any): _17.PageRequest;
                    toJSON(message: _17.PageRequest): unknown;
                    fromPartial(object: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    }): _17.PageRequest;
                    fromSDK(object: _17.PageRequestSDKType): _17.PageRequest;
                    toSDK(message: _17.PageRequest): _17.PageRequestSDKType;
                    fromAmino(object: _17.PageRequestAmino): _17.PageRequest;
                    toAmino(message: _17.PageRequest): _17.PageRequestAmino;
                    fromAminoMsg(object: _17.PageRequestAminoMsg): _17.PageRequest;
                    toAminoMsg(message: _17.PageRequest): _17.PageRequestAminoMsg;
                    fromProtoMsg(message: _17.PageRequestProtoMsg): _17.PageRequest;
                    toProto(message: _17.PageRequest): Uint8Array;
                    toProtoMsg(message: _17.PageRequest): _17.PageRequestProtoMsg;
                };
                PageResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _17.PageResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _17.PageResponse;
                    fromJSON(object: any): _17.PageResponse;
                    toJSON(message: _17.PageResponse): unknown;
                    fromPartial(object: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    }): _17.PageResponse;
                    fromSDK(object: _17.PageResponseSDKType): _17.PageResponse;
                    toSDK(message: _17.PageResponse): _17.PageResponseSDKType;
                    fromAmino(object: _17.PageResponseAmino): _17.PageResponse;
                    toAmino(message: _17.PageResponse): _17.PageResponseAmino;
                    fromAminoMsg(object: _17.PageResponseAminoMsg): _17.PageResponse;
                    toAminoMsg(message: _17.PageResponse): _17.PageResponseAminoMsg;
                    fromProtoMsg(message: _17.PageResponseProtoMsg): _17.PageResponse;
                    toProto(message: _17.PageResponse): Uint8Array;
                    toProtoMsg(message: _17.PageResponse): _17.PageResponseProtoMsg;
                };
            };
        }
        namespace reflection {
            const v1beta1: {
                ListAllInterfacesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _18.ListAllInterfacesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.ListAllInterfacesRequest;
                    fromJSON(_: any): _18.ListAllInterfacesRequest;
                    toJSON(_: _18.ListAllInterfacesRequest): unknown;
                    fromPartial(_: {}): _18.ListAllInterfacesRequest;
                    fromSDK(_: _18.ListAllInterfacesRequestSDKType): _18.ListAllInterfacesRequest;
                    toSDK(_: _18.ListAllInterfacesRequest): _18.ListAllInterfacesRequestSDKType;
                    fromAmino(_: _18.ListAllInterfacesRequestAmino): _18.ListAllInterfacesRequest;
                    toAmino(_: _18.ListAllInterfacesRequest): _18.ListAllInterfacesRequestAmino;
                    fromAminoMsg(object: _18.ListAllInterfacesRequestAminoMsg): _18.ListAllInterfacesRequest;
                    toAminoMsg(message: _18.ListAllInterfacesRequest): _18.ListAllInterfacesRequestAminoMsg;
                    fromProtoMsg(message: _18.ListAllInterfacesRequestProtoMsg): _18.ListAllInterfacesRequest;
                    toProto(message: _18.ListAllInterfacesRequest): Uint8Array;
                    toProtoMsg(message: _18.ListAllInterfacesRequest): _18.ListAllInterfacesRequestProtoMsg;
                };
                ListAllInterfacesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _18.ListAllInterfacesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.ListAllInterfacesResponse;
                    fromJSON(object: any): _18.ListAllInterfacesResponse;
                    toJSON(message: _18.ListAllInterfacesResponse): unknown;
                    fromPartial(object: {
                        interfaceNames?: string[];
                    }): _18.ListAllInterfacesResponse;
                    fromSDK(object: _18.ListAllInterfacesResponseSDKType): _18.ListAllInterfacesResponse;
                    toSDK(message: _18.ListAllInterfacesResponse): _18.ListAllInterfacesResponseSDKType;
                    fromAmino(object: _18.ListAllInterfacesResponseAmino): _18.ListAllInterfacesResponse;
                    toAmino(message: _18.ListAllInterfacesResponse): _18.ListAllInterfacesResponseAmino;
                    fromAminoMsg(object: _18.ListAllInterfacesResponseAminoMsg): _18.ListAllInterfacesResponse;
                    toAminoMsg(message: _18.ListAllInterfacesResponse): _18.ListAllInterfacesResponseAminoMsg;
                    fromProtoMsg(message: _18.ListAllInterfacesResponseProtoMsg): _18.ListAllInterfacesResponse;
                    toProto(message: _18.ListAllInterfacesResponse): Uint8Array;
                    toProtoMsg(message: _18.ListAllInterfacesResponse): _18.ListAllInterfacesResponseProtoMsg;
                };
                ListImplementationsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _18.ListImplementationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.ListImplementationsRequest;
                    fromJSON(object: any): _18.ListImplementationsRequest;
                    toJSON(message: _18.ListImplementationsRequest): unknown;
                    fromPartial(object: {
                        interfaceName?: string;
                    }): _18.ListImplementationsRequest;
                    fromSDK(object: _18.ListImplementationsRequestSDKType): _18.ListImplementationsRequest;
                    toSDK(message: _18.ListImplementationsRequest): _18.ListImplementationsRequestSDKType;
                    fromAmino(object: _18.ListImplementationsRequestAmino): _18.ListImplementationsRequest;
                    toAmino(message: _18.ListImplementationsRequest): _18.ListImplementationsRequestAmino;
                    fromAminoMsg(object: _18.ListImplementationsRequestAminoMsg): _18.ListImplementationsRequest;
                    toAminoMsg(message: _18.ListImplementationsRequest): _18.ListImplementationsRequestAminoMsg;
                    fromProtoMsg(message: _18.ListImplementationsRequestProtoMsg): _18.ListImplementationsRequest;
                    toProto(message: _18.ListImplementationsRequest): Uint8Array;
                    toProtoMsg(message: _18.ListImplementationsRequest): _18.ListImplementationsRequestProtoMsg;
                };
                ListImplementationsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _18.ListImplementationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.ListImplementationsResponse;
                    fromJSON(object: any): _18.ListImplementationsResponse;
                    toJSON(message: _18.ListImplementationsResponse): unknown;
                    fromPartial(object: {
                        implementationMessageNames?: string[];
                    }): _18.ListImplementationsResponse;
                    fromSDK(object: _18.ListImplementationsResponseSDKType): _18.ListImplementationsResponse;
                    toSDK(message: _18.ListImplementationsResponse): _18.ListImplementationsResponseSDKType;
                    fromAmino(object: _18.ListImplementationsResponseAmino): _18.ListImplementationsResponse;
                    toAmino(message: _18.ListImplementationsResponse): _18.ListImplementationsResponseAmino;
                    fromAminoMsg(object: _18.ListImplementationsResponseAminoMsg): _18.ListImplementationsResponse;
                    toAminoMsg(message: _18.ListImplementationsResponse): _18.ListImplementationsResponseAminoMsg;
                    fromProtoMsg(message: _18.ListImplementationsResponseProtoMsg): _18.ListImplementationsResponse;
                    toProto(message: _18.ListImplementationsResponse): Uint8Array;
                    toProtoMsg(message: _18.ListImplementationsResponse): _18.ListImplementationsResponseProtoMsg;
                };
            };
            const v2alpha1: {
                AppDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.AppDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.AppDescriptor;
                    fromJSON(object: any): _19.AppDescriptor;
                    toJSON(message: _19.AppDescriptor): unknown;
                    fromPartial(object: {
                        authn?: {
                            signModes?: {
                                name?: string;
                                number?: number;
                                authnInfoProviderMethodFullname?: string;
                            }[];
                        };
                        chain?: {
                            id?: string;
                        };
                        codec?: {
                            interfaces?: {
                                fullname?: string;
                                interfaceAcceptingMessages?: {
                                    fullname?: string;
                                    fieldDescriptorNames?: string[];
                                }[];
                                interfaceImplementers?: {
                                    fullname?: string;
                                    typeUrl?: string;
                                }[];
                            }[];
                        };
                        configuration?: {
                            bech32AccountAddressPrefix?: string;
                        };
                        queryServices?: {
                            queryServices?: {
                                fullname?: string;
                                isModule?: boolean;
                                methods?: {
                                    name?: string;
                                    fullQueryPath?: string;
                                }[];
                            }[];
                        };
                        tx?: {
                            fullname?: string;
                            msgs?: {
                                msgTypeUrl?: string;
                            }[];
                        };
                    }): _19.AppDescriptor;
                    fromSDK(object: _19.AppDescriptorSDKType): _19.AppDescriptor;
                    toSDK(message: _19.AppDescriptor): _19.AppDescriptorSDKType;
                    fromAmino(object: _19.AppDescriptorAmino): _19.AppDescriptor;
                    toAmino(message: _19.AppDescriptor): _19.AppDescriptorAmino;
                    fromAminoMsg(object: _19.AppDescriptorAminoMsg): _19.AppDescriptor;
                    toAminoMsg(message: _19.AppDescriptor): _19.AppDescriptorAminoMsg;
                    fromProtoMsg(message: _19.AppDescriptorProtoMsg): _19.AppDescriptor;
                    toProto(message: _19.AppDescriptor): Uint8Array;
                    toProtoMsg(message: _19.AppDescriptor): _19.AppDescriptorProtoMsg;
                };
                TxDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.TxDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.TxDescriptor;
                    fromJSON(object: any): _19.TxDescriptor;
                    toJSON(message: _19.TxDescriptor): unknown;
                    fromPartial(object: {
                        fullname?: string;
                        msgs?: {
                            msgTypeUrl?: string;
                        }[];
                    }): _19.TxDescriptor;
                    fromSDK(object: _19.TxDescriptorSDKType): _19.TxDescriptor;
                    toSDK(message: _19.TxDescriptor): _19.TxDescriptorSDKType;
                    fromAmino(object: _19.TxDescriptorAmino): _19.TxDescriptor;
                    toAmino(message: _19.TxDescriptor): _19.TxDescriptorAmino;
                    fromAminoMsg(object: _19.TxDescriptorAminoMsg): _19.TxDescriptor;
                    toAminoMsg(message: _19.TxDescriptor): _19.TxDescriptorAminoMsg;
                    fromProtoMsg(message: _19.TxDescriptorProtoMsg): _19.TxDescriptor;
                    toProto(message: _19.TxDescriptor): Uint8Array;
                    toProtoMsg(message: _19.TxDescriptor): _19.TxDescriptorProtoMsg;
                };
                AuthnDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.AuthnDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.AuthnDescriptor;
                    fromJSON(object: any): _19.AuthnDescriptor;
                    toJSON(message: _19.AuthnDescriptor): unknown;
                    fromPartial(object: {
                        signModes?: {
                            name?: string;
                            number?: number;
                            authnInfoProviderMethodFullname?: string;
                        }[];
                    }): _19.AuthnDescriptor;
                    fromSDK(object: _19.AuthnDescriptorSDKType): _19.AuthnDescriptor;
                    toSDK(message: _19.AuthnDescriptor): _19.AuthnDescriptorSDKType;
                    fromAmino(object: _19.AuthnDescriptorAmino): _19.AuthnDescriptor;
                    toAmino(message: _19.AuthnDescriptor): _19.AuthnDescriptorAmino;
                    fromAminoMsg(object: _19.AuthnDescriptorAminoMsg): _19.AuthnDescriptor;
                    toAminoMsg(message: _19.AuthnDescriptor): _19.AuthnDescriptorAminoMsg;
                    fromProtoMsg(message: _19.AuthnDescriptorProtoMsg): _19.AuthnDescriptor;
                    toProto(message: _19.AuthnDescriptor): Uint8Array;
                    toProtoMsg(message: _19.AuthnDescriptor): _19.AuthnDescriptorProtoMsg;
                };
                SigningModeDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.SigningModeDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.SigningModeDescriptor;
                    fromJSON(object: any): _19.SigningModeDescriptor;
                    toJSON(message: _19.SigningModeDescriptor): unknown;
                    fromPartial(object: {
                        name?: string;
                        number?: number;
                        authnInfoProviderMethodFullname?: string;
                    }): _19.SigningModeDescriptor;
                    fromSDK(object: _19.SigningModeDescriptorSDKType): _19.SigningModeDescriptor;
                    toSDK(message: _19.SigningModeDescriptor): _19.SigningModeDescriptorSDKType;
                    fromAmino(object: _19.SigningModeDescriptorAmino): _19.SigningModeDescriptor;
                    toAmino(message: _19.SigningModeDescriptor): _19.SigningModeDescriptorAmino;
                    fromAminoMsg(object: _19.SigningModeDescriptorAminoMsg): _19.SigningModeDescriptor;
                    toAminoMsg(message: _19.SigningModeDescriptor): _19.SigningModeDescriptorAminoMsg;
                    fromProtoMsg(message: _19.SigningModeDescriptorProtoMsg): _19.SigningModeDescriptor;
                    toProto(message: _19.SigningModeDescriptor): Uint8Array;
                    toProtoMsg(message: _19.SigningModeDescriptor): _19.SigningModeDescriptorProtoMsg;
                };
                ChainDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.ChainDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.ChainDescriptor;
                    fromJSON(object: any): _19.ChainDescriptor;
                    toJSON(message: _19.ChainDescriptor): unknown;
                    fromPartial(object: {
                        id?: string;
                    }): _19.ChainDescriptor;
                    fromSDK(object: _19.ChainDescriptorSDKType): _19.ChainDescriptor;
                    toSDK(message: _19.ChainDescriptor): _19.ChainDescriptorSDKType;
                    fromAmino(object: _19.ChainDescriptorAmino): _19.ChainDescriptor;
                    toAmino(message: _19.ChainDescriptor): _19.ChainDescriptorAmino;
                    fromAminoMsg(object: _19.ChainDescriptorAminoMsg): _19.ChainDescriptor;
                    toAminoMsg(message: _19.ChainDescriptor): _19.ChainDescriptorAminoMsg;
                    fromProtoMsg(message: _19.ChainDescriptorProtoMsg): _19.ChainDescriptor;
                    toProto(message: _19.ChainDescriptor): Uint8Array;
                    toProtoMsg(message: _19.ChainDescriptor): _19.ChainDescriptorProtoMsg;
                };
                CodecDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.CodecDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.CodecDescriptor;
                    fromJSON(object: any): _19.CodecDescriptor;
                    toJSON(message: _19.CodecDescriptor): unknown;
                    fromPartial(object: {
                        interfaces?: {
                            fullname?: string;
                            interfaceAcceptingMessages?: {
                                fullname?: string;
                                fieldDescriptorNames?: string[];
                            }[];
                            interfaceImplementers?: {
                                fullname?: string;
                                typeUrl?: string;
                            }[];
                        }[];
                    }): _19.CodecDescriptor;
                    fromSDK(object: _19.CodecDescriptorSDKType): _19.CodecDescriptor;
                    toSDK(message: _19.CodecDescriptor): _19.CodecDescriptorSDKType;
                    fromAmino(object: _19.CodecDescriptorAmino): _19.CodecDescriptor;
                    toAmino(message: _19.CodecDescriptor): _19.CodecDescriptorAmino;
                    fromAminoMsg(object: _19.CodecDescriptorAminoMsg): _19.CodecDescriptor;
                    toAminoMsg(message: _19.CodecDescriptor): _19.CodecDescriptorAminoMsg;
                    fromProtoMsg(message: _19.CodecDescriptorProtoMsg): _19.CodecDescriptor;
                    toProto(message: _19.CodecDescriptor): Uint8Array;
                    toProtoMsg(message: _19.CodecDescriptor): _19.CodecDescriptorProtoMsg;
                };
                InterfaceDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.InterfaceDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.InterfaceDescriptor;
                    fromJSON(object: any): _19.InterfaceDescriptor;
                    toJSON(message: _19.InterfaceDescriptor): unknown;
                    fromPartial(object: {
                        fullname?: string;
                        interfaceAcceptingMessages?: {
                            fullname?: string;
                            fieldDescriptorNames?: string[];
                        }[];
                        interfaceImplementers?: {
                            fullname?: string;
                            typeUrl?: string;
                        }[];
                    }): _19.InterfaceDescriptor;
                    fromSDK(object: _19.InterfaceDescriptorSDKType): _19.InterfaceDescriptor;
                    toSDK(message: _19.InterfaceDescriptor): _19.InterfaceDescriptorSDKType;
                    fromAmino(object: _19.InterfaceDescriptorAmino): _19.InterfaceDescriptor;
                    toAmino(message: _19.InterfaceDescriptor): _19.InterfaceDescriptorAmino;
                    fromAminoMsg(object: _19.InterfaceDescriptorAminoMsg): _19.InterfaceDescriptor;
                    toAminoMsg(message: _19.InterfaceDescriptor): _19.InterfaceDescriptorAminoMsg;
                    fromProtoMsg(message: _19.InterfaceDescriptorProtoMsg): _19.InterfaceDescriptor;
                    toProto(message: _19.InterfaceDescriptor): Uint8Array;
                    toProtoMsg(message: _19.InterfaceDescriptor): _19.InterfaceDescriptorProtoMsg;
                };
                InterfaceImplementerDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.InterfaceImplementerDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.InterfaceImplementerDescriptor;
                    fromJSON(object: any): _19.InterfaceImplementerDescriptor;
                    toJSON(message: _19.InterfaceImplementerDescriptor): unknown;
                    fromPartial(object: {
                        fullname?: string;
                        typeUrl?: string;
                    }): _19.InterfaceImplementerDescriptor;
                    fromSDK(object: _19.InterfaceImplementerDescriptorSDKType): _19.InterfaceImplementerDescriptor;
                    toSDK(message: _19.InterfaceImplementerDescriptor): _19.InterfaceImplementerDescriptorSDKType;
                    fromAmino(object: _19.InterfaceImplementerDescriptorAmino): _19.InterfaceImplementerDescriptor;
                    toAmino(message: _19.InterfaceImplementerDescriptor): _19.InterfaceImplementerDescriptorAmino;
                    fromAminoMsg(object: _19.InterfaceImplementerDescriptorAminoMsg): _19.InterfaceImplementerDescriptor;
                    toAminoMsg(message: _19.InterfaceImplementerDescriptor): _19.InterfaceImplementerDescriptorAminoMsg;
                    fromProtoMsg(message: _19.InterfaceImplementerDescriptorProtoMsg): _19.InterfaceImplementerDescriptor;
                    toProto(message: _19.InterfaceImplementerDescriptor): Uint8Array;
                    toProtoMsg(message: _19.InterfaceImplementerDescriptor): _19.InterfaceImplementerDescriptorProtoMsg;
                };
                InterfaceAcceptingMessageDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.InterfaceAcceptingMessageDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.InterfaceAcceptingMessageDescriptor;
                    fromJSON(object: any): _19.InterfaceAcceptingMessageDescriptor;
                    toJSON(message: _19.InterfaceAcceptingMessageDescriptor): unknown;
                    fromPartial(object: {
                        fullname?: string;
                        fieldDescriptorNames?: string[];
                    }): _19.InterfaceAcceptingMessageDescriptor;
                    fromSDK(object: _19.InterfaceAcceptingMessageDescriptorSDKType): _19.InterfaceAcceptingMessageDescriptor;
                    toSDK(message: _19.InterfaceAcceptingMessageDescriptor): _19.InterfaceAcceptingMessageDescriptorSDKType;
                    fromAmino(object: _19.InterfaceAcceptingMessageDescriptorAmino): _19.InterfaceAcceptingMessageDescriptor;
                    toAmino(message: _19.InterfaceAcceptingMessageDescriptor): _19.InterfaceAcceptingMessageDescriptorAmino;
                    fromAminoMsg(object: _19.InterfaceAcceptingMessageDescriptorAminoMsg): _19.InterfaceAcceptingMessageDescriptor;
                    toAminoMsg(message: _19.InterfaceAcceptingMessageDescriptor): _19.InterfaceAcceptingMessageDescriptorAminoMsg;
                    fromProtoMsg(message: _19.InterfaceAcceptingMessageDescriptorProtoMsg): _19.InterfaceAcceptingMessageDescriptor;
                    toProto(message: _19.InterfaceAcceptingMessageDescriptor): Uint8Array;
                    toProtoMsg(message: _19.InterfaceAcceptingMessageDescriptor): _19.InterfaceAcceptingMessageDescriptorProtoMsg;
                };
                ConfigurationDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.ConfigurationDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.ConfigurationDescriptor;
                    fromJSON(object: any): _19.ConfigurationDescriptor;
                    toJSON(message: _19.ConfigurationDescriptor): unknown;
                    fromPartial(object: {
                        bech32AccountAddressPrefix?: string;
                    }): _19.ConfigurationDescriptor;
                    fromSDK(object: _19.ConfigurationDescriptorSDKType): _19.ConfigurationDescriptor;
                    toSDK(message: _19.ConfigurationDescriptor): _19.ConfigurationDescriptorSDKType;
                    fromAmino(object: _19.ConfigurationDescriptorAmino): _19.ConfigurationDescriptor;
                    toAmino(message: _19.ConfigurationDescriptor): _19.ConfigurationDescriptorAmino;
                    fromAminoMsg(object: _19.ConfigurationDescriptorAminoMsg): _19.ConfigurationDescriptor;
                    toAminoMsg(message: _19.ConfigurationDescriptor): _19.ConfigurationDescriptorAminoMsg;
                    fromProtoMsg(message: _19.ConfigurationDescriptorProtoMsg): _19.ConfigurationDescriptor;
                    toProto(message: _19.ConfigurationDescriptor): Uint8Array;
                    toProtoMsg(message: _19.ConfigurationDescriptor): _19.ConfigurationDescriptorProtoMsg;
                };
                MsgDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.MsgDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.MsgDescriptor;
                    fromJSON(object: any): _19.MsgDescriptor;
                    toJSON(message: _19.MsgDescriptor): unknown;
                    fromPartial(object: {
                        msgTypeUrl?: string;
                    }): _19.MsgDescriptor;
                    fromSDK(object: _19.MsgDescriptorSDKType): _19.MsgDescriptor;
                    toSDK(message: _19.MsgDescriptor): _19.MsgDescriptorSDKType;
                    fromAmino(object: _19.MsgDescriptorAmino): _19.MsgDescriptor;
                    toAmino(message: _19.MsgDescriptor): _19.MsgDescriptorAmino;
                    fromAminoMsg(object: _19.MsgDescriptorAminoMsg): _19.MsgDescriptor;
                    toAminoMsg(message: _19.MsgDescriptor): _19.MsgDescriptorAminoMsg;
                    fromProtoMsg(message: _19.MsgDescriptorProtoMsg): _19.MsgDescriptor;
                    toProto(message: _19.MsgDescriptor): Uint8Array;
                    toProtoMsg(message: _19.MsgDescriptor): _19.MsgDescriptorProtoMsg;
                };
                GetAuthnDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetAuthnDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetAuthnDescriptorRequest;
                    fromJSON(_: any): _19.GetAuthnDescriptorRequest;
                    toJSON(_: _19.GetAuthnDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetAuthnDescriptorRequest;
                    fromSDK(_: _19.GetAuthnDescriptorRequestSDKType): _19.GetAuthnDescriptorRequest;
                    toSDK(_: _19.GetAuthnDescriptorRequest): _19.GetAuthnDescriptorRequestSDKType;
                    fromAmino(_: _19.GetAuthnDescriptorRequestAmino): _19.GetAuthnDescriptorRequest;
                    toAmino(_: _19.GetAuthnDescriptorRequest): _19.GetAuthnDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetAuthnDescriptorRequestAminoMsg): _19.GetAuthnDescriptorRequest;
                    toAminoMsg(message: _19.GetAuthnDescriptorRequest): _19.GetAuthnDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetAuthnDescriptorRequestProtoMsg): _19.GetAuthnDescriptorRequest;
                    toProto(message: _19.GetAuthnDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetAuthnDescriptorRequest): _19.GetAuthnDescriptorRequestProtoMsg;
                };
                GetAuthnDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetAuthnDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetAuthnDescriptorResponse;
                    fromJSON(object: any): _19.GetAuthnDescriptorResponse;
                    toJSON(message: _19.GetAuthnDescriptorResponse): unknown;
                    fromPartial(object: {
                        authn?: {
                            signModes?: {
                                name?: string;
                                number?: number;
                                authnInfoProviderMethodFullname?: string;
                            }[];
                        };
                    }): _19.GetAuthnDescriptorResponse;
                    fromSDK(object: _19.GetAuthnDescriptorResponseSDKType): _19.GetAuthnDescriptorResponse;
                    toSDK(message: _19.GetAuthnDescriptorResponse): _19.GetAuthnDescriptorResponseSDKType;
                    fromAmino(object: _19.GetAuthnDescriptorResponseAmino): _19.GetAuthnDescriptorResponse;
                    toAmino(message: _19.GetAuthnDescriptorResponse): _19.GetAuthnDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetAuthnDescriptorResponseAminoMsg): _19.GetAuthnDescriptorResponse;
                    toAminoMsg(message: _19.GetAuthnDescriptorResponse): _19.GetAuthnDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetAuthnDescriptorResponseProtoMsg): _19.GetAuthnDescriptorResponse;
                    toProto(message: _19.GetAuthnDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetAuthnDescriptorResponse): _19.GetAuthnDescriptorResponseProtoMsg;
                };
                GetChainDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetChainDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetChainDescriptorRequest;
                    fromJSON(_: any): _19.GetChainDescriptorRequest;
                    toJSON(_: _19.GetChainDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetChainDescriptorRequest;
                    fromSDK(_: _19.GetChainDescriptorRequestSDKType): _19.GetChainDescriptorRequest;
                    toSDK(_: _19.GetChainDescriptorRequest): _19.GetChainDescriptorRequestSDKType;
                    fromAmino(_: _19.GetChainDescriptorRequestAmino): _19.GetChainDescriptorRequest;
                    toAmino(_: _19.GetChainDescriptorRequest): _19.GetChainDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetChainDescriptorRequestAminoMsg): _19.GetChainDescriptorRequest;
                    toAminoMsg(message: _19.GetChainDescriptorRequest): _19.GetChainDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetChainDescriptorRequestProtoMsg): _19.GetChainDescriptorRequest;
                    toProto(message: _19.GetChainDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetChainDescriptorRequest): _19.GetChainDescriptorRequestProtoMsg;
                };
                GetChainDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetChainDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetChainDescriptorResponse;
                    fromJSON(object: any): _19.GetChainDescriptorResponse;
                    toJSON(message: _19.GetChainDescriptorResponse): unknown;
                    fromPartial(object: {
                        chain?: {
                            id?: string;
                        };
                    }): _19.GetChainDescriptorResponse;
                    fromSDK(object: _19.GetChainDescriptorResponseSDKType): _19.GetChainDescriptorResponse;
                    toSDK(message: _19.GetChainDescriptorResponse): _19.GetChainDescriptorResponseSDKType;
                    fromAmino(object: _19.GetChainDescriptorResponseAmino): _19.GetChainDescriptorResponse;
                    toAmino(message: _19.GetChainDescriptorResponse): _19.GetChainDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetChainDescriptorResponseAminoMsg): _19.GetChainDescriptorResponse;
                    toAminoMsg(message: _19.GetChainDescriptorResponse): _19.GetChainDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetChainDescriptorResponseProtoMsg): _19.GetChainDescriptorResponse;
                    toProto(message: _19.GetChainDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetChainDescriptorResponse): _19.GetChainDescriptorResponseProtoMsg;
                };
                GetCodecDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetCodecDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetCodecDescriptorRequest;
                    fromJSON(_: any): _19.GetCodecDescriptorRequest;
                    toJSON(_: _19.GetCodecDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetCodecDescriptorRequest;
                    fromSDK(_: _19.GetCodecDescriptorRequestSDKType): _19.GetCodecDescriptorRequest;
                    toSDK(_: _19.GetCodecDescriptorRequest): _19.GetCodecDescriptorRequestSDKType;
                    fromAmino(_: _19.GetCodecDescriptorRequestAmino): _19.GetCodecDescriptorRequest;
                    toAmino(_: _19.GetCodecDescriptorRequest): _19.GetCodecDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetCodecDescriptorRequestAminoMsg): _19.GetCodecDescriptorRequest;
                    toAminoMsg(message: _19.GetCodecDescriptorRequest): _19.GetCodecDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetCodecDescriptorRequestProtoMsg): _19.GetCodecDescriptorRequest;
                    toProto(message: _19.GetCodecDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetCodecDescriptorRequest): _19.GetCodecDescriptorRequestProtoMsg;
                };
                GetCodecDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetCodecDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetCodecDescriptorResponse;
                    fromJSON(object: any): _19.GetCodecDescriptorResponse;
                    toJSON(message: _19.GetCodecDescriptorResponse): unknown;
                    fromPartial(object: {
                        codec?: {
                            interfaces?: {
                                fullname?: string;
                                interfaceAcceptingMessages?: {
                                    fullname?: string;
                                    fieldDescriptorNames?: string[];
                                }[];
                                interfaceImplementers?: {
                                    fullname?: string;
                                    typeUrl?: string;
                                }[];
                            }[];
                        };
                    }): _19.GetCodecDescriptorResponse;
                    fromSDK(object: _19.GetCodecDescriptorResponseSDKType): _19.GetCodecDescriptorResponse;
                    toSDK(message: _19.GetCodecDescriptorResponse): _19.GetCodecDescriptorResponseSDKType;
                    fromAmino(object: _19.GetCodecDescriptorResponseAmino): _19.GetCodecDescriptorResponse;
                    toAmino(message: _19.GetCodecDescriptorResponse): _19.GetCodecDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetCodecDescriptorResponseAminoMsg): _19.GetCodecDescriptorResponse;
                    toAminoMsg(message: _19.GetCodecDescriptorResponse): _19.GetCodecDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetCodecDescriptorResponseProtoMsg): _19.GetCodecDescriptorResponse;
                    toProto(message: _19.GetCodecDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetCodecDescriptorResponse): _19.GetCodecDescriptorResponseProtoMsg;
                };
                GetConfigurationDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetConfigurationDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetConfigurationDescriptorRequest;
                    fromJSON(_: any): _19.GetConfigurationDescriptorRequest;
                    toJSON(_: _19.GetConfigurationDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetConfigurationDescriptorRequest;
                    fromSDK(_: _19.GetConfigurationDescriptorRequestSDKType): _19.GetConfigurationDescriptorRequest;
                    toSDK(_: _19.GetConfigurationDescriptorRequest): _19.GetConfigurationDescriptorRequestSDKType;
                    fromAmino(_: _19.GetConfigurationDescriptorRequestAmino): _19.GetConfigurationDescriptorRequest;
                    toAmino(_: _19.GetConfigurationDescriptorRequest): _19.GetConfigurationDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetConfigurationDescriptorRequestAminoMsg): _19.GetConfigurationDescriptorRequest;
                    toAminoMsg(message: _19.GetConfigurationDescriptorRequest): _19.GetConfigurationDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetConfigurationDescriptorRequestProtoMsg): _19.GetConfigurationDescriptorRequest;
                    toProto(message: _19.GetConfigurationDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetConfigurationDescriptorRequest): _19.GetConfigurationDescriptorRequestProtoMsg;
                };
                GetConfigurationDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetConfigurationDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetConfigurationDescriptorResponse;
                    fromJSON(object: any): _19.GetConfigurationDescriptorResponse;
                    toJSON(message: _19.GetConfigurationDescriptorResponse): unknown;
                    fromPartial(object: {
                        config?: {
                            bech32AccountAddressPrefix?: string;
                        };
                    }): _19.GetConfigurationDescriptorResponse;
                    fromSDK(object: _19.GetConfigurationDescriptorResponseSDKType): _19.GetConfigurationDescriptorResponse;
                    toSDK(message: _19.GetConfigurationDescriptorResponse): _19.GetConfigurationDescriptorResponseSDKType;
                    fromAmino(object: _19.GetConfigurationDescriptorResponseAmino): _19.GetConfigurationDescriptorResponse;
                    toAmino(message: _19.GetConfigurationDescriptorResponse): _19.GetConfigurationDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetConfigurationDescriptorResponseAminoMsg): _19.GetConfigurationDescriptorResponse;
                    toAminoMsg(message: _19.GetConfigurationDescriptorResponse): _19.GetConfigurationDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetConfigurationDescriptorResponseProtoMsg): _19.GetConfigurationDescriptorResponse;
                    toProto(message: _19.GetConfigurationDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetConfigurationDescriptorResponse): _19.GetConfigurationDescriptorResponseProtoMsg;
                };
                GetQueryServicesDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetQueryServicesDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetQueryServicesDescriptorRequest;
                    fromJSON(_: any): _19.GetQueryServicesDescriptorRequest;
                    toJSON(_: _19.GetQueryServicesDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetQueryServicesDescriptorRequest;
                    fromSDK(_: _19.GetQueryServicesDescriptorRequestSDKType): _19.GetQueryServicesDescriptorRequest;
                    toSDK(_: _19.GetQueryServicesDescriptorRequest): _19.GetQueryServicesDescriptorRequestSDKType;
                    fromAmino(_: _19.GetQueryServicesDescriptorRequestAmino): _19.GetQueryServicesDescriptorRequest;
                    toAmino(_: _19.GetQueryServicesDescriptorRequest): _19.GetQueryServicesDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetQueryServicesDescriptorRequestAminoMsg): _19.GetQueryServicesDescriptorRequest;
                    toAminoMsg(message: _19.GetQueryServicesDescriptorRequest): _19.GetQueryServicesDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetQueryServicesDescriptorRequestProtoMsg): _19.GetQueryServicesDescriptorRequest;
                    toProto(message: _19.GetQueryServicesDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetQueryServicesDescriptorRequest): _19.GetQueryServicesDescriptorRequestProtoMsg;
                };
                GetQueryServicesDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetQueryServicesDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetQueryServicesDescriptorResponse;
                    fromJSON(object: any): _19.GetQueryServicesDescriptorResponse;
                    toJSON(message: _19.GetQueryServicesDescriptorResponse): unknown;
                    fromPartial(object: {
                        queries?: {
                            queryServices?: {
                                fullname?: string;
                                isModule?: boolean;
                                methods?: {
                                    name?: string;
                                    fullQueryPath?: string;
                                }[];
                            }[];
                        };
                    }): _19.GetQueryServicesDescriptorResponse;
                    fromSDK(object: _19.GetQueryServicesDescriptorResponseSDKType): _19.GetQueryServicesDescriptorResponse;
                    toSDK(message: _19.GetQueryServicesDescriptorResponse): _19.GetQueryServicesDescriptorResponseSDKType;
                    fromAmino(object: _19.GetQueryServicesDescriptorResponseAmino): _19.GetQueryServicesDescriptorResponse;
                    toAmino(message: _19.GetQueryServicesDescriptorResponse): _19.GetQueryServicesDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetQueryServicesDescriptorResponseAminoMsg): _19.GetQueryServicesDescriptorResponse;
                    toAminoMsg(message: _19.GetQueryServicesDescriptorResponse): _19.GetQueryServicesDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetQueryServicesDescriptorResponseProtoMsg): _19.GetQueryServicesDescriptorResponse;
                    toProto(message: _19.GetQueryServicesDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetQueryServicesDescriptorResponse): _19.GetQueryServicesDescriptorResponseProtoMsg;
                };
                GetTxDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _19.GetTxDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetTxDescriptorRequest;
                    fromJSON(_: any): _19.GetTxDescriptorRequest;
                    toJSON(_: _19.GetTxDescriptorRequest): unknown;
                    fromPartial(_: {}): _19.GetTxDescriptorRequest;
                    fromSDK(_: _19.GetTxDescriptorRequestSDKType): _19.GetTxDescriptorRequest;
                    toSDK(_: _19.GetTxDescriptorRequest): _19.GetTxDescriptorRequestSDKType;
                    fromAmino(_: _19.GetTxDescriptorRequestAmino): _19.GetTxDescriptorRequest;
                    toAmino(_: _19.GetTxDescriptorRequest): _19.GetTxDescriptorRequestAmino;
                    fromAminoMsg(object: _19.GetTxDescriptorRequestAminoMsg): _19.GetTxDescriptorRequest;
                    toAminoMsg(message: _19.GetTxDescriptorRequest): _19.GetTxDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _19.GetTxDescriptorRequestProtoMsg): _19.GetTxDescriptorRequest;
                    toProto(message: _19.GetTxDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _19.GetTxDescriptorRequest): _19.GetTxDescriptorRequestProtoMsg;
                };
                GetTxDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.GetTxDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GetTxDescriptorResponse;
                    fromJSON(object: any): _19.GetTxDescriptorResponse;
                    toJSON(message: _19.GetTxDescriptorResponse): unknown;
                    fromPartial(object: {
                        tx?: {
                            fullname?: string;
                            msgs?: {
                                msgTypeUrl?: string;
                            }[];
                        };
                    }): _19.GetTxDescriptorResponse;
                    fromSDK(object: _19.GetTxDescriptorResponseSDKType): _19.GetTxDescriptorResponse;
                    toSDK(message: _19.GetTxDescriptorResponse): _19.GetTxDescriptorResponseSDKType;
                    fromAmino(object: _19.GetTxDescriptorResponseAmino): _19.GetTxDescriptorResponse;
                    toAmino(message: _19.GetTxDescriptorResponse): _19.GetTxDescriptorResponseAmino;
                    fromAminoMsg(object: _19.GetTxDescriptorResponseAminoMsg): _19.GetTxDescriptorResponse;
                    toAminoMsg(message: _19.GetTxDescriptorResponse): _19.GetTxDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _19.GetTxDescriptorResponseProtoMsg): _19.GetTxDescriptorResponse;
                    toProto(message: _19.GetTxDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _19.GetTxDescriptorResponse): _19.GetTxDescriptorResponseProtoMsg;
                };
                QueryServicesDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.QueryServicesDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.QueryServicesDescriptor;
                    fromJSON(object: any): _19.QueryServicesDescriptor;
                    toJSON(message: _19.QueryServicesDescriptor): unknown;
                    fromPartial(object: {
                        queryServices?: {
                            fullname?: string;
                            isModule?: boolean;
                            methods?: {
                                name?: string;
                                fullQueryPath?: string;
                            }[];
                        }[];
                    }): _19.QueryServicesDescriptor;
                    fromSDK(object: _19.QueryServicesDescriptorSDKType): _19.QueryServicesDescriptor;
                    toSDK(message: _19.QueryServicesDescriptor): _19.QueryServicesDescriptorSDKType;
                    fromAmino(object: _19.QueryServicesDescriptorAmino): _19.QueryServicesDescriptor;
                    toAmino(message: _19.QueryServicesDescriptor): _19.QueryServicesDescriptorAmino;
                    fromAminoMsg(object: _19.QueryServicesDescriptorAminoMsg): _19.QueryServicesDescriptor;
                    toAminoMsg(message: _19.QueryServicesDescriptor): _19.QueryServicesDescriptorAminoMsg;
                    fromProtoMsg(message: _19.QueryServicesDescriptorProtoMsg): _19.QueryServicesDescriptor;
                    toProto(message: _19.QueryServicesDescriptor): Uint8Array;
                    toProtoMsg(message: _19.QueryServicesDescriptor): _19.QueryServicesDescriptorProtoMsg;
                };
                QueryServiceDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.QueryServiceDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.QueryServiceDescriptor;
                    fromJSON(object: any): _19.QueryServiceDescriptor;
                    toJSON(message: _19.QueryServiceDescriptor): unknown;
                    fromPartial(object: {
                        fullname?: string;
                        isModule?: boolean;
                        methods?: {
                            name?: string;
                            fullQueryPath?: string;
                        }[];
                    }): _19.QueryServiceDescriptor;
                    fromSDK(object: _19.QueryServiceDescriptorSDKType): _19.QueryServiceDescriptor;
                    toSDK(message: _19.QueryServiceDescriptor): _19.QueryServiceDescriptorSDKType;
                    fromAmino(object: _19.QueryServiceDescriptorAmino): _19.QueryServiceDescriptor;
                    toAmino(message: _19.QueryServiceDescriptor): _19.QueryServiceDescriptorAmino;
                    fromAminoMsg(object: _19.QueryServiceDescriptorAminoMsg): _19.QueryServiceDescriptor;
                    toAminoMsg(message: _19.QueryServiceDescriptor): _19.QueryServiceDescriptorAminoMsg;
                    fromProtoMsg(message: _19.QueryServiceDescriptorProtoMsg): _19.QueryServiceDescriptor;
                    toProto(message: _19.QueryServiceDescriptor): Uint8Array;
                    toProtoMsg(message: _19.QueryServiceDescriptor): _19.QueryServiceDescriptorProtoMsg;
                };
                QueryMethodDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _19.QueryMethodDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.QueryMethodDescriptor;
                    fromJSON(object: any): _19.QueryMethodDescriptor;
                    toJSON(message: _19.QueryMethodDescriptor): unknown;
                    fromPartial(object: {
                        name?: string;
                        fullQueryPath?: string;
                    }): _19.QueryMethodDescriptor;
                    fromSDK(object: _19.QueryMethodDescriptorSDKType): _19.QueryMethodDescriptor;
                    toSDK(message: _19.QueryMethodDescriptor): _19.QueryMethodDescriptorSDKType;
                    fromAmino(object: _19.QueryMethodDescriptorAmino): _19.QueryMethodDescriptor;
                    toAmino(message: _19.QueryMethodDescriptor): _19.QueryMethodDescriptorAmino;
                    fromAminoMsg(object: _19.QueryMethodDescriptorAminoMsg): _19.QueryMethodDescriptor;
                    toAminoMsg(message: _19.QueryMethodDescriptor): _19.QueryMethodDescriptorAminoMsg;
                    fromProtoMsg(message: _19.QueryMethodDescriptorProtoMsg): _19.QueryMethodDescriptor;
                    toProto(message: _19.QueryMethodDescriptor): Uint8Array;
                    toProtoMsg(message: _19.QueryMethodDescriptor): _19.QueryMethodDescriptorProtoMsg;
                };
            };
        }
        namespace snapshots {
            const v1beta1: {
                Snapshot: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.Snapshot;
                    fromJSON(object: any): _20.Snapshot;
                    toJSON(message: _20.Snapshot): unknown;
                    fromPartial(object: {
                        height?: bigint;
                        format?: number;
                        chunks?: number;
                        hash?: Uint8Array;
                        metadata?: {
                            chunkHashes?: Uint8Array[];
                        };
                    }): _20.Snapshot;
                    fromSDK(object: _20.SnapshotSDKType): _20.Snapshot;
                    toSDK(message: _20.Snapshot): _20.SnapshotSDKType;
                    fromAmino(object: _20.SnapshotAmino): _20.Snapshot;
                    toAmino(message: _20.Snapshot): _20.SnapshotAmino;
                    fromAminoMsg(object: _20.SnapshotAminoMsg): _20.Snapshot;
                    toAminoMsg(message: _20.Snapshot): _20.SnapshotAminoMsg;
                    fromProtoMsg(message: _20.SnapshotProtoMsg): _20.Snapshot;
                    toProto(message: _20.Snapshot): Uint8Array;
                    toProtoMsg(message: _20.Snapshot): _20.SnapshotProtoMsg;
                };
                Metadata: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.Metadata;
                    fromJSON(object: any): _20.Metadata;
                    toJSON(message: _20.Metadata): unknown;
                    fromPartial(object: {
                        chunkHashes?: Uint8Array[];
                    }): _20.Metadata;
                    fromSDK(object: _20.MetadataSDKType): _20.Metadata;
                    toSDK(message: _20.Metadata): _20.MetadataSDKType;
                    fromAmino(object: _20.MetadataAmino): _20.Metadata;
                    toAmino(message: _20.Metadata): _20.MetadataAmino;
                    fromAminoMsg(object: _20.MetadataAminoMsg): _20.Metadata;
                    toAminoMsg(message: _20.Metadata): _20.MetadataAminoMsg;
                    fromProtoMsg(message: _20.MetadataProtoMsg): _20.Metadata;
                    toProto(message: _20.Metadata): Uint8Array;
                    toProtoMsg(message: _20.Metadata): _20.MetadataProtoMsg;
                };
                SnapshotItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotItem;
                    fromJSON(object: any): _20.SnapshotItem;
                    toJSON(message: _20.SnapshotItem): unknown;
                    fromPartial(object: {
                        store?: {
                            name?: string;
                        };
                        iavl?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            version?: bigint;
                            height?: number;
                        };
                        extension?: {
                            name?: string;
                            format?: number;
                        };
                        extensionPayload?: {
                            payload?: Uint8Array;
                        };
                        appVersion?: {
                            version?: bigint;
                        };
                    }): _20.SnapshotItem;
                    fromSDK(object: _20.SnapshotItemSDKType): _20.SnapshotItem;
                    toSDK(message: _20.SnapshotItem): _20.SnapshotItemSDKType;
                    fromAmino(object: _20.SnapshotItemAmino): _20.SnapshotItem;
                    toAmino(message: _20.SnapshotItem): _20.SnapshotItemAmino;
                    fromAminoMsg(object: _20.SnapshotItemAminoMsg): _20.SnapshotItem;
                    toAminoMsg(message: _20.SnapshotItem): _20.SnapshotItemAminoMsg;
                    fromProtoMsg(message: _20.SnapshotItemProtoMsg): _20.SnapshotItem;
                    toProto(message: _20.SnapshotItem): Uint8Array;
                    toProtoMsg(message: _20.SnapshotItem): _20.SnapshotItemProtoMsg;
                };
                SnapshotStoreItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotStoreItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotStoreItem;
                    fromJSON(object: any): _20.SnapshotStoreItem;
                    toJSON(message: _20.SnapshotStoreItem): unknown;
                    fromPartial(object: {
                        name?: string;
                    }): _20.SnapshotStoreItem;
                    fromSDK(object: _20.SnapshotStoreItemSDKType): _20.SnapshotStoreItem;
                    toSDK(message: _20.SnapshotStoreItem): _20.SnapshotStoreItemSDKType;
                    fromAmino(object: _20.SnapshotStoreItemAmino): _20.SnapshotStoreItem;
                    toAmino(message: _20.SnapshotStoreItem): _20.SnapshotStoreItemAmino;
                    fromAminoMsg(object: _20.SnapshotStoreItemAminoMsg): _20.SnapshotStoreItem;
                    toAminoMsg(message: _20.SnapshotStoreItem): _20.SnapshotStoreItemAminoMsg;
                    fromProtoMsg(message: _20.SnapshotStoreItemProtoMsg): _20.SnapshotStoreItem;
                    toProto(message: _20.SnapshotStoreItem): Uint8Array;
                    toProtoMsg(message: _20.SnapshotStoreItem): _20.SnapshotStoreItemProtoMsg;
                };
                SnapshotIAVLItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotIAVLItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotIAVLItem;
                    fromJSON(object: any): _20.SnapshotIAVLItem;
                    toJSON(message: _20.SnapshotIAVLItem): unknown;
                    fromPartial(object: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        version?: bigint;
                        height?: number;
                    }): _20.SnapshotIAVLItem;
                    fromSDK(object: _20.SnapshotIAVLItemSDKType): _20.SnapshotIAVLItem;
                    toSDK(message: _20.SnapshotIAVLItem): _20.SnapshotIAVLItemSDKType;
                    fromAmino(object: _20.SnapshotIAVLItemAmino): _20.SnapshotIAVLItem;
                    toAmino(message: _20.SnapshotIAVLItem): _20.SnapshotIAVLItemAmino;
                    fromAminoMsg(object: _20.SnapshotIAVLItemAminoMsg): _20.SnapshotIAVLItem;
                    toAminoMsg(message: _20.SnapshotIAVLItem): _20.SnapshotIAVLItemAminoMsg;
                    fromProtoMsg(message: _20.SnapshotIAVLItemProtoMsg): _20.SnapshotIAVLItem;
                    toProto(message: _20.SnapshotIAVLItem): Uint8Array;
                    toProtoMsg(message: _20.SnapshotIAVLItem): _20.SnapshotIAVLItemProtoMsg;
                };
                SnapshotExtensionMeta: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotExtensionMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotExtensionMeta;
                    fromJSON(object: any): _20.SnapshotExtensionMeta;
                    toJSON(message: _20.SnapshotExtensionMeta): unknown;
                    fromPartial(object: {
                        name?: string;
                        format?: number;
                    }): _20.SnapshotExtensionMeta;
                    fromSDK(object: _20.SnapshotExtensionMetaSDKType): _20.SnapshotExtensionMeta;
                    toSDK(message: _20.SnapshotExtensionMeta): _20.SnapshotExtensionMetaSDKType;
                    fromAmino(object: _20.SnapshotExtensionMetaAmino): _20.SnapshotExtensionMeta;
                    toAmino(message: _20.SnapshotExtensionMeta): _20.SnapshotExtensionMetaAmino;
                    fromAminoMsg(object: _20.SnapshotExtensionMetaAminoMsg): _20.SnapshotExtensionMeta;
                    toAminoMsg(message: _20.SnapshotExtensionMeta): _20.SnapshotExtensionMetaAminoMsg;
                    fromProtoMsg(message: _20.SnapshotExtensionMetaProtoMsg): _20.SnapshotExtensionMeta;
                    toProto(message: _20.SnapshotExtensionMeta): Uint8Array;
                    toProtoMsg(message: _20.SnapshotExtensionMeta): _20.SnapshotExtensionMetaProtoMsg;
                };
                SnapshotExtensionPayload: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotExtensionPayload, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotExtensionPayload;
                    fromJSON(object: any): _20.SnapshotExtensionPayload;
                    toJSON(message: _20.SnapshotExtensionPayload): unknown;
                    fromPartial(object: {
                        payload?: Uint8Array;
                    }): _20.SnapshotExtensionPayload;
                    fromSDK(object: _20.SnapshotExtensionPayloadSDKType): _20.SnapshotExtensionPayload;
                    toSDK(message: _20.SnapshotExtensionPayload): _20.SnapshotExtensionPayloadSDKType;
                    fromAmino(object: _20.SnapshotExtensionPayloadAmino): _20.SnapshotExtensionPayload;
                    toAmino(message: _20.SnapshotExtensionPayload): _20.SnapshotExtensionPayloadAmino;
                    fromAminoMsg(object: _20.SnapshotExtensionPayloadAminoMsg): _20.SnapshotExtensionPayload;
                    toAminoMsg(message: _20.SnapshotExtensionPayload): _20.SnapshotExtensionPayloadAminoMsg;
                    fromProtoMsg(message: _20.SnapshotExtensionPayloadProtoMsg): _20.SnapshotExtensionPayload;
                    toProto(message: _20.SnapshotExtensionPayload): Uint8Array;
                    toProtoMsg(message: _20.SnapshotExtensionPayload): _20.SnapshotExtensionPayloadProtoMsg;
                };
                SnapshotAppVersion: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _20.SnapshotAppVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.SnapshotAppVersion;
                    fromJSON(object: any): _20.SnapshotAppVersion;
                    toJSON(message: _20.SnapshotAppVersion): unknown;
                    fromPartial(object: {
                        version?: bigint;
                    }): _20.SnapshotAppVersion;
                    fromSDK(object: _20.SnapshotAppVersionSDKType): _20.SnapshotAppVersion;
                    toSDK(message: _20.SnapshotAppVersion): _20.SnapshotAppVersionSDKType;
                    fromAmino(object: _20.SnapshotAppVersionAmino): _20.SnapshotAppVersion;
                    toAmino(message: _20.SnapshotAppVersion): _20.SnapshotAppVersionAmino;
                    fromAminoMsg(object: _20.SnapshotAppVersionAminoMsg): _20.SnapshotAppVersion;
                    toAminoMsg(message: _20.SnapshotAppVersion): _20.SnapshotAppVersionAminoMsg;
                    fromProtoMsg(message: _20.SnapshotAppVersionProtoMsg): _20.SnapshotAppVersion;
                    toProto(message: _20.SnapshotAppVersion): Uint8Array;
                    toProtoMsg(message: _20.SnapshotAppVersion): _20.SnapshotAppVersionProtoMsg;
                };
            };
        }
        namespace store {
            const v1beta1: {
                StoreKVPair: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.StoreKVPair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.StoreKVPair;
                    fromJSON(object: any): _22.StoreKVPair;
                    toJSON(message: _22.StoreKVPair): unknown;
                    fromPartial(object: {
                        storeKey?: string;
                        delete?: boolean;
                        key?: Uint8Array;
                        value?: Uint8Array;
                    }): _22.StoreKVPair;
                    fromSDK(object: _22.StoreKVPairSDKType): _22.StoreKVPair;
                    toSDK(message: _22.StoreKVPair): _22.StoreKVPairSDKType;
                    fromAmino(object: _22.StoreKVPairAmino): _22.StoreKVPair;
                    toAmino(message: _22.StoreKVPair): _22.StoreKVPairAmino;
                    fromAminoMsg(object: _22.StoreKVPairAminoMsg): _22.StoreKVPair;
                    toAminoMsg(message: _22.StoreKVPair): _22.StoreKVPairAminoMsg;
                    fromProtoMsg(message: _22.StoreKVPairProtoMsg): _22.StoreKVPair;
                    toProto(message: _22.StoreKVPair): Uint8Array;
                    toProtoMsg(message: _22.StoreKVPair): _22.StoreKVPairProtoMsg;
                };
                CommitInfo: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _21.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.CommitInfo;
                    fromJSON(object: any): _21.CommitInfo;
                    toJSON(message: _21.CommitInfo): unknown;
                    fromPartial(object: {
                        version?: bigint;
                        storeInfos?: {
                            name?: string;
                            commitId?: {
                                version?: bigint;
                                hash?: Uint8Array;
                            };
                        }[];
                        timestamp?: Date;
                    }): _21.CommitInfo;
                    fromSDK(object: _21.CommitInfoSDKType): _21.CommitInfo;
                    toSDK(message: _21.CommitInfo): _21.CommitInfoSDKType;
                    fromAmino(object: _21.CommitInfoAmino): _21.CommitInfo;
                    toAmino(message: _21.CommitInfo): _21.CommitInfoAmino;
                    fromAminoMsg(object: _21.CommitInfoAminoMsg): _21.CommitInfo;
                    toAminoMsg(message: _21.CommitInfo): _21.CommitInfoAminoMsg;
                    fromProtoMsg(message: _21.CommitInfoProtoMsg): _21.CommitInfo;
                    toProto(message: _21.CommitInfo): Uint8Array;
                    toProtoMsg(message: _21.CommitInfo): _21.CommitInfoProtoMsg;
                };
                StoreInfo: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _21.StoreInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.StoreInfo;
                    fromJSON(object: any): _21.StoreInfo;
                    toJSON(message: _21.StoreInfo): unknown;
                    fromPartial(object: {
                        name?: string;
                        commitId?: {
                            version?: bigint;
                            hash?: Uint8Array;
                        };
                    }): _21.StoreInfo;
                    fromSDK(object: _21.StoreInfoSDKType): _21.StoreInfo;
                    toSDK(message: _21.StoreInfo): _21.StoreInfoSDKType;
                    fromAmino(object: _21.StoreInfoAmino): _21.StoreInfo;
                    toAmino(message: _21.StoreInfo): _21.StoreInfoAmino;
                    fromAminoMsg(object: _21.StoreInfoAminoMsg): _21.StoreInfo;
                    toAminoMsg(message: _21.StoreInfo): _21.StoreInfoAminoMsg;
                    fromProtoMsg(message: _21.StoreInfoProtoMsg): _21.StoreInfo;
                    toProto(message: _21.StoreInfo): Uint8Array;
                    toProtoMsg(message: _21.StoreInfo): _21.StoreInfoProtoMsg;
                };
                CommitID: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _21.CommitID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.CommitID;
                    fromJSON(object: any): _21.CommitID;
                    toJSON(message: _21.CommitID): unknown;
                    fromPartial(object: {
                        version?: bigint;
                        hash?: Uint8Array;
                    }): _21.CommitID;
                    fromSDK(object: _21.CommitIDSDKType): _21.CommitID;
                    toSDK(message: _21.CommitID): _21.CommitIDSDKType;
                    fromAmino(object: _21.CommitIDAmino): _21.CommitID;
                    toAmino(message: _21.CommitID): _21.CommitIDAmino;
                    fromAminoMsg(object: _21.CommitIDAminoMsg): _21.CommitID;
                    toAminoMsg(message: _21.CommitID): _21.CommitIDAminoMsg;
                    fromProtoMsg(message: _21.CommitIDProtoMsg): _21.CommitID;
                    toProto(message: _21.CommitID): Uint8Array;
                    toProtoMsg(message: _21.CommitID): _21.CommitIDProtoMsg;
                };
            };
        }
        namespace tendermint {
            const v1beta1: {
                ServiceClientImpl: typeof _197.ServiceClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    getNodeInfo(request?: _23.GetNodeInfoRequest): Promise<_23.GetNodeInfoResponse>;
                    getSyncing(request?: _23.GetSyncingRequest): Promise<_23.GetSyncingResponse>;
                    getLatestBlock(request?: _23.GetLatestBlockRequest): Promise<_23.GetLatestBlockResponse>;
                    getBlockByHeight(request: _23.GetBlockByHeightRequest): Promise<_23.GetBlockByHeightResponse>;
                    getLatestValidatorSet(request?: _23.GetLatestValidatorSetRequest): Promise<_23.GetLatestValidatorSetResponse>;
                    getValidatorSetByHeight(request: _23.GetValidatorSetByHeightRequest): Promise<_23.GetValidatorSetByHeightResponse>;
                };
                createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                    useGetNodeInfo: <TData = _23.GetNodeInfoResponse>({ request, options }: _197.UseGetNodeInfoQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                    useGetSyncing: <TData_1 = _23.GetSyncingResponse>({ request, options }: _197.UseGetSyncingQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                    useGetLatestBlock: <TData_2 = _23.GetLatestBlockResponse>({ request, options }: _197.UseGetLatestBlockQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                    useGetBlockByHeight: <TData_3 = _23.GetBlockByHeightResponse>({ request, options }: _197.UseGetBlockByHeightQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                    useGetLatestValidatorSet: <TData_4 = _23.GetLatestValidatorSetResponse>({ request, options }: _197.UseGetLatestValidatorSetQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                    useGetValidatorSetByHeight: <TData_5 = _23.GetValidatorSetByHeightResponse>({ request, options }: _197.UseGetValidatorSetByHeightQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                };
                GetValidatorSetByHeightRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetValidatorSetByHeightRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetValidatorSetByHeightRequest;
                    fromJSON(object: any): _23.GetValidatorSetByHeightRequest;
                    toJSON(message: _23.GetValidatorSetByHeightRequest): unknown;
                    fromPartial(object: {
                        height?: bigint;
                        pagination?: {
                            key?: Uint8Array;
                            offset?: bigint;
                            limit?: bigint;
                            countTotal?: boolean;
                            reverse?: boolean;
                        };
                    }): _23.GetValidatorSetByHeightRequest;
                    fromSDK(object: _23.GetValidatorSetByHeightRequestSDKType): _23.GetValidatorSetByHeightRequest;
                    toSDK(message: _23.GetValidatorSetByHeightRequest): _23.GetValidatorSetByHeightRequestSDKType;
                    fromAmino(object: _23.GetValidatorSetByHeightRequestAmino): _23.GetValidatorSetByHeightRequest;
                    toAmino(message: _23.GetValidatorSetByHeightRequest): _23.GetValidatorSetByHeightRequestAmino;
                    fromAminoMsg(object: _23.GetValidatorSetByHeightRequestAminoMsg): _23.GetValidatorSetByHeightRequest;
                    toAminoMsg(message: _23.GetValidatorSetByHeightRequest): _23.GetValidatorSetByHeightRequestAminoMsg;
                    fromProtoMsg(message: _23.GetValidatorSetByHeightRequestProtoMsg): _23.GetValidatorSetByHeightRequest;
                    toProto(message: _23.GetValidatorSetByHeightRequest): Uint8Array;
                    toProtoMsg(message: _23.GetValidatorSetByHeightRequest): _23.GetValidatorSetByHeightRequestProtoMsg;
                };
                GetValidatorSetByHeightResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetValidatorSetByHeightResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetValidatorSetByHeightResponse;
                    fromJSON(object: any): _23.GetValidatorSetByHeightResponse;
                    toJSON(message: _23.GetValidatorSetByHeightResponse): unknown;
                    fromPartial(object: {
                        blockHeight?: bigint;
                        validators?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            votingPower?: bigint;
                            proposerPriority?: bigint;
                        }[];
                        pagination?: {
                            nextKey?: Uint8Array;
                            total?: bigint;
                        };
                    }): _23.GetValidatorSetByHeightResponse;
                    fromSDK(object: _23.GetValidatorSetByHeightResponseSDKType): _23.GetValidatorSetByHeightResponse;
                    toSDK(message: _23.GetValidatorSetByHeightResponse): _23.GetValidatorSetByHeightResponseSDKType;
                    fromAmino(object: _23.GetValidatorSetByHeightResponseAmino): _23.GetValidatorSetByHeightResponse;
                    toAmino(message: _23.GetValidatorSetByHeightResponse): _23.GetValidatorSetByHeightResponseAmino;
                    fromAminoMsg(object: _23.GetValidatorSetByHeightResponseAminoMsg): _23.GetValidatorSetByHeightResponse;
                    toAminoMsg(message: _23.GetValidatorSetByHeightResponse): _23.GetValidatorSetByHeightResponseAminoMsg;
                    fromProtoMsg(message: _23.GetValidatorSetByHeightResponseProtoMsg): _23.GetValidatorSetByHeightResponse;
                    toProto(message: _23.GetValidatorSetByHeightResponse): Uint8Array;
                    toProtoMsg(message: _23.GetValidatorSetByHeightResponse): _23.GetValidatorSetByHeightResponseProtoMsg;
                };
                GetLatestValidatorSetRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetLatestValidatorSetRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetLatestValidatorSetRequest;
                    fromJSON(object: any): _23.GetLatestValidatorSetRequest;
                    toJSON(message: _23.GetLatestValidatorSetRequest): unknown;
                    fromPartial(object: {
                        pagination?: {
                            key?: Uint8Array;
                            offset?: bigint;
                            limit?: bigint;
                            countTotal?: boolean;
                            reverse?: boolean;
                        };
                    }): _23.GetLatestValidatorSetRequest;
                    fromSDK(object: _23.GetLatestValidatorSetRequestSDKType): _23.GetLatestValidatorSetRequest;
                    toSDK(message: _23.GetLatestValidatorSetRequest): _23.GetLatestValidatorSetRequestSDKType;
                    fromAmino(object: _23.GetLatestValidatorSetRequestAmino): _23.GetLatestValidatorSetRequest;
                    toAmino(message: _23.GetLatestValidatorSetRequest): _23.GetLatestValidatorSetRequestAmino;
                    fromAminoMsg(object: _23.GetLatestValidatorSetRequestAminoMsg): _23.GetLatestValidatorSetRequest;
                    toAminoMsg(message: _23.GetLatestValidatorSetRequest): _23.GetLatestValidatorSetRequestAminoMsg;
                    fromProtoMsg(message: _23.GetLatestValidatorSetRequestProtoMsg): _23.GetLatestValidatorSetRequest;
                    toProto(message: _23.GetLatestValidatorSetRequest): Uint8Array;
                    toProtoMsg(message: _23.GetLatestValidatorSetRequest): _23.GetLatestValidatorSetRequestProtoMsg;
                };
                GetLatestValidatorSetResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetLatestValidatorSetResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetLatestValidatorSetResponse;
                    fromJSON(object: any): _23.GetLatestValidatorSetResponse;
                    toJSON(message: _23.GetLatestValidatorSetResponse): unknown;
                    fromPartial(object: {
                        blockHeight?: bigint;
                        validators?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            votingPower?: bigint;
                            proposerPriority?: bigint;
                        }[];
                        pagination?: {
                            nextKey?: Uint8Array;
                            total?: bigint;
                        };
                    }): _23.GetLatestValidatorSetResponse;
                    fromSDK(object: _23.GetLatestValidatorSetResponseSDKType): _23.GetLatestValidatorSetResponse;
                    toSDK(message: _23.GetLatestValidatorSetResponse): _23.GetLatestValidatorSetResponseSDKType;
                    fromAmino(object: _23.GetLatestValidatorSetResponseAmino): _23.GetLatestValidatorSetResponse;
                    toAmino(message: _23.GetLatestValidatorSetResponse): _23.GetLatestValidatorSetResponseAmino;
                    fromAminoMsg(object: _23.GetLatestValidatorSetResponseAminoMsg): _23.GetLatestValidatorSetResponse;
                    toAminoMsg(message: _23.GetLatestValidatorSetResponse): _23.GetLatestValidatorSetResponseAminoMsg;
                    fromProtoMsg(message: _23.GetLatestValidatorSetResponseProtoMsg): _23.GetLatestValidatorSetResponse;
                    toProto(message: _23.GetLatestValidatorSetResponse): Uint8Array;
                    toProtoMsg(message: _23.GetLatestValidatorSetResponse): _23.GetLatestValidatorSetResponseProtoMsg;
                };
                Validator: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.Validator;
                    fromJSON(object: any): _23.Validator;
                    toJSON(message: _23.Validator): unknown;
                    fromPartial(object: {
                        address?: string;
                        pubKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        votingPower?: bigint;
                        proposerPriority?: bigint;
                    }): _23.Validator;
                    fromSDK(object: _23.ValidatorSDKType): _23.Validator;
                    toSDK(message: _23.Validator): _23.ValidatorSDKType;
                    fromAmino(object: _23.ValidatorAmino): _23.Validator;
                    toAmino(message: _23.Validator): _23.ValidatorAmino;
                    fromAminoMsg(object: _23.ValidatorAminoMsg): _23.Validator;
                    toAminoMsg(message: _23.Validator): _23.ValidatorAminoMsg;
                    fromProtoMsg(message: _23.ValidatorProtoMsg): _23.Validator;
                    toProto(message: _23.Validator): Uint8Array;
                    toProtoMsg(message: _23.Validator): _23.ValidatorProtoMsg;
                };
                GetBlockByHeightRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetBlockByHeightRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetBlockByHeightRequest;
                    fromJSON(object: any): _23.GetBlockByHeightRequest;
                    toJSON(message: _23.GetBlockByHeightRequest): unknown;
                    fromPartial(object: {
                        height?: bigint;
                    }): _23.GetBlockByHeightRequest;
                    fromSDK(object: _23.GetBlockByHeightRequestSDKType): _23.GetBlockByHeightRequest;
                    toSDK(message: _23.GetBlockByHeightRequest): _23.GetBlockByHeightRequestSDKType;
                    fromAmino(object: _23.GetBlockByHeightRequestAmino): _23.GetBlockByHeightRequest;
                    toAmino(message: _23.GetBlockByHeightRequest): _23.GetBlockByHeightRequestAmino;
                    fromAminoMsg(object: _23.GetBlockByHeightRequestAminoMsg): _23.GetBlockByHeightRequest;
                    toAminoMsg(message: _23.GetBlockByHeightRequest): _23.GetBlockByHeightRequestAminoMsg;
                    fromProtoMsg(message: _23.GetBlockByHeightRequestProtoMsg): _23.GetBlockByHeightRequest;
                    toProto(message: _23.GetBlockByHeightRequest): Uint8Array;
                    toProtoMsg(message: _23.GetBlockByHeightRequest): _23.GetBlockByHeightRequestProtoMsg;
                };
                GetBlockByHeightResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetBlockByHeightResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetBlockByHeightResponse;
                    fromJSON(object: any): _23.GetBlockByHeightResponse;
                    toJSON(message: _23.GetBlockByHeightResponse): unknown;
                    fromPartial(object: {
                        blockId?: {
                            hash?: Uint8Array;
                            partSetHeader?: {
                                total?: number;
                                hash?: Uint8Array;
                            };
                        };
                        block?: {
                            header?: {
                                version?: {
                                    block?: bigint;
                                    app?: bigint;
                                };
                                chainId?: string;
                                height?: bigint;
                                time?: Date;
                                lastBlockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                lastCommitHash?: Uint8Array;
                                dataHash?: Uint8Array;
                                validatorsHash?: Uint8Array;
                                nextValidatorsHash?: Uint8Array;
                                consensusHash?: Uint8Array;
                                appHash?: Uint8Array;
                                lastResultsHash?: Uint8Array;
                                evidenceHash?: Uint8Array;
                                proposerAddress?: Uint8Array;
                            };
                            data?: {
                                txs?: Uint8Array[];
                            };
                            evidence?: {
                                evidence?: {
                                    duplicateVoteEvidence?: {
                                        voteA?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                        };
                                        voteB?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                        };
                                        totalVotingPower?: bigint;
                                        validatorPower?: bigint;
                                        timestamp?: Date;
                                    };
                                    lightClientAttackEvidence?: {
                                        conflictingBlock?: {
                                            signedHeader?: {
                                                header?: {
                                                    version?: {
                                                        block?: bigint;
                                                        app?: bigint;
                                                    };
                                                    chainId?: string;
                                                    height?: bigint;
                                                    time?: Date;
                                                    lastBlockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    lastCommitHash?: Uint8Array;
                                                    dataHash?: Uint8Array;
                                                    validatorsHash?: Uint8Array;
                                                    nextValidatorsHash?: Uint8Array;
                                                    consensusHash?: Uint8Array;
                                                    appHash?: Uint8Array;
                                                    lastResultsHash?: Uint8Array;
                                                    evidenceHash?: Uint8Array;
                                                    proposerAddress?: Uint8Array;
                                                };
                                                commit?: {
                                                    height?: bigint;
                                                    round?: number;
                                                    blockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    signatures?: {
                                                        blockIdFlag?: import("../tendermint/types/types").BlockIDFlag;
                                                        validatorAddress?: Uint8Array;
                                                        timestamp?: Date;
                                                        signature?: Uint8Array;
                                                    }[];
                                                };
                                            };
                                            validatorSet?: {
                                                validators?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                }[];
                                                proposer?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                };
                                                totalVotingPower?: bigint;
                                            };
                                        };
                                        commonHeight?: bigint;
                                        byzantineValidators?: {
                                            address?: Uint8Array;
                                            pubKey?: {
                                                ed25519?: Uint8Array;
                                                secp256k1?: Uint8Array;
                                            };
                                            votingPower?: bigint;
                                            proposerPriority?: bigint;
                                        }[];
                                        totalVotingPower?: bigint;
                                        timestamp?: Date;
                                    };
                                }[];
                            };
                            lastCommit?: {
                                height?: bigint;
                                round?: number;
                                blockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                signatures?: {
                                    blockIdFlag?: import("../tendermint/types/types").BlockIDFlag;
                                    validatorAddress?: Uint8Array;
                                    timestamp?: Date;
                                    signature?: Uint8Array;
                                }[];
                            };
                        };
                    }): _23.GetBlockByHeightResponse;
                    fromSDK(object: _23.GetBlockByHeightResponseSDKType): _23.GetBlockByHeightResponse;
                    toSDK(message: _23.GetBlockByHeightResponse): _23.GetBlockByHeightResponseSDKType;
                    fromAmino(object: _23.GetBlockByHeightResponseAmino): _23.GetBlockByHeightResponse;
                    toAmino(message: _23.GetBlockByHeightResponse): _23.GetBlockByHeightResponseAmino;
                    fromAminoMsg(object: _23.GetBlockByHeightResponseAminoMsg): _23.GetBlockByHeightResponse;
                    toAminoMsg(message: _23.GetBlockByHeightResponse): _23.GetBlockByHeightResponseAminoMsg;
                    fromProtoMsg(message: _23.GetBlockByHeightResponseProtoMsg): _23.GetBlockByHeightResponse;
                    toProto(message: _23.GetBlockByHeightResponse): Uint8Array;
                    toProtoMsg(message: _23.GetBlockByHeightResponse): _23.GetBlockByHeightResponseProtoMsg;
                };
                GetLatestBlockRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _23.GetLatestBlockRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetLatestBlockRequest;
                    fromJSON(_: any): _23.GetLatestBlockRequest;
                    toJSON(_: _23.GetLatestBlockRequest): unknown;
                    fromPartial(_: {}): _23.GetLatestBlockRequest;
                    fromSDK(_: _23.GetLatestBlockRequestSDKType): _23.GetLatestBlockRequest;
                    toSDK(_: _23.GetLatestBlockRequest): _23.GetLatestBlockRequestSDKType;
                    fromAmino(_: _23.GetLatestBlockRequestAmino): _23.GetLatestBlockRequest;
                    toAmino(_: _23.GetLatestBlockRequest): _23.GetLatestBlockRequestAmino;
                    fromAminoMsg(object: _23.GetLatestBlockRequestAminoMsg): _23.GetLatestBlockRequest;
                    toAminoMsg(message: _23.GetLatestBlockRequest): _23.GetLatestBlockRequestAminoMsg;
                    fromProtoMsg(message: _23.GetLatestBlockRequestProtoMsg): _23.GetLatestBlockRequest;
                    toProto(message: _23.GetLatestBlockRequest): Uint8Array;
                    toProtoMsg(message: _23.GetLatestBlockRequest): _23.GetLatestBlockRequestProtoMsg;
                };
                GetLatestBlockResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetLatestBlockResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetLatestBlockResponse;
                    fromJSON(object: any): _23.GetLatestBlockResponse;
                    toJSON(message: _23.GetLatestBlockResponse): unknown;
                    fromPartial(object: {
                        blockId?: {
                            hash?: Uint8Array;
                            partSetHeader?: {
                                total?: number;
                                hash?: Uint8Array;
                            };
                        };
                        block?: {
                            header?: {
                                version?: {
                                    block?: bigint;
                                    app?: bigint;
                                };
                                chainId?: string;
                                height?: bigint;
                                time?: Date;
                                lastBlockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                lastCommitHash?: Uint8Array;
                                dataHash?: Uint8Array;
                                validatorsHash?: Uint8Array;
                                nextValidatorsHash?: Uint8Array;
                                consensusHash?: Uint8Array;
                                appHash?: Uint8Array;
                                lastResultsHash?: Uint8Array;
                                evidenceHash?: Uint8Array;
                                proposerAddress?: Uint8Array;
                            };
                            data?: {
                                txs?: Uint8Array[];
                            };
                            evidence?: {
                                evidence?: {
                                    duplicateVoteEvidence?: {
                                        voteA?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                        };
                                        voteB?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                        };
                                        totalVotingPower?: bigint;
                                        validatorPower?: bigint;
                                        timestamp?: Date;
                                    };
                                    lightClientAttackEvidence?: {
                                        conflictingBlock?: {
                                            signedHeader?: {
                                                header?: {
                                                    version?: {
                                                        block?: bigint;
                                                        app?: bigint;
                                                    };
                                                    chainId?: string;
                                                    height?: bigint;
                                                    time?: Date;
                                                    lastBlockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    lastCommitHash?: Uint8Array;
                                                    dataHash?: Uint8Array;
                                                    validatorsHash?: Uint8Array;
                                                    nextValidatorsHash?: Uint8Array;
                                                    consensusHash?: Uint8Array;
                                                    appHash?: Uint8Array;
                                                    lastResultsHash?: Uint8Array;
                                                    evidenceHash?: Uint8Array;
                                                    proposerAddress?: Uint8Array;
                                                };
                                                commit?: {
                                                    height?: bigint;
                                                    round?: number;
                                                    blockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    signatures?: {
                                                        blockIdFlag?: import("../tendermint/types/types").BlockIDFlag;
                                                        validatorAddress?: Uint8Array;
                                                        timestamp?: Date;
                                                        signature?: Uint8Array;
                                                    }[];
                                                };
                                            };
                                            validatorSet?: {
                                                validators?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                }[];
                                                proposer?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                };
                                                totalVotingPower?: bigint;
                                            };
                                        };
                                        commonHeight?: bigint;
                                        byzantineValidators?: {
                                            address?: Uint8Array;
                                            pubKey?: {
                                                ed25519?: Uint8Array;
                                                secp256k1?: Uint8Array;
                                            };
                                            votingPower?: bigint;
                                            proposerPriority?: bigint;
                                        }[];
                                        totalVotingPower?: bigint;
                                        timestamp?: Date;
                                    };
                                }[];
                            };
                            lastCommit?: {
                                height?: bigint;
                                round?: number;
                                blockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                signatures?: {
                                    blockIdFlag?: import("../tendermint/types/types").BlockIDFlag;
                                    validatorAddress?: Uint8Array;
                                    timestamp?: Date;
                                    signature?: Uint8Array;
                                }[];
                            };
                        };
                    }): _23.GetLatestBlockResponse;
                    fromSDK(object: _23.GetLatestBlockResponseSDKType): _23.GetLatestBlockResponse;
                    toSDK(message: _23.GetLatestBlockResponse): _23.GetLatestBlockResponseSDKType;
                    fromAmino(object: _23.GetLatestBlockResponseAmino): _23.GetLatestBlockResponse;
                    toAmino(message: _23.GetLatestBlockResponse): _23.GetLatestBlockResponseAmino;
                    fromAminoMsg(object: _23.GetLatestBlockResponseAminoMsg): _23.GetLatestBlockResponse;
                    toAminoMsg(message: _23.GetLatestBlockResponse): _23.GetLatestBlockResponseAminoMsg;
                    fromProtoMsg(message: _23.GetLatestBlockResponseProtoMsg): _23.GetLatestBlockResponse;
                    toProto(message: _23.GetLatestBlockResponse): Uint8Array;
                    toProtoMsg(message: _23.GetLatestBlockResponse): _23.GetLatestBlockResponseProtoMsg;
                };
                GetSyncingRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _23.GetSyncingRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetSyncingRequest;
                    fromJSON(_: any): _23.GetSyncingRequest;
                    toJSON(_: _23.GetSyncingRequest): unknown;
                    fromPartial(_: {}): _23.GetSyncingRequest;
                    fromSDK(_: _23.GetSyncingRequestSDKType): _23.GetSyncingRequest;
                    toSDK(_: _23.GetSyncingRequest): _23.GetSyncingRequestSDKType;
                    fromAmino(_: _23.GetSyncingRequestAmino): _23.GetSyncingRequest;
                    toAmino(_: _23.GetSyncingRequest): _23.GetSyncingRequestAmino;
                    fromAminoMsg(object: _23.GetSyncingRequestAminoMsg): _23.GetSyncingRequest;
                    toAminoMsg(message: _23.GetSyncingRequest): _23.GetSyncingRequestAminoMsg;
                    fromProtoMsg(message: _23.GetSyncingRequestProtoMsg): _23.GetSyncingRequest;
                    toProto(message: _23.GetSyncingRequest): Uint8Array;
                    toProtoMsg(message: _23.GetSyncingRequest): _23.GetSyncingRequestProtoMsg;
                };
                GetSyncingResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetSyncingResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetSyncingResponse;
                    fromJSON(object: any): _23.GetSyncingResponse;
                    toJSON(message: _23.GetSyncingResponse): unknown;
                    fromPartial(object: {
                        syncing?: boolean;
                    }): _23.GetSyncingResponse;
                    fromSDK(object: _23.GetSyncingResponseSDKType): _23.GetSyncingResponse;
                    toSDK(message: _23.GetSyncingResponse): _23.GetSyncingResponseSDKType;
                    fromAmino(object: _23.GetSyncingResponseAmino): _23.GetSyncingResponse;
                    toAmino(message: _23.GetSyncingResponse): _23.GetSyncingResponseAmino;
                    fromAminoMsg(object: _23.GetSyncingResponseAminoMsg): _23.GetSyncingResponse;
                    toAminoMsg(message: _23.GetSyncingResponse): _23.GetSyncingResponseAminoMsg;
                    fromProtoMsg(message: _23.GetSyncingResponseProtoMsg): _23.GetSyncingResponse;
                    toProto(message: _23.GetSyncingResponse): Uint8Array;
                    toProtoMsg(message: _23.GetSyncingResponse): _23.GetSyncingResponseProtoMsg;
                };
                GetNodeInfoRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _23.GetNodeInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetNodeInfoRequest;
                    fromJSON(_: any): _23.GetNodeInfoRequest;
                    toJSON(_: _23.GetNodeInfoRequest): unknown;
                    fromPartial(_: {}): _23.GetNodeInfoRequest;
                    fromSDK(_: _23.GetNodeInfoRequestSDKType): _23.GetNodeInfoRequest;
                    toSDK(_: _23.GetNodeInfoRequest): _23.GetNodeInfoRequestSDKType;
                    fromAmino(_: _23.GetNodeInfoRequestAmino): _23.GetNodeInfoRequest;
                    toAmino(_: _23.GetNodeInfoRequest): _23.GetNodeInfoRequestAmino;
                    fromAminoMsg(object: _23.GetNodeInfoRequestAminoMsg): _23.GetNodeInfoRequest;
                    toAminoMsg(message: _23.GetNodeInfoRequest): _23.GetNodeInfoRequestAminoMsg;
                    fromProtoMsg(message: _23.GetNodeInfoRequestProtoMsg): _23.GetNodeInfoRequest;
                    toProto(message: _23.GetNodeInfoRequest): Uint8Array;
                    toProtoMsg(message: _23.GetNodeInfoRequest): _23.GetNodeInfoRequestProtoMsg;
                };
                GetNodeInfoResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.GetNodeInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.GetNodeInfoResponse;
                    fromJSON(object: any): _23.GetNodeInfoResponse;
                    toJSON(message: _23.GetNodeInfoResponse): unknown;
                    fromPartial(object: {
                        defaultNodeInfo?: {
                            protocolVersion?: {
                                p2p?: bigint;
                                block?: bigint;
                                app?: bigint;
                            };
                            defaultNodeId?: string;
                            listenAddr?: string;
                            network?: string;
                            version?: string;
                            channels?: Uint8Array;
                            moniker?: string;
                            other?: {
                                txIndex?: string;
                                rpcAddress?: string;
                            };
                        };
                        applicationVersion?: {
                            name?: string;
                            appName?: string;
                            version?: string;
                            gitCommit?: string;
                            buildTags?: string;
                            goVersion?: string;
                            buildDeps?: {
                                path?: string;
                                version?: string;
                                sum?: string;
                            }[];
                            cosmosSdkVersion?: string;
                        };
                    }): _23.GetNodeInfoResponse;
                    fromSDK(object: _23.GetNodeInfoResponseSDKType): _23.GetNodeInfoResponse;
                    toSDK(message: _23.GetNodeInfoResponse): _23.GetNodeInfoResponseSDKType;
                    fromAmino(object: _23.GetNodeInfoResponseAmino): _23.GetNodeInfoResponse;
                    toAmino(message: _23.GetNodeInfoResponse): _23.GetNodeInfoResponseAmino;
                    fromAminoMsg(object: _23.GetNodeInfoResponseAminoMsg): _23.GetNodeInfoResponse;
                    toAminoMsg(message: _23.GetNodeInfoResponse): _23.GetNodeInfoResponseAminoMsg;
                    fromProtoMsg(message: _23.GetNodeInfoResponseProtoMsg): _23.GetNodeInfoResponse;
                    toProto(message: _23.GetNodeInfoResponse): Uint8Array;
                    toProtoMsg(message: _23.GetNodeInfoResponse): _23.GetNodeInfoResponseProtoMsg;
                };
                VersionInfo: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.VersionInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.VersionInfo;
                    fromJSON(object: any): _23.VersionInfo;
                    toJSON(message: _23.VersionInfo): unknown;
                    fromPartial(object: {
                        name?: string;
                        appName?: string;
                        version?: string;
                        gitCommit?: string;
                        buildTags?: string;
                        goVersion?: string;
                        buildDeps?: {
                            path?: string;
                            version?: string;
                            sum?: string;
                        }[];
                        cosmosSdkVersion?: string;
                    }): _23.VersionInfo;
                    fromSDK(object: _23.VersionInfoSDKType): _23.VersionInfo;
                    toSDK(message: _23.VersionInfo): _23.VersionInfoSDKType;
                    fromAmino(object: _23.VersionInfoAmino): _23.VersionInfo;
                    toAmino(message: _23.VersionInfo): _23.VersionInfoAmino;
                    fromAminoMsg(object: _23.VersionInfoAminoMsg): _23.VersionInfo;
                    toAminoMsg(message: _23.VersionInfo): _23.VersionInfoAminoMsg;
                    fromProtoMsg(message: _23.VersionInfoProtoMsg): _23.VersionInfo;
                    toProto(message: _23.VersionInfo): Uint8Array;
                    toProtoMsg(message: _23.VersionInfo): _23.VersionInfoProtoMsg;
                };
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.Module;
                    fromJSON(object: any): _23.Module;
                    toJSON(message: _23.Module): unknown;
                    fromPartial(object: {
                        path?: string;
                        version?: string;
                        sum?: string;
                    }): _23.Module;
                    fromSDK(object: _23.ModuleSDKType): _23.Module;
                    toSDK(message: _23.Module): _23.ModuleSDKType;
                    fromAmino(object: _23.ModuleAmino): _23.Module;
                    toAmino(message: _23.Module): _23.ModuleAmino;
                    fromAminoMsg(object: _23.ModuleAminoMsg): _23.Module;
                    toAminoMsg(message: _23.Module): _23.ModuleAminoMsg;
                    fromProtoMsg(message: _23.ModuleProtoMsg): _23.Module;
                    toProto(message: _23.Module): Uint8Array;
                    toProtoMsg(message: _23.Module): _23.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            Coin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _24.Coin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.Coin;
                fromJSON(object: any): _24.Coin;
                toJSON(message: _24.Coin): unknown;
                fromPartial(object: {
                    denom?: string;
                    amount?: string;
                }): _24.Coin;
                fromSDK(object: _24.CoinSDKType): _24.Coin;
                toSDK(message: _24.Coin): _24.CoinSDKType;
                fromAmino(object: _24.CoinAmino): _24.Coin;
                toAmino(message: _24.Coin): _24.CoinAmino;
                fromAminoMsg(object: _24.CoinAminoMsg): _24.Coin;
                toAminoMsg(message: _24.Coin): _24.CoinAminoMsg;
                fromProtoMsg(message: _24.CoinProtoMsg): _24.Coin;
                toProto(message: _24.Coin): Uint8Array;
                toProtoMsg(message: _24.Coin): _24.CoinProtoMsg;
            };
            DecCoin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _24.DecCoin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.DecCoin;
                fromJSON(object: any): _24.DecCoin;
                toJSON(message: _24.DecCoin): unknown;
                fromPartial(object: {
                    denom?: string;
                    amount?: string;
                }): _24.DecCoin;
                fromSDK(object: _24.DecCoinSDKType): _24.DecCoin;
                toSDK(message: _24.DecCoin): _24.DecCoinSDKType;
                fromAmino(object: _24.DecCoinAmino): _24.DecCoin;
                toAmino(message: _24.DecCoin): _24.DecCoinAmino;
                fromAminoMsg(object: _24.DecCoinAminoMsg): _24.DecCoin;
                toAminoMsg(message: _24.DecCoin): _24.DecCoinAminoMsg;
                fromProtoMsg(message: _24.DecCoinProtoMsg): _24.DecCoin;
                toProto(message: _24.DecCoin): Uint8Array;
                toProtoMsg(message: _24.DecCoin): _24.DecCoinProtoMsg;
            };
            IntProto: {
                typeUrl: string;
                aminoType: string;
                encode(message: _24.IntProto, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.IntProto;
                fromJSON(object: any): _24.IntProto;
                toJSON(message: _24.IntProto): unknown;
                fromPartial(object: {
                    int?: string;
                }): _24.IntProto;
                fromSDK(object: _24.IntProtoSDKType): _24.IntProto;
                toSDK(message: _24.IntProto): _24.IntProtoSDKType;
                fromAmino(object: _24.IntProtoAmino): _24.IntProto;
                toAmino(message: _24.IntProto): _24.IntProtoAmino;
                fromAminoMsg(object: _24.IntProtoAminoMsg): _24.IntProto;
                toAminoMsg(message: _24.IntProto): _24.IntProtoAminoMsg;
                fromProtoMsg(message: _24.IntProtoProtoMsg): _24.IntProto;
                toProto(message: _24.IntProto): Uint8Array;
                toProtoMsg(message: _24.IntProto): _24.IntProtoProtoMsg;
            };
            DecProto: {
                typeUrl: string;
                aminoType: string;
                encode(message: _24.DecProto, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.DecProto;
                fromJSON(object: any): _24.DecProto;
                toJSON(message: _24.DecProto): unknown;
                fromPartial(object: {
                    dec?: string;
                }): _24.DecProto;
                fromSDK(object: _24.DecProtoSDKType): _24.DecProto;
                toSDK(message: _24.DecProto): _24.DecProtoSDKType;
                fromAmino(object: _24.DecProtoAmino): _24.DecProto;
                toAmino(message: _24.DecProto): _24.DecProtoAmino;
                fromAminoMsg(object: _24.DecProtoAminoMsg): _24.DecProto;
                toAminoMsg(message: _24.DecProto): _24.DecProtoAminoMsg;
                fromProtoMsg(message: _24.DecProtoProtoMsg): _24.DecProto;
                toProto(message: _24.DecProto): Uint8Array;
                toProtoMsg(message: _24.DecProto): _24.DecProtoProtoMsg;
            };
        };
    }
    namespace capability {
        const v1beta1: {
            GenesisOwners: {
                typeUrl: string;
                aminoType: string;
                encode(message: _26.GenesisOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _26.GenesisOwners;
                fromJSON(object: any): _26.GenesisOwners;
                toJSON(message: _26.GenesisOwners): unknown;
                fromPartial(object: {
                    index?: bigint;
                    indexOwners?: {
                        owners?: {
                            module?: string;
                            name?: string;
                        }[];
                    };
                }): _26.GenesisOwners;
                fromSDK(object: _26.GenesisOwnersSDKType): _26.GenesisOwners;
                toSDK(message: _26.GenesisOwners): _26.GenesisOwnersSDKType;
                fromAmino(object: _26.GenesisOwnersAmino): _26.GenesisOwners;
                toAmino(message: _26.GenesisOwners): _26.GenesisOwnersAmino;
                fromAminoMsg(object: _26.GenesisOwnersAminoMsg): _26.GenesisOwners;
                toAminoMsg(message: _26.GenesisOwners): _26.GenesisOwnersAminoMsg;
                fromProtoMsg(message: _26.GenesisOwnersProtoMsg): _26.GenesisOwners;
                toProto(message: _26.GenesisOwners): Uint8Array;
                toProtoMsg(message: _26.GenesisOwners): _26.GenesisOwnersProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _26.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _26.GenesisState;
                fromJSON(object: any): _26.GenesisState;
                toJSON(message: _26.GenesisState): unknown;
                fromPartial(object: {
                    index?: bigint;
                    owners?: {
                        index?: bigint;
                        indexOwners?: {
                            owners?: {
                                module?: string;
                                name?: string;
                            }[];
                        };
                    }[];
                }): _26.GenesisState;
                fromSDK(object: _26.GenesisStateSDKType): _26.GenesisState;
                toSDK(message: _26.GenesisState): _26.GenesisStateSDKType;
                fromAmino(object: _26.GenesisStateAmino): _26.GenesisState;
                toAmino(message: _26.GenesisState): _26.GenesisStateAmino;
                fromAminoMsg(object: _26.GenesisStateAminoMsg): _26.GenesisState;
                toAminoMsg(message: _26.GenesisState): _26.GenesisStateAminoMsg;
                fromProtoMsg(message: _26.GenesisStateProtoMsg): _26.GenesisState;
                toProto(message: _26.GenesisState): Uint8Array;
                toProtoMsg(message: _26.GenesisState): _26.GenesisStateProtoMsg;
            };
            Capability: {
                typeUrl: string;
                aminoType: string;
                encode(message: _25.Capability, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.Capability;
                fromJSON(object: any): _25.Capability;
                toJSON(message: _25.Capability): unknown;
                fromPartial(object: {
                    index?: bigint;
                }): _25.Capability;
                fromSDK(object: _25.CapabilitySDKType): _25.Capability;
                toSDK(message: _25.Capability): _25.CapabilitySDKType;
                fromAmino(object: _25.CapabilityAmino): _25.Capability;
                toAmino(message: _25.Capability): _25.CapabilityAmino;
                fromAminoMsg(object: _25.CapabilityAminoMsg): _25.Capability;
                toAminoMsg(message: _25.Capability): _25.CapabilityAminoMsg;
                fromProtoMsg(message: _25.CapabilityProtoMsg): _25.Capability;
                toProto(message: _25.Capability): Uint8Array;
                toProtoMsg(message: _25.Capability): _25.CapabilityProtoMsg;
            };
            Owner: {
                typeUrl: string;
                aminoType: string;
                encode(message: _25.Owner, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.Owner;
                fromJSON(object: any): _25.Owner;
                toJSON(message: _25.Owner): unknown;
                fromPartial(object: {
                    module?: string;
                    name?: string;
                }): _25.Owner;
                fromSDK(object: _25.OwnerSDKType): _25.Owner;
                toSDK(message: _25.Owner): _25.OwnerSDKType;
                fromAmino(object: _25.OwnerAmino): _25.Owner;
                toAmino(message: _25.Owner): _25.OwnerAmino;
                fromAminoMsg(object: _25.OwnerAminoMsg): _25.Owner;
                toAminoMsg(message: _25.Owner): _25.OwnerAminoMsg;
                fromProtoMsg(message: _25.OwnerProtoMsg): _25.Owner;
                toProto(message: _25.Owner): Uint8Array;
                toProtoMsg(message: _25.Owner): _25.OwnerProtoMsg;
            };
            CapabilityOwners: {
                typeUrl: string;
                aminoType: string;
                encode(message: _25.CapabilityOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.CapabilityOwners;
                fromJSON(object: any): _25.CapabilityOwners;
                toJSON(message: _25.CapabilityOwners): unknown;
                fromPartial(object: {
                    owners?: {
                        module?: string;
                        name?: string;
                    }[];
                }): _25.CapabilityOwners;
                fromSDK(object: _25.CapabilityOwnersSDKType): _25.CapabilityOwners;
                toSDK(message: _25.CapabilityOwners): _25.CapabilityOwnersSDKType;
                fromAmino(object: _25.CapabilityOwnersAmino): _25.CapabilityOwners;
                toAmino(message: _25.CapabilityOwners): _25.CapabilityOwnersAmino;
                fromAminoMsg(object: _25.CapabilityOwnersAminoMsg): _25.CapabilityOwners;
                toAminoMsg(message: _25.CapabilityOwners): _25.CapabilityOwnersAminoMsg;
                fromProtoMsg(message: _25.CapabilityOwnersProtoMsg): _25.CapabilityOwners;
                toProto(message: _25.CapabilityOwners): Uint8Array;
                toProtoMsg(message: _25.CapabilityOwners): _25.CapabilityOwnersProtoMsg;
            };
        };
    }
    namespace crisis {
        const v1beta1: {
            MsgClientImpl: typeof _214.MsgClientImpl;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    verifyInvariant(value: _28.MsgVerifyInvariant): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    verifyInvariant(value: _28.MsgVerifyInvariant): {
                        typeUrl: string;
                        value: _28.MsgVerifyInvariant;
                    };
                };
                toJSON: {
                    verifyInvariant(value: _28.MsgVerifyInvariant): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    verifyInvariant(value: any): {
                        typeUrl: string;
                        value: _28.MsgVerifyInvariant;
                    };
                };
                fromPartial: {
                    verifyInvariant(value: _28.MsgVerifyInvariant): {
                        typeUrl: string;
                        value: _28.MsgVerifyInvariant;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.crisis.v1beta1.MsgVerifyInvariant": {
                    aminoType: string;
                    toAmino: (message: _28.MsgVerifyInvariant) => _28.MsgVerifyInvariantAmino;
                    fromAmino: (object: _28.MsgVerifyInvariantAmino) => _28.MsgVerifyInvariant;
                };
            };
            MsgVerifyInvariant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.MsgVerifyInvariant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.MsgVerifyInvariant;
                fromJSON(object: any): _28.MsgVerifyInvariant;
                toJSON(message: _28.MsgVerifyInvariant): unknown;
                fromPartial(object: {
                    sender?: string;
                    invariantModuleName?: string;
                    invariantRoute?: string;
                }): _28.MsgVerifyInvariant;
                fromSDK(object: _28.MsgVerifyInvariantSDKType): _28.MsgVerifyInvariant;
                toSDK(message: _28.MsgVerifyInvariant): _28.MsgVerifyInvariantSDKType;
                fromAmino(object: _28.MsgVerifyInvariantAmino): _28.MsgVerifyInvariant;
                toAmino(message: _28.MsgVerifyInvariant): _28.MsgVerifyInvariantAmino;
                fromAminoMsg(object: _28.MsgVerifyInvariantAminoMsg): _28.MsgVerifyInvariant;
                toAminoMsg(message: _28.MsgVerifyInvariant): _28.MsgVerifyInvariantAminoMsg;
                fromProtoMsg(message: _28.MsgVerifyInvariantProtoMsg): _28.MsgVerifyInvariant;
                toProto(message: _28.MsgVerifyInvariant): Uint8Array;
                toProtoMsg(message: _28.MsgVerifyInvariant): _28.MsgVerifyInvariantProtoMsg;
            };
            MsgVerifyInvariantResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _28.MsgVerifyInvariantResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.MsgVerifyInvariantResponse;
                fromJSON(_: any): _28.MsgVerifyInvariantResponse;
                toJSON(_: _28.MsgVerifyInvariantResponse): unknown;
                fromPartial(_: {}): _28.MsgVerifyInvariantResponse;
                fromSDK(_: _28.MsgVerifyInvariantResponseSDKType): _28.MsgVerifyInvariantResponse;
                toSDK(_: _28.MsgVerifyInvariantResponse): _28.MsgVerifyInvariantResponseSDKType;
                fromAmino(_: _28.MsgVerifyInvariantResponseAmino): _28.MsgVerifyInvariantResponse;
                toAmino(_: _28.MsgVerifyInvariantResponse): _28.MsgVerifyInvariantResponseAmino;
                fromAminoMsg(object: _28.MsgVerifyInvariantResponseAminoMsg): _28.MsgVerifyInvariantResponse;
                toAminoMsg(message: _28.MsgVerifyInvariantResponse): _28.MsgVerifyInvariantResponseAminoMsg;
                fromProtoMsg(message: _28.MsgVerifyInvariantResponseProtoMsg): _28.MsgVerifyInvariantResponse;
                toProto(message: _28.MsgVerifyInvariantResponse): Uint8Array;
                toProtoMsg(message: _28.MsgVerifyInvariantResponse): _28.MsgVerifyInvariantResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _27.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _27.GenesisState;
                fromJSON(object: any): _27.GenesisState;
                toJSON(message: _27.GenesisState): unknown;
                fromPartial(object: {
                    constantFee?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _27.GenesisState;
                fromSDK(object: _27.GenesisStateSDKType): _27.GenesisState;
                toSDK(message: _27.GenesisState): _27.GenesisStateSDKType;
                fromAmino(object: _27.GenesisStateAmino): _27.GenesisState;
                toAmino(message: _27.GenesisState): _27.GenesisStateAmino;
                fromAminoMsg(object: _27.GenesisStateAminoMsg): _27.GenesisState;
                toAminoMsg(message: _27.GenesisState): _27.GenesisStateAminoMsg;
                fromProtoMsg(message: _27.GenesisStateProtoMsg): _27.GenesisState;
                toProto(message: _27.GenesisState): Uint8Array;
                toProtoMsg(message: _27.GenesisState): _27.GenesisStateProtoMsg;
            };
        };
    }
    namespace crypto {
        const ed25519: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.PubKey;
                fromJSON(object: any): _29.PubKey;
                toJSON(message: _29.PubKey): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _29.PubKey;
                fromSDK(object: _29.PubKeySDKType): _29.PubKey;
                toSDK(message: _29.PubKey): _29.PubKeySDKType;
                fromAmino(object: _29.PubKeyAmino): _29.PubKey;
                toAmino(message: _29.PubKey): _29.PubKeyAmino;
                fromAminoMsg(object: _29.PubKeyAminoMsg): _29.PubKey;
                toAminoMsg(message: _29.PubKey): _29.PubKeyAminoMsg;
                fromProtoMsg(message: _29.PubKeyProtoMsg): _29.PubKey;
                toProto(message: _29.PubKey): Uint8Array;
                toProtoMsg(message: _29.PubKey): _29.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.PrivKey;
                fromJSON(object: any): _29.PrivKey;
                toJSON(message: _29.PrivKey): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _29.PrivKey;
                fromSDK(object: _29.PrivKeySDKType): _29.PrivKey;
                toSDK(message: _29.PrivKey): _29.PrivKeySDKType;
                fromAmino(object: _29.PrivKeyAmino): _29.PrivKey;
                toAmino(message: _29.PrivKey): _29.PrivKeyAmino;
                fromAminoMsg(object: _29.PrivKeyAminoMsg): _29.PrivKey;
                toAminoMsg(message: _29.PrivKey): _29.PrivKeyAminoMsg;
                fromProtoMsg(message: _29.PrivKeyProtoMsg): _29.PrivKey;
                toProto(message: _29.PrivKey): Uint8Array;
                toProtoMsg(message: _29.PrivKey): _29.PrivKeyProtoMsg;
            };
        };
        const multisig: {
            LegacyAminoPubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _30.LegacyAminoPubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _30.LegacyAminoPubKey;
                fromJSON(object: any): _30.LegacyAminoPubKey;
                toJSON(message: _30.LegacyAminoPubKey): unknown;
                fromPartial(object: {
                    threshold?: number;
                    publicKeys?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _30.LegacyAminoPubKey;
                fromSDK(object: _30.LegacyAminoPubKeySDKType): _30.LegacyAminoPubKey;
                toSDK(message: _30.LegacyAminoPubKey): _30.LegacyAminoPubKeySDKType;
                fromAmino(object: _30.LegacyAminoPubKeyAmino): _30.LegacyAminoPubKey;
                toAmino(message: _30.LegacyAminoPubKey): _30.LegacyAminoPubKeyAmino;
                fromAminoMsg(object: _30.LegacyAminoPubKeyAminoMsg): _30.LegacyAminoPubKey;
                toAminoMsg(message: _30.LegacyAminoPubKey): _30.LegacyAminoPubKeyAminoMsg;
                fromProtoMsg(message: _30.LegacyAminoPubKeyProtoMsg): _30.LegacyAminoPubKey;
                toProto(message: _30.LegacyAminoPubKey): Uint8Array;
                toProtoMsg(message: _30.LegacyAminoPubKey): _30.LegacyAminoPubKeyProtoMsg;
            };
        };
        const secp256k1: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _31.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _31.PubKey;
                fromJSON(object: any): _31.PubKey;
                toJSON(message: _31.PubKey): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _31.PubKey;
                fromSDK(object: _31.PubKeySDKType): _31.PubKey;
                toSDK(message: _31.PubKey): _31.PubKeySDKType;
                fromAmino(object: _31.PubKeyAmino): _31.PubKey;
                toAmino(message: _31.PubKey): _31.PubKeyAmino;
                fromAminoMsg(object: _31.PubKeyAminoMsg): _31.PubKey;
                toAminoMsg(message: _31.PubKey): _31.PubKeyAminoMsg;
                fromProtoMsg(message: _31.PubKeyProtoMsg): _31.PubKey;
                toProto(message: _31.PubKey): Uint8Array;
                toProtoMsg(message: _31.PubKey): _31.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _31.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _31.PrivKey;
                fromJSON(object: any): _31.PrivKey;
                toJSON(message: _31.PrivKey): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _31.PrivKey;
                fromSDK(object: _31.PrivKeySDKType): _31.PrivKey;
                toSDK(message: _31.PrivKey): _31.PrivKeySDKType;
                fromAmino(object: _31.PrivKeyAmino): _31.PrivKey;
                toAmino(message: _31.PrivKey): _31.PrivKeyAmino;
                fromAminoMsg(object: _31.PrivKeyAminoMsg): _31.PrivKey;
                toAminoMsg(message: _31.PrivKey): _31.PrivKeyAminoMsg;
                fromProtoMsg(message: _31.PrivKeyProtoMsg): _31.PrivKey;
                toProto(message: _31.PrivKey): Uint8Array;
                toProtoMsg(message: _31.PrivKey): _31.PrivKeyProtoMsg;
            };
        };
        const secp256r1: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _32.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _32.PubKey;
                fromJSON(object: any): _32.PubKey;
                toJSON(message: _32.PubKey): unknown;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _32.PubKey;
                fromSDK(object: _32.PubKeySDKType): _32.PubKey;
                toSDK(message: _32.PubKey): _32.PubKeySDKType;
                fromAmino(object: _32.PubKeyAmino): _32.PubKey;
                toAmino(message: _32.PubKey): _32.PubKeyAmino;
                fromAminoMsg(object: _32.PubKeyAminoMsg): _32.PubKey;
                toAminoMsg(message: _32.PubKey): _32.PubKeyAminoMsg;
                fromProtoMsg(message: _32.PubKeyProtoMsg): _32.PubKey;
                toProto(message: _32.PubKey): Uint8Array;
                toProtoMsg(message: _32.PubKey): _32.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _32.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _32.PrivKey;
                fromJSON(object: any): _32.PrivKey;
                toJSON(message: _32.PrivKey): unknown;
                fromPartial(object: {
                    secret?: Uint8Array;
                }): _32.PrivKey;
                fromSDK(object: _32.PrivKeySDKType): _32.PrivKey;
                toSDK(message: _32.PrivKey): _32.PrivKeySDKType;
                fromAmino(object: _32.PrivKeyAmino): _32.PrivKey;
                toAmino(message: _32.PrivKey): _32.PrivKeyAmino;
                fromAminoMsg(object: _32.PrivKeyAminoMsg): _32.PrivKey;
                toAminoMsg(message: _32.PrivKey): _32.PrivKeyAminoMsg;
                fromProtoMsg(message: _32.PrivKeyProtoMsg): _32.PrivKey;
                toProto(message: _32.PrivKey): Uint8Array;
                toProtoMsg(message: _32.PrivKey): _32.PrivKeyProtoMsg;
            };
        };
        namespace hd {
            const v1: {
                BIP44Params: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _33.BIP44Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _33.BIP44Params;
                    fromJSON(object: any): _33.BIP44Params;
                    toJSON(message: _33.BIP44Params): unknown;
                    fromPartial(object: {
                        purpose?: number;
                        coinType?: number;
                        account?: number;
                        change?: boolean;
                        addressIndex?: number;
                    }): _33.BIP44Params;
                    fromSDK(object: _33.BIP44ParamsSDKType): _33.BIP44Params;
                    toSDK(message: _33.BIP44Params): _33.BIP44ParamsSDKType;
                    fromAmino(object: _33.BIP44ParamsAmino): _33.BIP44Params;
                    toAmino(message: _33.BIP44Params): _33.BIP44ParamsAmino;
                    fromAminoMsg(object: _33.BIP44ParamsAminoMsg): _33.BIP44Params;
                    toAminoMsg(message: _33.BIP44Params): _33.BIP44ParamsAminoMsg;
                    fromProtoMsg(message: _33.BIP44ParamsProtoMsg): _33.BIP44Params;
                    toProto(message: _33.BIP44Params): Uint8Array;
                    toProtoMsg(message: _33.BIP44Params): _33.BIP44ParamsProtoMsg;
                };
            };
        }
        namespace keyring {
            const v1: {
                Record: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _34.Record, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Record;
                    fromJSON(object: any): _34.Record;
                    toJSON(message: _34.Record): unknown;
                    fromPartial(object: {
                        name?: string;
                        pubKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        local?: {
                            privKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            privKeyType?: string;
                        };
                        ledger?: {
                            path?: {
                                purpose?: number;
                                coinType?: number;
                                account?: number;
                                change?: boolean;
                                addressIndex?: number;
                            };
                        };
                        multi?: {};
                        offline?: {};
                    }): _34.Record;
                    fromSDK(object: _34.RecordSDKType): _34.Record;
                    toSDK(message: _34.Record): _34.RecordSDKType;
                    fromAmino(object: _34.RecordAmino): _34.Record;
                    toAmino(message: _34.Record): _34.RecordAmino;
                    fromAminoMsg(object: _34.RecordAminoMsg): _34.Record;
                    toAminoMsg(message: _34.Record): _34.RecordAminoMsg;
                    fromProtoMsg(message: _34.RecordProtoMsg): _34.Record;
                    toProto(message: _34.Record): Uint8Array;
                    toProtoMsg(message: _34.Record): _34.RecordProtoMsg;
                };
                Record_Local: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _34.Record_Local, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Record_Local;
                    fromJSON(object: any): _34.Record_Local;
                    toJSON(message: _34.Record_Local): unknown;
                    fromPartial(object: {
                        privKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        privKeyType?: string;
                    }): _34.Record_Local;
                    fromSDK(object: _34.Record_LocalSDKType): _34.Record_Local;
                    toSDK(message: _34.Record_Local): _34.Record_LocalSDKType;
                    fromAmino(object: _34.Record_LocalAmino): _34.Record_Local;
                    toAmino(message: _34.Record_Local): _34.Record_LocalAmino;
                    fromAminoMsg(object: _34.Record_LocalAminoMsg): _34.Record_Local;
                    toAminoMsg(message: _34.Record_Local): _34.Record_LocalAminoMsg;
                    fromProtoMsg(message: _34.Record_LocalProtoMsg): _34.Record_Local;
                    toProto(message: _34.Record_Local): Uint8Array;
                    toProtoMsg(message: _34.Record_Local): _34.Record_LocalProtoMsg;
                };
                Record_Ledger: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _34.Record_Ledger, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Record_Ledger;
                    fromJSON(object: any): _34.Record_Ledger;
                    toJSON(message: _34.Record_Ledger): unknown;
                    fromPartial(object: {
                        path?: {
                            purpose?: number;
                            coinType?: number;
                            account?: number;
                            change?: boolean;
                            addressIndex?: number;
                        };
                    }): _34.Record_Ledger;
                    fromSDK(object: _34.Record_LedgerSDKType): _34.Record_Ledger;
                    toSDK(message: _34.Record_Ledger): _34.Record_LedgerSDKType;
                    fromAmino(object: _34.Record_LedgerAmino): _34.Record_Ledger;
                    toAmino(message: _34.Record_Ledger): _34.Record_LedgerAmino;
                    fromAminoMsg(object: _34.Record_LedgerAminoMsg): _34.Record_Ledger;
                    toAminoMsg(message: _34.Record_Ledger): _34.Record_LedgerAminoMsg;
                    fromProtoMsg(message: _34.Record_LedgerProtoMsg): _34.Record_Ledger;
                    toProto(message: _34.Record_Ledger): Uint8Array;
                    toProtoMsg(message: _34.Record_Ledger): _34.Record_LedgerProtoMsg;
                };
                Record_Multi: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _34.Record_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Record_Multi;
                    fromJSON(_: any): _34.Record_Multi;
                    toJSON(_: _34.Record_Multi): unknown;
                    fromPartial(_: {}): _34.Record_Multi;
                    fromSDK(_: _34.Record_MultiSDKType): _34.Record_Multi;
                    toSDK(_: _34.Record_Multi): _34.Record_MultiSDKType;
                    fromAmino(_: _34.Record_MultiAmino): _34.Record_Multi;
                    toAmino(_: _34.Record_Multi): _34.Record_MultiAmino;
                    fromAminoMsg(object: _34.Record_MultiAminoMsg): _34.Record_Multi;
                    toAminoMsg(message: _34.Record_Multi): _34.Record_MultiAminoMsg;
                    fromProtoMsg(message: _34.Record_MultiProtoMsg): _34.Record_Multi;
                    toProto(message: _34.Record_Multi): Uint8Array;
                    toProtoMsg(message: _34.Record_Multi): _34.Record_MultiProtoMsg;
                };
                Record_Offline: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _34.Record_Offline, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Record_Offline;
                    fromJSON(_: any): _34.Record_Offline;
                    toJSON(_: _34.Record_Offline): unknown;
                    fromPartial(_: {}): _34.Record_Offline;
                    fromSDK(_: _34.Record_OfflineSDKType): _34.Record_Offline;
                    toSDK(_: _34.Record_Offline): _34.Record_OfflineSDKType;
                    fromAmino(_: _34.Record_OfflineAmino): _34.Record_Offline;
                    toAmino(_: _34.Record_Offline): _34.Record_OfflineAmino;
                    fromAminoMsg(object: _34.Record_OfflineAminoMsg): _34.Record_Offline;
                    toAminoMsg(message: _34.Record_Offline): _34.Record_OfflineAminoMsg;
                    fromProtoMsg(message: _34.Record_OfflineProtoMsg): _34.Record_Offline;
                    toProto(message: _34.Record_Offline): Uint8Array;
                    toProtoMsg(message: _34.Record_Offline): _34.Record_OfflineProtoMsg;
                };
            };
        }
    }
    namespace distribution {
        const v1beta1: {
            MsgClientImpl: typeof _215.MsgClientImpl;
            QueryClientImpl: typeof _198.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _37.QueryParamsRequest): Promise<_37.QueryParamsResponse>;
                validatorOutstandingRewards(request: _37.QueryValidatorOutstandingRewardsRequest): Promise<_37.QueryValidatorOutstandingRewardsResponse>;
                validatorCommission(request: _37.QueryValidatorCommissionRequest): Promise<_37.QueryValidatorCommissionResponse>;
                validatorSlashes(request: _37.QueryValidatorSlashesRequest): Promise<_37.QueryValidatorSlashesResponse>;
                delegationRewards(request: _37.QueryDelegationRewardsRequest): Promise<_37.QueryDelegationRewardsResponse>;
                delegationTotalRewards(request: _37.QueryDelegationTotalRewardsRequest): Promise<_37.QueryDelegationTotalRewardsResponse>;
                delegatorValidators(request: _37.QueryDelegatorValidatorsRequest): Promise<_37.QueryDelegatorValidatorsResponse>;
                delegatorWithdrawAddress(request: _37.QueryDelegatorWithdrawAddressRequest): Promise<_37.QueryDelegatorWithdrawAddressResponse>;
                communityPool(request?: _37.QueryCommunityPoolRequest): Promise<_37.QueryCommunityPoolResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useParams: <TData = _37.QueryParamsResponse>({ request, options }: _198.UseParamsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useValidatorOutstandingRewards: <TData_1 = _37.QueryValidatorOutstandingRewardsResponse>({ request, options }: _198.UseValidatorOutstandingRewardsQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useValidatorCommission: <TData_2 = _37.QueryValidatorCommissionResponse>({ request, options }: _198.UseValidatorCommissionQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useValidatorSlashes: <TData_3 = _37.QueryValidatorSlashesResponse>({ request, options }: _198.UseValidatorSlashesQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useDelegationRewards: <TData_4 = _37.QueryDelegationRewardsResponse>({ request, options }: _198.UseDelegationRewardsQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useDelegationTotalRewards: <TData_5 = _37.QueryDelegationTotalRewardsResponse>({ request, options }: _198.UseDelegationTotalRewardsQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useDelegatorValidators: <TData_6 = _37.QueryDelegatorValidatorsResponse>({ request, options }: _198.UseDelegatorValidatorsQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useDelegatorWithdrawAddress: <TData_7 = _37.QueryDelegatorWithdrawAddressResponse>({ request, options }: _198.UseDelegatorWithdrawAddressQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
                useCommunityPool: <TData_8 = _37.QueryCommunityPoolResponse>({ request, options }: _198.UseCommunityPoolQuery<TData_8>) => import("@tanstack/react-query").UseQueryResult<TData_8, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    setWithdrawAddress(value: _38.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawDelegatorReward(value: _38.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawValidatorCommission(value: _38.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    fundCommunityPool(value: _38.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    setWithdrawAddress(value: _38.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: _38.MsgSetWithdrawAddress;
                    };
                    withdrawDelegatorReward(value: _38.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: _38.MsgWithdrawDelegatorReward;
                    };
                    withdrawValidatorCommission(value: _38.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: _38.MsgWithdrawValidatorCommission;
                    };
                    fundCommunityPool(value: _38.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: _38.MsgFundCommunityPool;
                    };
                };
                toJSON: {
                    setWithdrawAddress(value: _38.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: unknown;
                    };
                    withdrawDelegatorReward(value: _38.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: unknown;
                    };
                    withdrawValidatorCommission(value: _38.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: unknown;
                    };
                    fundCommunityPool(value: _38.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    setWithdrawAddress(value: any): {
                        typeUrl: string;
                        value: _38.MsgSetWithdrawAddress;
                    };
                    withdrawDelegatorReward(value: any): {
                        typeUrl: string;
                        value: _38.MsgWithdrawDelegatorReward;
                    };
                    withdrawValidatorCommission(value: any): {
                        typeUrl: string;
                        value: _38.MsgWithdrawValidatorCommission;
                    };
                    fundCommunityPool(value: any): {
                        typeUrl: string;
                        value: _38.MsgFundCommunityPool;
                    };
                };
                fromPartial: {
                    setWithdrawAddress(value: _38.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: _38.MsgSetWithdrawAddress;
                    };
                    withdrawDelegatorReward(value: _38.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: _38.MsgWithdrawDelegatorReward;
                    };
                    withdrawValidatorCommission(value: _38.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: _38.MsgWithdrawValidatorCommission;
                    };
                    fundCommunityPool(value: _38.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: _38.MsgFundCommunityPool;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress": {
                    aminoType: string;
                    toAmino: (message: _38.MsgSetWithdrawAddress) => _38.MsgSetWithdrawAddressAmino;
                    fromAmino: (object: _38.MsgSetWithdrawAddressAmino) => _38.MsgSetWithdrawAddress;
                };
                "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward": {
                    aminoType: string;
                    toAmino: (message: _38.MsgWithdrawDelegatorReward) => _38.MsgWithdrawDelegatorRewardAmino;
                    fromAmino: (object: _38.MsgWithdrawDelegatorRewardAmino) => _38.MsgWithdrawDelegatorReward;
                };
                "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission": {
                    aminoType: string;
                    toAmino: (message: _38.MsgWithdrawValidatorCommission) => _38.MsgWithdrawValidatorCommissionAmino;
                    fromAmino: (object: _38.MsgWithdrawValidatorCommissionAmino) => _38.MsgWithdrawValidatorCommission;
                };
                "/cosmos.distribution.v1beta1.MsgFundCommunityPool": {
                    aminoType: string;
                    toAmino: (message: _38.MsgFundCommunityPool) => _38.MsgFundCommunityPoolAmino;
                    fromAmino: (object: _38.MsgFundCommunityPoolAmino) => _38.MsgFundCommunityPool;
                };
            };
            MsgSetWithdrawAddress: {
                typeUrl: string;
                aminoType: string;
                encode(message: _38.MsgSetWithdrawAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgSetWithdrawAddress;
                fromJSON(object: any): _38.MsgSetWithdrawAddress;
                toJSON(message: _38.MsgSetWithdrawAddress): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    withdrawAddress?: string;
                }): _38.MsgSetWithdrawAddress;
                fromSDK(object: _38.MsgSetWithdrawAddressSDKType): _38.MsgSetWithdrawAddress;
                toSDK(message: _38.MsgSetWithdrawAddress): _38.MsgSetWithdrawAddressSDKType;
                fromAmino(object: _38.MsgSetWithdrawAddressAmino): _38.MsgSetWithdrawAddress;
                toAmino(message: _38.MsgSetWithdrawAddress): _38.MsgSetWithdrawAddressAmino;
                fromAminoMsg(object: _38.MsgSetWithdrawAddressAminoMsg): _38.MsgSetWithdrawAddress;
                toAminoMsg(message: _38.MsgSetWithdrawAddress): _38.MsgSetWithdrawAddressAminoMsg;
                fromProtoMsg(message: _38.MsgSetWithdrawAddressProtoMsg): _38.MsgSetWithdrawAddress;
                toProto(message: _38.MsgSetWithdrawAddress): Uint8Array;
                toProtoMsg(message: _38.MsgSetWithdrawAddress): _38.MsgSetWithdrawAddressProtoMsg;
            };
            MsgSetWithdrawAddressResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _38.MsgSetWithdrawAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgSetWithdrawAddressResponse;
                fromJSON(_: any): _38.MsgSetWithdrawAddressResponse;
                toJSON(_: _38.MsgSetWithdrawAddressResponse): unknown;
                fromPartial(_: {}): _38.MsgSetWithdrawAddressResponse;
                fromSDK(_: _38.MsgSetWithdrawAddressResponseSDKType): _38.MsgSetWithdrawAddressResponse;
                toSDK(_: _38.MsgSetWithdrawAddressResponse): _38.MsgSetWithdrawAddressResponseSDKType;
                fromAmino(_: _38.MsgSetWithdrawAddressResponseAmino): _38.MsgSetWithdrawAddressResponse;
                toAmino(_: _38.MsgSetWithdrawAddressResponse): _38.MsgSetWithdrawAddressResponseAmino;
                fromAminoMsg(object: _38.MsgSetWithdrawAddressResponseAminoMsg): _38.MsgSetWithdrawAddressResponse;
                toAminoMsg(message: _38.MsgSetWithdrawAddressResponse): _38.MsgSetWithdrawAddressResponseAminoMsg;
                fromProtoMsg(message: _38.MsgSetWithdrawAddressResponseProtoMsg): _38.MsgSetWithdrawAddressResponse;
                toProto(message: _38.MsgSetWithdrawAddressResponse): Uint8Array;
                toProtoMsg(message: _38.MsgSetWithdrawAddressResponse): _38.MsgSetWithdrawAddressResponseProtoMsg;
            };
            MsgWithdrawDelegatorReward: {
                typeUrl: string;
                aminoType: string;
                encode(message: _38.MsgWithdrawDelegatorReward, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgWithdrawDelegatorReward;
                fromJSON(object: any): _38.MsgWithdrawDelegatorReward;
                toJSON(message: _38.MsgWithdrawDelegatorReward): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _38.MsgWithdrawDelegatorReward;
                fromSDK(object: _38.MsgWithdrawDelegatorRewardSDKType): _38.MsgWithdrawDelegatorReward;
                toSDK(message: _38.MsgWithdrawDelegatorReward): _38.MsgWithdrawDelegatorRewardSDKType;
                fromAmino(object: _38.MsgWithdrawDelegatorRewardAmino): _38.MsgWithdrawDelegatorReward;
                toAmino(message: _38.MsgWithdrawDelegatorReward): _38.MsgWithdrawDelegatorRewardAmino;
                fromAminoMsg(object: _38.MsgWithdrawDelegatorRewardAminoMsg): _38.MsgWithdrawDelegatorReward;
                toAminoMsg(message: _38.MsgWithdrawDelegatorReward): _38.MsgWithdrawDelegatorRewardAminoMsg;
                fromProtoMsg(message: _38.MsgWithdrawDelegatorRewardProtoMsg): _38.MsgWithdrawDelegatorReward;
                toProto(message: _38.MsgWithdrawDelegatorReward): Uint8Array;
                toProtoMsg(message: _38.MsgWithdrawDelegatorReward): _38.MsgWithdrawDelegatorRewardProtoMsg;
            };
            MsgWithdrawDelegatorRewardResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _38.MsgWithdrawDelegatorRewardResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgWithdrawDelegatorRewardResponse;
                fromJSON(_: any): _38.MsgWithdrawDelegatorRewardResponse;
                toJSON(_: _38.MsgWithdrawDelegatorRewardResponse): unknown;
                fromPartial(_: {}): _38.MsgWithdrawDelegatorRewardResponse;
                fromSDK(_: _38.MsgWithdrawDelegatorRewardResponseSDKType): _38.MsgWithdrawDelegatorRewardResponse;
                toSDK(_: _38.MsgWithdrawDelegatorRewardResponse): _38.MsgWithdrawDelegatorRewardResponseSDKType;
                fromAmino(_: _38.MsgWithdrawDelegatorRewardResponseAmino): _38.MsgWithdrawDelegatorRewardResponse;
                toAmino(_: _38.MsgWithdrawDelegatorRewardResponse): _38.MsgWithdrawDelegatorRewardResponseAmino;
                fromAminoMsg(object: _38.MsgWithdrawDelegatorRewardResponseAminoMsg): _38.MsgWithdrawDelegatorRewardResponse;
                toAminoMsg(message: _38.MsgWithdrawDelegatorRewardResponse): _38.MsgWithdrawDelegatorRewardResponseAminoMsg;
                fromProtoMsg(message: _38.MsgWithdrawDelegatorRewardResponseProtoMsg): _38.MsgWithdrawDelegatorRewardResponse;
                toProto(message: _38.MsgWithdrawDelegatorRewardResponse): Uint8Array;
                toProtoMsg(message: _38.MsgWithdrawDelegatorRewardResponse): _38.MsgWithdrawDelegatorRewardResponseProtoMsg;
            };
            MsgWithdrawValidatorCommission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _38.MsgWithdrawValidatorCommission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgWithdrawValidatorCommission;
                fromJSON(object: any): _38.MsgWithdrawValidatorCommission;
                toJSON(message: _38.MsgWithdrawValidatorCommission): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _38.MsgWithdrawValidatorCommission;
                fromSDK(object: _38.MsgWithdrawValidatorCommissionSDKType): _38.MsgWithdrawValidatorCommission;
                toSDK(message: _38.MsgWithdrawValidatorCommission): _38.MsgWithdrawValidatorCommissionSDKType;
                fromAmino(object: _38.MsgWithdrawValidatorCommissionAmino): _38.MsgWithdrawValidatorCommission;
                toAmino(message: _38.MsgWithdrawValidatorCommission): _38.MsgWithdrawValidatorCommissionAmino;
                fromAminoMsg(object: _38.MsgWithdrawValidatorCommissionAminoMsg): _38.MsgWithdrawValidatorCommission;
                toAminoMsg(message: _38.MsgWithdrawValidatorCommission): _38.MsgWithdrawValidatorCommissionAminoMsg;
                fromProtoMsg(message: _38.MsgWithdrawValidatorCommissionProtoMsg): _38.MsgWithdrawValidatorCommission;
                toProto(message: _38.MsgWithdrawValidatorCommission): Uint8Array;
                toProtoMsg(message: _38.MsgWithdrawValidatorCommission): _38.MsgWithdrawValidatorCommissionProtoMsg;
            };
            MsgWithdrawValidatorCommissionResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _38.MsgWithdrawValidatorCommissionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgWithdrawValidatorCommissionResponse;
                fromJSON(_: any): _38.MsgWithdrawValidatorCommissionResponse;
                toJSON(_: _38.MsgWithdrawValidatorCommissionResponse): unknown;
                fromPartial(_: {}): _38.MsgWithdrawValidatorCommissionResponse;
                fromSDK(_: _38.MsgWithdrawValidatorCommissionResponseSDKType): _38.MsgWithdrawValidatorCommissionResponse;
                toSDK(_: _38.MsgWithdrawValidatorCommissionResponse): _38.MsgWithdrawValidatorCommissionResponseSDKType;
                fromAmino(_: _38.MsgWithdrawValidatorCommissionResponseAmino): _38.MsgWithdrawValidatorCommissionResponse;
                toAmino(_: _38.MsgWithdrawValidatorCommissionResponse): _38.MsgWithdrawValidatorCommissionResponseAmino;
                fromAminoMsg(object: _38.MsgWithdrawValidatorCommissionResponseAminoMsg): _38.MsgWithdrawValidatorCommissionResponse;
                toAminoMsg(message: _38.MsgWithdrawValidatorCommissionResponse): _38.MsgWithdrawValidatorCommissionResponseAminoMsg;
                fromProtoMsg(message: _38.MsgWithdrawValidatorCommissionResponseProtoMsg): _38.MsgWithdrawValidatorCommissionResponse;
                toProto(message: _38.MsgWithdrawValidatorCommissionResponse): Uint8Array;
                toProtoMsg(message: _38.MsgWithdrawValidatorCommissionResponse): _38.MsgWithdrawValidatorCommissionResponseProtoMsg;
            };
            MsgFundCommunityPool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _38.MsgFundCommunityPool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgFundCommunityPool;
                fromJSON(object: any): _38.MsgFundCommunityPool;
                toJSON(message: _38.MsgFundCommunityPool): unknown;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    depositor?: string;
                }): _38.MsgFundCommunityPool;
                fromSDK(object: _38.MsgFundCommunityPoolSDKType): _38.MsgFundCommunityPool;
                toSDK(message: _38.MsgFundCommunityPool): _38.MsgFundCommunityPoolSDKType;
                fromAmino(object: _38.MsgFundCommunityPoolAmino): _38.MsgFundCommunityPool;
                toAmino(message: _38.MsgFundCommunityPool): _38.MsgFundCommunityPoolAmino;
                fromAminoMsg(object: _38.MsgFundCommunityPoolAminoMsg): _38.MsgFundCommunityPool;
                toAminoMsg(message: _38.MsgFundCommunityPool): _38.MsgFundCommunityPoolAminoMsg;
                fromProtoMsg(message: _38.MsgFundCommunityPoolProtoMsg): _38.MsgFundCommunityPool;
                toProto(message: _38.MsgFundCommunityPool): Uint8Array;
                toProtoMsg(message: _38.MsgFundCommunityPool): _38.MsgFundCommunityPoolProtoMsg;
            };
            MsgFundCommunityPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _38.MsgFundCommunityPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.MsgFundCommunityPoolResponse;
                fromJSON(_: any): _38.MsgFundCommunityPoolResponse;
                toJSON(_: _38.MsgFundCommunityPoolResponse): unknown;
                fromPartial(_: {}): _38.MsgFundCommunityPoolResponse;
                fromSDK(_: _38.MsgFundCommunityPoolResponseSDKType): _38.MsgFundCommunityPoolResponse;
                toSDK(_: _38.MsgFundCommunityPoolResponse): _38.MsgFundCommunityPoolResponseSDKType;
                fromAmino(_: _38.MsgFundCommunityPoolResponseAmino): _38.MsgFundCommunityPoolResponse;
                toAmino(_: _38.MsgFundCommunityPoolResponse): _38.MsgFundCommunityPoolResponseAmino;
                fromAminoMsg(object: _38.MsgFundCommunityPoolResponseAminoMsg): _38.MsgFundCommunityPoolResponse;
                toAminoMsg(message: _38.MsgFundCommunityPoolResponse): _38.MsgFundCommunityPoolResponseAminoMsg;
                fromProtoMsg(message: _38.MsgFundCommunityPoolResponseProtoMsg): _38.MsgFundCommunityPoolResponse;
                toProto(message: _38.MsgFundCommunityPoolResponse): Uint8Array;
                toProtoMsg(message: _38.MsgFundCommunityPoolResponse): _38.MsgFundCommunityPoolResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _37.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryParamsRequest;
                fromJSON(_: any): _37.QueryParamsRequest;
                toJSON(_: _37.QueryParamsRequest): unknown;
                fromPartial(_: {}): _37.QueryParamsRequest;
                fromSDK(_: _37.QueryParamsRequestSDKType): _37.QueryParamsRequest;
                toSDK(_: _37.QueryParamsRequest): _37.QueryParamsRequestSDKType;
                fromAmino(_: _37.QueryParamsRequestAmino): _37.QueryParamsRequest;
                toAmino(_: _37.QueryParamsRequest): _37.QueryParamsRequestAmino;
                fromAminoMsg(object: _37.QueryParamsRequestAminoMsg): _37.QueryParamsRequest;
                toAminoMsg(message: _37.QueryParamsRequest): _37.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _37.QueryParamsRequestProtoMsg): _37.QueryParamsRequest;
                toProto(message: _37.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _37.QueryParamsRequest): _37.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryParamsResponse;
                fromJSON(object: any): _37.QueryParamsResponse;
                toJSON(message: _37.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        communityTax?: string;
                        baseProposerReward?: string;
                        bonusProposerReward?: string;
                        withdrawAddrEnabled?: boolean;
                    };
                }): _37.QueryParamsResponse;
                fromSDK(object: _37.QueryParamsResponseSDKType): _37.QueryParamsResponse;
                toSDK(message: _37.QueryParamsResponse): _37.QueryParamsResponseSDKType;
                fromAmino(object: _37.QueryParamsResponseAmino): _37.QueryParamsResponse;
                toAmino(message: _37.QueryParamsResponse): _37.QueryParamsResponseAmino;
                fromAminoMsg(object: _37.QueryParamsResponseAminoMsg): _37.QueryParamsResponse;
                toAminoMsg(message: _37.QueryParamsResponse): _37.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _37.QueryParamsResponseProtoMsg): _37.QueryParamsResponse;
                toProto(message: _37.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _37.QueryParamsResponse): _37.QueryParamsResponseProtoMsg;
            };
            QueryValidatorOutstandingRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorOutstandingRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorOutstandingRewardsRequest;
                fromJSON(object: any): _37.QueryValidatorOutstandingRewardsRequest;
                toJSON(message: _37.QueryValidatorOutstandingRewardsRequest): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _37.QueryValidatorOutstandingRewardsRequest;
                fromSDK(object: _37.QueryValidatorOutstandingRewardsRequestSDKType): _37.QueryValidatorOutstandingRewardsRequest;
                toSDK(message: _37.QueryValidatorOutstandingRewardsRequest): _37.QueryValidatorOutstandingRewardsRequestSDKType;
                fromAmino(object: _37.QueryValidatorOutstandingRewardsRequestAmino): _37.QueryValidatorOutstandingRewardsRequest;
                toAmino(message: _37.QueryValidatorOutstandingRewardsRequest): _37.QueryValidatorOutstandingRewardsRequestAmino;
                fromAminoMsg(object: _37.QueryValidatorOutstandingRewardsRequestAminoMsg): _37.QueryValidatorOutstandingRewardsRequest;
                toAminoMsg(message: _37.QueryValidatorOutstandingRewardsRequest): _37.QueryValidatorOutstandingRewardsRequestAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorOutstandingRewardsRequestProtoMsg): _37.QueryValidatorOutstandingRewardsRequest;
                toProto(message: _37.QueryValidatorOutstandingRewardsRequest): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorOutstandingRewardsRequest): _37.QueryValidatorOutstandingRewardsRequestProtoMsg;
            };
            QueryValidatorOutstandingRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorOutstandingRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorOutstandingRewardsResponse;
                fromJSON(object: any): _37.QueryValidatorOutstandingRewardsResponse;
                toJSON(message: _37.QueryValidatorOutstandingRewardsResponse): unknown;
                fromPartial(object: {
                    rewards?: {
                        rewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _37.QueryValidatorOutstandingRewardsResponse;
                fromSDK(object: _37.QueryValidatorOutstandingRewardsResponseSDKType): _37.QueryValidatorOutstandingRewardsResponse;
                toSDK(message: _37.QueryValidatorOutstandingRewardsResponse): _37.QueryValidatorOutstandingRewardsResponseSDKType;
                fromAmino(object: _37.QueryValidatorOutstandingRewardsResponseAmino): _37.QueryValidatorOutstandingRewardsResponse;
                toAmino(message: _37.QueryValidatorOutstandingRewardsResponse): _37.QueryValidatorOutstandingRewardsResponseAmino;
                fromAminoMsg(object: _37.QueryValidatorOutstandingRewardsResponseAminoMsg): _37.QueryValidatorOutstandingRewardsResponse;
                toAminoMsg(message: _37.QueryValidatorOutstandingRewardsResponse): _37.QueryValidatorOutstandingRewardsResponseAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorOutstandingRewardsResponseProtoMsg): _37.QueryValidatorOutstandingRewardsResponse;
                toProto(message: _37.QueryValidatorOutstandingRewardsResponse): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorOutstandingRewardsResponse): _37.QueryValidatorOutstandingRewardsResponseProtoMsg;
            };
            QueryValidatorCommissionRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorCommissionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorCommissionRequest;
                fromJSON(object: any): _37.QueryValidatorCommissionRequest;
                toJSON(message: _37.QueryValidatorCommissionRequest): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _37.QueryValidatorCommissionRequest;
                fromSDK(object: _37.QueryValidatorCommissionRequestSDKType): _37.QueryValidatorCommissionRequest;
                toSDK(message: _37.QueryValidatorCommissionRequest): _37.QueryValidatorCommissionRequestSDKType;
                fromAmino(object: _37.QueryValidatorCommissionRequestAmino): _37.QueryValidatorCommissionRequest;
                toAmino(message: _37.QueryValidatorCommissionRequest): _37.QueryValidatorCommissionRequestAmino;
                fromAminoMsg(object: _37.QueryValidatorCommissionRequestAminoMsg): _37.QueryValidatorCommissionRequest;
                toAminoMsg(message: _37.QueryValidatorCommissionRequest): _37.QueryValidatorCommissionRequestAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorCommissionRequestProtoMsg): _37.QueryValidatorCommissionRequest;
                toProto(message: _37.QueryValidatorCommissionRequest): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorCommissionRequest): _37.QueryValidatorCommissionRequestProtoMsg;
            };
            QueryValidatorCommissionResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorCommissionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorCommissionResponse;
                fromJSON(object: any): _37.QueryValidatorCommissionResponse;
                toJSON(message: _37.QueryValidatorCommissionResponse): unknown;
                fromPartial(object: {
                    commission?: {
                        commission?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _37.QueryValidatorCommissionResponse;
                fromSDK(object: _37.QueryValidatorCommissionResponseSDKType): _37.QueryValidatorCommissionResponse;
                toSDK(message: _37.QueryValidatorCommissionResponse): _37.QueryValidatorCommissionResponseSDKType;
                fromAmino(object: _37.QueryValidatorCommissionResponseAmino): _37.QueryValidatorCommissionResponse;
                toAmino(message: _37.QueryValidatorCommissionResponse): _37.QueryValidatorCommissionResponseAmino;
                fromAminoMsg(object: _37.QueryValidatorCommissionResponseAminoMsg): _37.QueryValidatorCommissionResponse;
                toAminoMsg(message: _37.QueryValidatorCommissionResponse): _37.QueryValidatorCommissionResponseAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorCommissionResponseProtoMsg): _37.QueryValidatorCommissionResponse;
                toProto(message: _37.QueryValidatorCommissionResponse): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorCommissionResponse): _37.QueryValidatorCommissionResponseProtoMsg;
            };
            QueryValidatorSlashesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorSlashesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorSlashesRequest;
                fromJSON(object: any): _37.QueryValidatorSlashesRequest;
                toJSON(message: _37.QueryValidatorSlashesRequest): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    startingHeight?: bigint;
                    endingHeight?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _37.QueryValidatorSlashesRequest;
                fromSDK(object: _37.QueryValidatorSlashesRequestSDKType): _37.QueryValidatorSlashesRequest;
                toSDK(message: _37.QueryValidatorSlashesRequest): _37.QueryValidatorSlashesRequestSDKType;
                fromAmino(object: _37.QueryValidatorSlashesRequestAmino): _37.QueryValidatorSlashesRequest;
                toAmino(message: _37.QueryValidatorSlashesRequest): _37.QueryValidatorSlashesRequestAmino;
                fromAminoMsg(object: _37.QueryValidatorSlashesRequestAminoMsg): _37.QueryValidatorSlashesRequest;
                toAminoMsg(message: _37.QueryValidatorSlashesRequest): _37.QueryValidatorSlashesRequestAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorSlashesRequestProtoMsg): _37.QueryValidatorSlashesRequest;
                toProto(message: _37.QueryValidatorSlashesRequest): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorSlashesRequest): _37.QueryValidatorSlashesRequestProtoMsg;
            };
            QueryValidatorSlashesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryValidatorSlashesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryValidatorSlashesResponse;
                fromJSON(object: any): _37.QueryValidatorSlashesResponse;
                toJSON(message: _37.QueryValidatorSlashesResponse): unknown;
                fromPartial(object: {
                    slashes?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _37.QueryValidatorSlashesResponse;
                fromSDK(object: _37.QueryValidatorSlashesResponseSDKType): _37.QueryValidatorSlashesResponse;
                toSDK(message: _37.QueryValidatorSlashesResponse): _37.QueryValidatorSlashesResponseSDKType;
                fromAmino(object: _37.QueryValidatorSlashesResponseAmino): _37.QueryValidatorSlashesResponse;
                toAmino(message: _37.QueryValidatorSlashesResponse): _37.QueryValidatorSlashesResponseAmino;
                fromAminoMsg(object: _37.QueryValidatorSlashesResponseAminoMsg): _37.QueryValidatorSlashesResponse;
                toAminoMsg(message: _37.QueryValidatorSlashesResponse): _37.QueryValidatorSlashesResponseAminoMsg;
                fromProtoMsg(message: _37.QueryValidatorSlashesResponseProtoMsg): _37.QueryValidatorSlashesResponse;
                toProto(message: _37.QueryValidatorSlashesResponse): Uint8Array;
                toProtoMsg(message: _37.QueryValidatorSlashesResponse): _37.QueryValidatorSlashesResponseProtoMsg;
            };
            QueryDelegationRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegationRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegationRewardsRequest;
                fromJSON(object: any): _37.QueryDelegationRewardsRequest;
                toJSON(message: _37.QueryDelegationRewardsRequest): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _37.QueryDelegationRewardsRequest;
                fromSDK(object: _37.QueryDelegationRewardsRequestSDKType): _37.QueryDelegationRewardsRequest;
                toSDK(message: _37.QueryDelegationRewardsRequest): _37.QueryDelegationRewardsRequestSDKType;
                fromAmino(object: _37.QueryDelegationRewardsRequestAmino): _37.QueryDelegationRewardsRequest;
                toAmino(message: _37.QueryDelegationRewardsRequest): _37.QueryDelegationRewardsRequestAmino;
                fromAminoMsg(object: _37.QueryDelegationRewardsRequestAminoMsg): _37.QueryDelegationRewardsRequest;
                toAminoMsg(message: _37.QueryDelegationRewardsRequest): _37.QueryDelegationRewardsRequestAminoMsg;
                fromProtoMsg(message: _37.QueryDelegationRewardsRequestProtoMsg): _37.QueryDelegationRewardsRequest;
                toProto(message: _37.QueryDelegationRewardsRequest): Uint8Array;
                toProtoMsg(message: _37.QueryDelegationRewardsRequest): _37.QueryDelegationRewardsRequestProtoMsg;
            };
            QueryDelegationRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegationRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegationRewardsResponse;
                fromJSON(object: any): _37.QueryDelegationRewardsResponse;
                toJSON(message: _37.QueryDelegationRewardsResponse): unknown;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _37.QueryDelegationRewardsResponse;
                fromSDK(object: _37.QueryDelegationRewardsResponseSDKType): _37.QueryDelegationRewardsResponse;
                toSDK(message: _37.QueryDelegationRewardsResponse): _37.QueryDelegationRewardsResponseSDKType;
                fromAmino(object: _37.QueryDelegationRewardsResponseAmino): _37.QueryDelegationRewardsResponse;
                toAmino(message: _37.QueryDelegationRewardsResponse): _37.QueryDelegationRewardsResponseAmino;
                fromAminoMsg(object: _37.QueryDelegationRewardsResponseAminoMsg): _37.QueryDelegationRewardsResponse;
                toAminoMsg(message: _37.QueryDelegationRewardsResponse): _37.QueryDelegationRewardsResponseAminoMsg;
                fromProtoMsg(message: _37.QueryDelegationRewardsResponseProtoMsg): _37.QueryDelegationRewardsResponse;
                toProto(message: _37.QueryDelegationRewardsResponse): Uint8Array;
                toProtoMsg(message: _37.QueryDelegationRewardsResponse): _37.QueryDelegationRewardsResponseProtoMsg;
            };
            QueryDelegationTotalRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegationTotalRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegationTotalRewardsRequest;
                fromJSON(object: any): _37.QueryDelegationTotalRewardsRequest;
                toJSON(message: _37.QueryDelegationTotalRewardsRequest): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _37.QueryDelegationTotalRewardsRequest;
                fromSDK(object: _37.QueryDelegationTotalRewardsRequestSDKType): _37.QueryDelegationTotalRewardsRequest;
                toSDK(message: _37.QueryDelegationTotalRewardsRequest): _37.QueryDelegationTotalRewardsRequestSDKType;
                fromAmino(object: _37.QueryDelegationTotalRewardsRequestAmino): _37.QueryDelegationTotalRewardsRequest;
                toAmino(message: _37.QueryDelegationTotalRewardsRequest): _37.QueryDelegationTotalRewardsRequestAmino;
                fromAminoMsg(object: _37.QueryDelegationTotalRewardsRequestAminoMsg): _37.QueryDelegationTotalRewardsRequest;
                toAminoMsg(message: _37.QueryDelegationTotalRewardsRequest): _37.QueryDelegationTotalRewardsRequestAminoMsg;
                fromProtoMsg(message: _37.QueryDelegationTotalRewardsRequestProtoMsg): _37.QueryDelegationTotalRewardsRequest;
                toProto(message: _37.QueryDelegationTotalRewardsRequest): Uint8Array;
                toProtoMsg(message: _37.QueryDelegationTotalRewardsRequest): _37.QueryDelegationTotalRewardsRequestProtoMsg;
            };
            QueryDelegationTotalRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegationTotalRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegationTotalRewardsResponse;
                fromJSON(object: any): _37.QueryDelegationTotalRewardsResponse;
                toJSON(message: _37.QueryDelegationTotalRewardsResponse): unknown;
                fromPartial(object: {
                    rewards?: {
                        validatorAddress?: string;
                        reward?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    total?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _37.QueryDelegationTotalRewardsResponse;
                fromSDK(object: _37.QueryDelegationTotalRewardsResponseSDKType): _37.QueryDelegationTotalRewardsResponse;
                toSDK(message: _37.QueryDelegationTotalRewardsResponse): _37.QueryDelegationTotalRewardsResponseSDKType;
                fromAmino(object: _37.QueryDelegationTotalRewardsResponseAmino): _37.QueryDelegationTotalRewardsResponse;
                toAmino(message: _37.QueryDelegationTotalRewardsResponse): _37.QueryDelegationTotalRewardsResponseAmino;
                fromAminoMsg(object: _37.QueryDelegationTotalRewardsResponseAminoMsg): _37.QueryDelegationTotalRewardsResponse;
                toAminoMsg(message: _37.QueryDelegationTotalRewardsResponse): _37.QueryDelegationTotalRewardsResponseAminoMsg;
                fromProtoMsg(message: _37.QueryDelegationTotalRewardsResponseProtoMsg): _37.QueryDelegationTotalRewardsResponse;
                toProto(message: _37.QueryDelegationTotalRewardsResponse): Uint8Array;
                toProtoMsg(message: _37.QueryDelegationTotalRewardsResponse): _37.QueryDelegationTotalRewardsResponseProtoMsg;
            };
            QueryDelegatorValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegatorValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegatorValidatorsRequest;
                fromJSON(object: any): _37.QueryDelegatorValidatorsRequest;
                toJSON(message: _37.QueryDelegatorValidatorsRequest): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _37.QueryDelegatorValidatorsRequest;
                fromSDK(object: _37.QueryDelegatorValidatorsRequestSDKType): _37.QueryDelegatorValidatorsRequest;
                toSDK(message: _37.QueryDelegatorValidatorsRequest): _37.QueryDelegatorValidatorsRequestSDKType;
                fromAmino(object: _37.QueryDelegatorValidatorsRequestAmino): _37.QueryDelegatorValidatorsRequest;
                toAmino(message: _37.QueryDelegatorValidatorsRequest): _37.QueryDelegatorValidatorsRequestAmino;
                fromAminoMsg(object: _37.QueryDelegatorValidatorsRequestAminoMsg): _37.QueryDelegatorValidatorsRequest;
                toAminoMsg(message: _37.QueryDelegatorValidatorsRequest): _37.QueryDelegatorValidatorsRequestAminoMsg;
                fromProtoMsg(message: _37.QueryDelegatorValidatorsRequestProtoMsg): _37.QueryDelegatorValidatorsRequest;
                toProto(message: _37.QueryDelegatorValidatorsRequest): Uint8Array;
                toProtoMsg(message: _37.QueryDelegatorValidatorsRequest): _37.QueryDelegatorValidatorsRequestProtoMsg;
            };
            QueryDelegatorValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegatorValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegatorValidatorsResponse;
                fromJSON(object: any): _37.QueryDelegatorValidatorsResponse;
                toJSON(message: _37.QueryDelegatorValidatorsResponse): unknown;
                fromPartial(object: {
                    validators?: string[];
                }): _37.QueryDelegatorValidatorsResponse;
                fromSDK(object: _37.QueryDelegatorValidatorsResponseSDKType): _37.QueryDelegatorValidatorsResponse;
                toSDK(message: _37.QueryDelegatorValidatorsResponse): _37.QueryDelegatorValidatorsResponseSDKType;
                fromAmino(object: _37.QueryDelegatorValidatorsResponseAmino): _37.QueryDelegatorValidatorsResponse;
                toAmino(message: _37.QueryDelegatorValidatorsResponse): _37.QueryDelegatorValidatorsResponseAmino;
                fromAminoMsg(object: _37.QueryDelegatorValidatorsResponseAminoMsg): _37.QueryDelegatorValidatorsResponse;
                toAminoMsg(message: _37.QueryDelegatorValidatorsResponse): _37.QueryDelegatorValidatorsResponseAminoMsg;
                fromProtoMsg(message: _37.QueryDelegatorValidatorsResponseProtoMsg): _37.QueryDelegatorValidatorsResponse;
                toProto(message: _37.QueryDelegatorValidatorsResponse): Uint8Array;
                toProtoMsg(message: _37.QueryDelegatorValidatorsResponse): _37.QueryDelegatorValidatorsResponseProtoMsg;
            };
            QueryDelegatorWithdrawAddressRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegatorWithdrawAddressRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegatorWithdrawAddressRequest;
                fromJSON(object: any): _37.QueryDelegatorWithdrawAddressRequest;
                toJSON(message: _37.QueryDelegatorWithdrawAddressRequest): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _37.QueryDelegatorWithdrawAddressRequest;
                fromSDK(object: _37.QueryDelegatorWithdrawAddressRequestSDKType): _37.QueryDelegatorWithdrawAddressRequest;
                toSDK(message: _37.QueryDelegatorWithdrawAddressRequest): _37.QueryDelegatorWithdrawAddressRequestSDKType;
                fromAmino(object: _37.QueryDelegatorWithdrawAddressRequestAmino): _37.QueryDelegatorWithdrawAddressRequest;
                toAmino(message: _37.QueryDelegatorWithdrawAddressRequest): _37.QueryDelegatorWithdrawAddressRequestAmino;
                fromAminoMsg(object: _37.QueryDelegatorWithdrawAddressRequestAminoMsg): _37.QueryDelegatorWithdrawAddressRequest;
                toAminoMsg(message: _37.QueryDelegatorWithdrawAddressRequest): _37.QueryDelegatorWithdrawAddressRequestAminoMsg;
                fromProtoMsg(message: _37.QueryDelegatorWithdrawAddressRequestProtoMsg): _37.QueryDelegatorWithdrawAddressRequest;
                toProto(message: _37.QueryDelegatorWithdrawAddressRequest): Uint8Array;
                toProtoMsg(message: _37.QueryDelegatorWithdrawAddressRequest): _37.QueryDelegatorWithdrawAddressRequestProtoMsg;
            };
            QueryDelegatorWithdrawAddressResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryDelegatorWithdrawAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryDelegatorWithdrawAddressResponse;
                fromJSON(object: any): _37.QueryDelegatorWithdrawAddressResponse;
                toJSON(message: _37.QueryDelegatorWithdrawAddressResponse): unknown;
                fromPartial(object: {
                    withdrawAddress?: string;
                }): _37.QueryDelegatorWithdrawAddressResponse;
                fromSDK(object: _37.QueryDelegatorWithdrawAddressResponseSDKType): _37.QueryDelegatorWithdrawAddressResponse;
                toSDK(message: _37.QueryDelegatorWithdrawAddressResponse): _37.QueryDelegatorWithdrawAddressResponseSDKType;
                fromAmino(object: _37.QueryDelegatorWithdrawAddressResponseAmino): _37.QueryDelegatorWithdrawAddressResponse;
                toAmino(message: _37.QueryDelegatorWithdrawAddressResponse): _37.QueryDelegatorWithdrawAddressResponseAmino;
                fromAminoMsg(object: _37.QueryDelegatorWithdrawAddressResponseAminoMsg): _37.QueryDelegatorWithdrawAddressResponse;
                toAminoMsg(message: _37.QueryDelegatorWithdrawAddressResponse): _37.QueryDelegatorWithdrawAddressResponseAminoMsg;
                fromProtoMsg(message: _37.QueryDelegatorWithdrawAddressResponseProtoMsg): _37.QueryDelegatorWithdrawAddressResponse;
                toProto(message: _37.QueryDelegatorWithdrawAddressResponse): Uint8Array;
                toProtoMsg(message: _37.QueryDelegatorWithdrawAddressResponse): _37.QueryDelegatorWithdrawAddressResponseProtoMsg;
            };
            QueryCommunityPoolRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _37.QueryCommunityPoolRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryCommunityPoolRequest;
                fromJSON(_: any): _37.QueryCommunityPoolRequest;
                toJSON(_: _37.QueryCommunityPoolRequest): unknown;
                fromPartial(_: {}): _37.QueryCommunityPoolRequest;
                fromSDK(_: _37.QueryCommunityPoolRequestSDKType): _37.QueryCommunityPoolRequest;
                toSDK(_: _37.QueryCommunityPoolRequest): _37.QueryCommunityPoolRequestSDKType;
                fromAmino(_: _37.QueryCommunityPoolRequestAmino): _37.QueryCommunityPoolRequest;
                toAmino(_: _37.QueryCommunityPoolRequest): _37.QueryCommunityPoolRequestAmino;
                fromAminoMsg(object: _37.QueryCommunityPoolRequestAminoMsg): _37.QueryCommunityPoolRequest;
                toAminoMsg(message: _37.QueryCommunityPoolRequest): _37.QueryCommunityPoolRequestAminoMsg;
                fromProtoMsg(message: _37.QueryCommunityPoolRequestProtoMsg): _37.QueryCommunityPoolRequest;
                toProto(message: _37.QueryCommunityPoolRequest): Uint8Array;
                toProtoMsg(message: _37.QueryCommunityPoolRequest): _37.QueryCommunityPoolRequestProtoMsg;
            };
            QueryCommunityPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _37.QueryCommunityPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.QueryCommunityPoolResponse;
                fromJSON(object: any): _37.QueryCommunityPoolResponse;
                toJSON(message: _37.QueryCommunityPoolResponse): unknown;
                fromPartial(object: {
                    pool?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _37.QueryCommunityPoolResponse;
                fromSDK(object: _37.QueryCommunityPoolResponseSDKType): _37.QueryCommunityPoolResponse;
                toSDK(message: _37.QueryCommunityPoolResponse): _37.QueryCommunityPoolResponseSDKType;
                fromAmino(object: _37.QueryCommunityPoolResponseAmino): _37.QueryCommunityPoolResponse;
                toAmino(message: _37.QueryCommunityPoolResponse): _37.QueryCommunityPoolResponseAmino;
                fromAminoMsg(object: _37.QueryCommunityPoolResponseAminoMsg): _37.QueryCommunityPoolResponse;
                toAminoMsg(message: _37.QueryCommunityPoolResponse): _37.QueryCommunityPoolResponseAminoMsg;
                fromProtoMsg(message: _37.QueryCommunityPoolResponseProtoMsg): _37.QueryCommunityPoolResponse;
                toProto(message: _37.QueryCommunityPoolResponse): Uint8Array;
                toProtoMsg(message: _37.QueryCommunityPoolResponse): _37.QueryCommunityPoolResponseProtoMsg;
            };
            DelegatorWithdrawInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.DelegatorWithdrawInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.DelegatorWithdrawInfo;
                fromJSON(object: any): _36.DelegatorWithdrawInfo;
                toJSON(message: _36.DelegatorWithdrawInfo): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    withdrawAddress?: string;
                }): _36.DelegatorWithdrawInfo;
                fromSDK(object: _36.DelegatorWithdrawInfoSDKType): _36.DelegatorWithdrawInfo;
                toSDK(message: _36.DelegatorWithdrawInfo): _36.DelegatorWithdrawInfoSDKType;
                fromAmino(object: _36.DelegatorWithdrawInfoAmino): _36.DelegatorWithdrawInfo;
                toAmino(message: _36.DelegatorWithdrawInfo): _36.DelegatorWithdrawInfoAmino;
                fromAminoMsg(object: _36.DelegatorWithdrawInfoAminoMsg): _36.DelegatorWithdrawInfo;
                toAminoMsg(message: _36.DelegatorWithdrawInfo): _36.DelegatorWithdrawInfoAminoMsg;
                fromProtoMsg(message: _36.DelegatorWithdrawInfoProtoMsg): _36.DelegatorWithdrawInfo;
                toProto(message: _36.DelegatorWithdrawInfo): Uint8Array;
                toProtoMsg(message: _36.DelegatorWithdrawInfo): _36.DelegatorWithdrawInfoProtoMsg;
            };
            ValidatorOutstandingRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.ValidatorOutstandingRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.ValidatorOutstandingRewardsRecord;
                fromJSON(object: any): _36.ValidatorOutstandingRewardsRecord;
                toJSON(message: _36.ValidatorOutstandingRewardsRecord): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    outstandingRewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _36.ValidatorOutstandingRewardsRecord;
                fromSDK(object: _36.ValidatorOutstandingRewardsRecordSDKType): _36.ValidatorOutstandingRewardsRecord;
                toSDK(message: _36.ValidatorOutstandingRewardsRecord): _36.ValidatorOutstandingRewardsRecordSDKType;
                fromAmino(object: _36.ValidatorOutstandingRewardsRecordAmino): _36.ValidatorOutstandingRewardsRecord;
                toAmino(message: _36.ValidatorOutstandingRewardsRecord): _36.ValidatorOutstandingRewardsRecordAmino;
                fromAminoMsg(object: _36.ValidatorOutstandingRewardsRecordAminoMsg): _36.ValidatorOutstandingRewardsRecord;
                toAminoMsg(message: _36.ValidatorOutstandingRewardsRecord): _36.ValidatorOutstandingRewardsRecordAminoMsg;
                fromProtoMsg(message: _36.ValidatorOutstandingRewardsRecordProtoMsg): _36.ValidatorOutstandingRewardsRecord;
                toProto(message: _36.ValidatorOutstandingRewardsRecord): Uint8Array;
                toProtoMsg(message: _36.ValidatorOutstandingRewardsRecord): _36.ValidatorOutstandingRewardsRecordProtoMsg;
            };
            ValidatorAccumulatedCommissionRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.ValidatorAccumulatedCommissionRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.ValidatorAccumulatedCommissionRecord;
                fromJSON(object: any): _36.ValidatorAccumulatedCommissionRecord;
                toJSON(message: _36.ValidatorAccumulatedCommissionRecord): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    accumulated?: {
                        commission?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _36.ValidatorAccumulatedCommissionRecord;
                fromSDK(object: _36.ValidatorAccumulatedCommissionRecordSDKType): _36.ValidatorAccumulatedCommissionRecord;
                toSDK(message: _36.ValidatorAccumulatedCommissionRecord): _36.ValidatorAccumulatedCommissionRecordSDKType;
                fromAmino(object: _36.ValidatorAccumulatedCommissionRecordAmino): _36.ValidatorAccumulatedCommissionRecord;
                toAmino(message: _36.ValidatorAccumulatedCommissionRecord): _36.ValidatorAccumulatedCommissionRecordAmino;
                fromAminoMsg(object: _36.ValidatorAccumulatedCommissionRecordAminoMsg): _36.ValidatorAccumulatedCommissionRecord;
                toAminoMsg(message: _36.ValidatorAccumulatedCommissionRecord): _36.ValidatorAccumulatedCommissionRecordAminoMsg;
                fromProtoMsg(message: _36.ValidatorAccumulatedCommissionRecordProtoMsg): _36.ValidatorAccumulatedCommissionRecord;
                toProto(message: _36.ValidatorAccumulatedCommissionRecord): Uint8Array;
                toProtoMsg(message: _36.ValidatorAccumulatedCommissionRecord): _36.ValidatorAccumulatedCommissionRecordProtoMsg;
            };
            ValidatorHistoricalRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.ValidatorHistoricalRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.ValidatorHistoricalRewardsRecord;
                fromJSON(object: any): _36.ValidatorHistoricalRewardsRecord;
                toJSON(message: _36.ValidatorHistoricalRewardsRecord): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    period?: bigint;
                    rewards?: {
                        cumulativeRewardRatio?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        referenceCount?: number;
                    };
                }): _36.ValidatorHistoricalRewardsRecord;
                fromSDK(object: _36.ValidatorHistoricalRewardsRecordSDKType): _36.ValidatorHistoricalRewardsRecord;
                toSDK(message: _36.ValidatorHistoricalRewardsRecord): _36.ValidatorHistoricalRewardsRecordSDKType;
                fromAmino(object: _36.ValidatorHistoricalRewardsRecordAmino): _36.ValidatorHistoricalRewardsRecord;
                toAmino(message: _36.ValidatorHistoricalRewardsRecord): _36.ValidatorHistoricalRewardsRecordAmino;
                fromAminoMsg(object: _36.ValidatorHistoricalRewardsRecordAminoMsg): _36.ValidatorHistoricalRewardsRecord;
                toAminoMsg(message: _36.ValidatorHistoricalRewardsRecord): _36.ValidatorHistoricalRewardsRecordAminoMsg;
                fromProtoMsg(message: _36.ValidatorHistoricalRewardsRecordProtoMsg): _36.ValidatorHistoricalRewardsRecord;
                toProto(message: _36.ValidatorHistoricalRewardsRecord): Uint8Array;
                toProtoMsg(message: _36.ValidatorHistoricalRewardsRecord): _36.ValidatorHistoricalRewardsRecordProtoMsg;
            };
            ValidatorCurrentRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.ValidatorCurrentRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.ValidatorCurrentRewardsRecord;
                fromJSON(object: any): _36.ValidatorCurrentRewardsRecord;
                toJSON(message: _36.ValidatorCurrentRewardsRecord): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    rewards?: {
                        rewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        period?: bigint;
                    };
                }): _36.ValidatorCurrentRewardsRecord;
                fromSDK(object: _36.ValidatorCurrentRewardsRecordSDKType): _36.ValidatorCurrentRewardsRecord;
                toSDK(message: _36.ValidatorCurrentRewardsRecord): _36.ValidatorCurrentRewardsRecordSDKType;
                fromAmino(object: _36.ValidatorCurrentRewardsRecordAmino): _36.ValidatorCurrentRewardsRecord;
                toAmino(message: _36.ValidatorCurrentRewardsRecord): _36.ValidatorCurrentRewardsRecordAmino;
                fromAminoMsg(object: _36.ValidatorCurrentRewardsRecordAminoMsg): _36.ValidatorCurrentRewardsRecord;
                toAminoMsg(message: _36.ValidatorCurrentRewardsRecord): _36.ValidatorCurrentRewardsRecordAminoMsg;
                fromProtoMsg(message: _36.ValidatorCurrentRewardsRecordProtoMsg): _36.ValidatorCurrentRewardsRecord;
                toProto(message: _36.ValidatorCurrentRewardsRecord): Uint8Array;
                toProtoMsg(message: _36.ValidatorCurrentRewardsRecord): _36.ValidatorCurrentRewardsRecordProtoMsg;
            };
            DelegatorStartingInfoRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.DelegatorStartingInfoRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.DelegatorStartingInfoRecord;
                fromJSON(object: any): _36.DelegatorStartingInfoRecord;
                toJSON(message: _36.DelegatorStartingInfoRecord): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    startingInfo?: {
                        previousPeriod?: bigint;
                        stake?: string;
                        height?: bigint;
                    };
                }): _36.DelegatorStartingInfoRecord;
                fromSDK(object: _36.DelegatorStartingInfoRecordSDKType): _36.DelegatorStartingInfoRecord;
                toSDK(message: _36.DelegatorStartingInfoRecord): _36.DelegatorStartingInfoRecordSDKType;
                fromAmino(object: _36.DelegatorStartingInfoRecordAmino): _36.DelegatorStartingInfoRecord;
                toAmino(message: _36.DelegatorStartingInfoRecord): _36.DelegatorStartingInfoRecordAmino;
                fromAminoMsg(object: _36.DelegatorStartingInfoRecordAminoMsg): _36.DelegatorStartingInfoRecord;
                toAminoMsg(message: _36.DelegatorStartingInfoRecord): _36.DelegatorStartingInfoRecordAminoMsg;
                fromProtoMsg(message: _36.DelegatorStartingInfoRecordProtoMsg): _36.DelegatorStartingInfoRecord;
                toProto(message: _36.DelegatorStartingInfoRecord): Uint8Array;
                toProtoMsg(message: _36.DelegatorStartingInfoRecord): _36.DelegatorStartingInfoRecordProtoMsg;
            };
            ValidatorSlashEventRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.ValidatorSlashEventRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.ValidatorSlashEventRecord;
                fromJSON(object: any): _36.ValidatorSlashEventRecord;
                toJSON(message: _36.ValidatorSlashEventRecord): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    height?: bigint;
                    period?: bigint;
                    validatorSlashEvent?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    };
                }): _36.ValidatorSlashEventRecord;
                fromSDK(object: _36.ValidatorSlashEventRecordSDKType): _36.ValidatorSlashEventRecord;
                toSDK(message: _36.ValidatorSlashEventRecord): _36.ValidatorSlashEventRecordSDKType;
                fromAmino(object: _36.ValidatorSlashEventRecordAmino): _36.ValidatorSlashEventRecord;
                toAmino(message: _36.ValidatorSlashEventRecord): _36.ValidatorSlashEventRecordAmino;
                fromAminoMsg(object: _36.ValidatorSlashEventRecordAminoMsg): _36.ValidatorSlashEventRecord;
                toAminoMsg(message: _36.ValidatorSlashEventRecord): _36.ValidatorSlashEventRecordAminoMsg;
                fromProtoMsg(message: _36.ValidatorSlashEventRecordProtoMsg): _36.ValidatorSlashEventRecord;
                toProto(message: _36.ValidatorSlashEventRecord): Uint8Array;
                toProtoMsg(message: _36.ValidatorSlashEventRecord): _36.ValidatorSlashEventRecordProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _36.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.GenesisState;
                fromJSON(object: any): _36.GenesisState;
                toJSON(message: _36.GenesisState): unknown;
                fromPartial(object: {
                    params?: {
                        communityTax?: string;
                        baseProposerReward?: string;
                        bonusProposerReward?: string;
                        withdrawAddrEnabled?: boolean;
                    };
                    feePool?: {
                        communityPool?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                    delegatorWithdrawInfos?: {
                        delegatorAddress?: string;
                        withdrawAddress?: string;
                    }[];
                    previousProposer?: string;
                    outstandingRewards?: {
                        validatorAddress?: string;
                        outstandingRewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    validatorAccumulatedCommissions?: {
                        validatorAddress?: string;
                        accumulated?: {
                            commission?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        };
                    }[];
                    validatorHistoricalRewards?: {
                        validatorAddress?: string;
                        period?: bigint;
                        rewards?: {
                            cumulativeRewardRatio?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            referenceCount?: number;
                        };
                    }[];
                    validatorCurrentRewards?: {
                        validatorAddress?: string;
                        rewards?: {
                            rewards?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            period?: bigint;
                        };
                    }[];
                    delegatorStartingInfos?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        startingInfo?: {
                            previousPeriod?: bigint;
                            stake?: string;
                            height?: bigint;
                        };
                    }[];
                    validatorSlashEvents?: {
                        validatorAddress?: string;
                        height?: bigint;
                        period?: bigint;
                        validatorSlashEvent?: {
                            validatorPeriod?: bigint;
                            fraction?: string;
                        };
                    }[];
                }): _36.GenesisState;
                fromSDK(object: _36.GenesisStateSDKType): _36.GenesisState;
                toSDK(message: _36.GenesisState): _36.GenesisStateSDKType;
                fromAmino(object: _36.GenesisStateAmino): _36.GenesisState;
                toAmino(message: _36.GenesisState): _36.GenesisStateAmino;
                fromAminoMsg(object: _36.GenesisStateAminoMsg): _36.GenesisState;
                toAminoMsg(message: _36.GenesisState): _36.GenesisStateAminoMsg;
                fromProtoMsg(message: _36.GenesisStateProtoMsg): _36.GenesisState;
                toProto(message: _36.GenesisState): Uint8Array;
                toProtoMsg(message: _36.GenesisState): _36.GenesisStateProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.Params;
                fromJSON(object: any): _35.Params;
                toJSON(message: _35.Params): unknown;
                fromPartial(object: {
                    communityTax?: string;
                    baseProposerReward?: string;
                    bonusProposerReward?: string;
                    withdrawAddrEnabled?: boolean;
                }): _35.Params;
                fromSDK(object: _35.ParamsSDKType): _35.Params;
                toSDK(message: _35.Params): _35.ParamsSDKType;
                fromAmino(object: _35.ParamsAmino): _35.Params;
                toAmino(message: _35.Params): _35.ParamsAmino;
                fromAminoMsg(object: _35.ParamsAminoMsg): _35.Params;
                toAminoMsg(message: _35.Params): _35.ParamsAminoMsg;
                fromProtoMsg(message: _35.ParamsProtoMsg): _35.Params;
                toProto(message: _35.Params): Uint8Array;
                toProtoMsg(message: _35.Params): _35.ParamsProtoMsg;
            };
            ValidatorHistoricalRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorHistoricalRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorHistoricalRewards;
                fromJSON(object: any): _35.ValidatorHistoricalRewards;
                toJSON(message: _35.ValidatorHistoricalRewards): unknown;
                fromPartial(object: {
                    cumulativeRewardRatio?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    referenceCount?: number;
                }): _35.ValidatorHistoricalRewards;
                fromSDK(object: _35.ValidatorHistoricalRewardsSDKType): _35.ValidatorHistoricalRewards;
                toSDK(message: _35.ValidatorHistoricalRewards): _35.ValidatorHistoricalRewardsSDKType;
                fromAmino(object: _35.ValidatorHistoricalRewardsAmino): _35.ValidatorHistoricalRewards;
                toAmino(message: _35.ValidatorHistoricalRewards): _35.ValidatorHistoricalRewardsAmino;
                fromAminoMsg(object: _35.ValidatorHistoricalRewardsAminoMsg): _35.ValidatorHistoricalRewards;
                toAminoMsg(message: _35.ValidatorHistoricalRewards): _35.ValidatorHistoricalRewardsAminoMsg;
                fromProtoMsg(message: _35.ValidatorHistoricalRewardsProtoMsg): _35.ValidatorHistoricalRewards;
                toProto(message: _35.ValidatorHistoricalRewards): Uint8Array;
                toProtoMsg(message: _35.ValidatorHistoricalRewards): _35.ValidatorHistoricalRewardsProtoMsg;
            };
            ValidatorCurrentRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorCurrentRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorCurrentRewards;
                fromJSON(object: any): _35.ValidatorCurrentRewards;
                toJSON(message: _35.ValidatorCurrentRewards): unknown;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    period?: bigint;
                }): _35.ValidatorCurrentRewards;
                fromSDK(object: _35.ValidatorCurrentRewardsSDKType): _35.ValidatorCurrentRewards;
                toSDK(message: _35.ValidatorCurrentRewards): _35.ValidatorCurrentRewardsSDKType;
                fromAmino(object: _35.ValidatorCurrentRewardsAmino): _35.ValidatorCurrentRewards;
                toAmino(message: _35.ValidatorCurrentRewards): _35.ValidatorCurrentRewardsAmino;
                fromAminoMsg(object: _35.ValidatorCurrentRewardsAminoMsg): _35.ValidatorCurrentRewards;
                toAminoMsg(message: _35.ValidatorCurrentRewards): _35.ValidatorCurrentRewardsAminoMsg;
                fromProtoMsg(message: _35.ValidatorCurrentRewardsProtoMsg): _35.ValidatorCurrentRewards;
                toProto(message: _35.ValidatorCurrentRewards): Uint8Array;
                toProtoMsg(message: _35.ValidatorCurrentRewards): _35.ValidatorCurrentRewardsProtoMsg;
            };
            ValidatorAccumulatedCommission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorAccumulatedCommission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorAccumulatedCommission;
                fromJSON(object: any): _35.ValidatorAccumulatedCommission;
                toJSON(message: _35.ValidatorAccumulatedCommission): unknown;
                fromPartial(object: {
                    commission?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _35.ValidatorAccumulatedCommission;
                fromSDK(object: _35.ValidatorAccumulatedCommissionSDKType): _35.ValidatorAccumulatedCommission;
                toSDK(message: _35.ValidatorAccumulatedCommission): _35.ValidatorAccumulatedCommissionSDKType;
                fromAmino(object: _35.ValidatorAccumulatedCommissionAmino): _35.ValidatorAccumulatedCommission;
                toAmino(message: _35.ValidatorAccumulatedCommission): _35.ValidatorAccumulatedCommissionAmino;
                fromAminoMsg(object: _35.ValidatorAccumulatedCommissionAminoMsg): _35.ValidatorAccumulatedCommission;
                toAminoMsg(message: _35.ValidatorAccumulatedCommission): _35.ValidatorAccumulatedCommissionAminoMsg;
                fromProtoMsg(message: _35.ValidatorAccumulatedCommissionProtoMsg): _35.ValidatorAccumulatedCommission;
                toProto(message: _35.ValidatorAccumulatedCommission): Uint8Array;
                toProtoMsg(message: _35.ValidatorAccumulatedCommission): _35.ValidatorAccumulatedCommissionProtoMsg;
            };
            ValidatorOutstandingRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorOutstandingRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorOutstandingRewards;
                fromJSON(object: any): _35.ValidatorOutstandingRewards;
                toJSON(message: _35.ValidatorOutstandingRewards): unknown;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _35.ValidatorOutstandingRewards;
                fromSDK(object: _35.ValidatorOutstandingRewardsSDKType): _35.ValidatorOutstandingRewards;
                toSDK(message: _35.ValidatorOutstandingRewards): _35.ValidatorOutstandingRewardsSDKType;
                fromAmino(object: _35.ValidatorOutstandingRewardsAmino): _35.ValidatorOutstandingRewards;
                toAmino(message: _35.ValidatorOutstandingRewards): _35.ValidatorOutstandingRewardsAmino;
                fromAminoMsg(object: _35.ValidatorOutstandingRewardsAminoMsg): _35.ValidatorOutstandingRewards;
                toAminoMsg(message: _35.ValidatorOutstandingRewards): _35.ValidatorOutstandingRewardsAminoMsg;
                fromProtoMsg(message: _35.ValidatorOutstandingRewardsProtoMsg): _35.ValidatorOutstandingRewards;
                toProto(message: _35.ValidatorOutstandingRewards): Uint8Array;
                toProtoMsg(message: _35.ValidatorOutstandingRewards): _35.ValidatorOutstandingRewardsProtoMsg;
            };
            ValidatorSlashEvent: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorSlashEvent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorSlashEvent;
                fromJSON(object: any): _35.ValidatorSlashEvent;
                toJSON(message: _35.ValidatorSlashEvent): unknown;
                fromPartial(object: {
                    validatorPeriod?: bigint;
                    fraction?: string;
                }): _35.ValidatorSlashEvent;
                fromSDK(object: _35.ValidatorSlashEventSDKType): _35.ValidatorSlashEvent;
                toSDK(message: _35.ValidatorSlashEvent): _35.ValidatorSlashEventSDKType;
                fromAmino(object: _35.ValidatorSlashEventAmino): _35.ValidatorSlashEvent;
                toAmino(message: _35.ValidatorSlashEvent): _35.ValidatorSlashEventAmino;
                fromAminoMsg(object: _35.ValidatorSlashEventAminoMsg): _35.ValidatorSlashEvent;
                toAminoMsg(message: _35.ValidatorSlashEvent): _35.ValidatorSlashEventAminoMsg;
                fromProtoMsg(message: _35.ValidatorSlashEventProtoMsg): _35.ValidatorSlashEvent;
                toProto(message: _35.ValidatorSlashEvent): Uint8Array;
                toProtoMsg(message: _35.ValidatorSlashEvent): _35.ValidatorSlashEventProtoMsg;
            };
            ValidatorSlashEvents: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.ValidatorSlashEvents, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.ValidatorSlashEvents;
                fromJSON(object: any): _35.ValidatorSlashEvents;
                toJSON(message: _35.ValidatorSlashEvents): unknown;
                fromPartial(object: {
                    validatorSlashEvents?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    }[];
                }): _35.ValidatorSlashEvents;
                fromSDK(object: _35.ValidatorSlashEventsSDKType): _35.ValidatorSlashEvents;
                toSDK(message: _35.ValidatorSlashEvents): _35.ValidatorSlashEventsSDKType;
                fromAmino(object: _35.ValidatorSlashEventsAmino): _35.ValidatorSlashEvents;
                toAmino(message: _35.ValidatorSlashEvents): _35.ValidatorSlashEventsAmino;
                fromAminoMsg(object: _35.ValidatorSlashEventsAminoMsg): _35.ValidatorSlashEvents;
                toAminoMsg(message: _35.ValidatorSlashEvents): _35.ValidatorSlashEventsAminoMsg;
                fromProtoMsg(message: _35.ValidatorSlashEventsProtoMsg): _35.ValidatorSlashEvents;
                toProto(message: _35.ValidatorSlashEvents): Uint8Array;
                toProtoMsg(message: _35.ValidatorSlashEvents): _35.ValidatorSlashEventsProtoMsg;
            };
            FeePool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.FeePool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.FeePool;
                fromJSON(object: any): _35.FeePool;
                toJSON(message: _35.FeePool): unknown;
                fromPartial(object: {
                    communityPool?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _35.FeePool;
                fromSDK(object: _35.FeePoolSDKType): _35.FeePool;
                toSDK(message: _35.FeePool): _35.FeePoolSDKType;
                fromAmino(object: _35.FeePoolAmino): _35.FeePool;
                toAmino(message: _35.FeePool): _35.FeePoolAmino;
                fromAminoMsg(object: _35.FeePoolAminoMsg): _35.FeePool;
                toAminoMsg(message: _35.FeePool): _35.FeePoolAminoMsg;
                fromProtoMsg(message: _35.FeePoolProtoMsg): _35.FeePool;
                toProto(message: _35.FeePool): Uint8Array;
                toProtoMsg(message: _35.FeePool): _35.FeePoolProtoMsg;
            };
            CommunityPoolSpendProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.CommunityPoolSpendProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.CommunityPoolSpendProposal;
                fromJSON(object: any): _35.CommunityPoolSpendProposal;
                toJSON(message: _35.CommunityPoolSpendProposal): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                    recipient?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _35.CommunityPoolSpendProposal;
                fromSDK(object: _35.CommunityPoolSpendProposalSDKType): _35.CommunityPoolSpendProposal;
                toSDK(message: _35.CommunityPoolSpendProposal): _35.CommunityPoolSpendProposalSDKType;
                fromAmino(object: _35.CommunityPoolSpendProposalAmino): _35.CommunityPoolSpendProposal;
                toAmino(message: _35.CommunityPoolSpendProposal): _35.CommunityPoolSpendProposalAmino;
                fromAminoMsg(object: _35.CommunityPoolSpendProposalAminoMsg): _35.CommunityPoolSpendProposal;
                toAminoMsg(message: _35.CommunityPoolSpendProposal): _35.CommunityPoolSpendProposalAminoMsg;
                fromProtoMsg(message: _35.CommunityPoolSpendProposalProtoMsg): _35.CommunityPoolSpendProposal;
                toProto(message: _35.CommunityPoolSpendProposal): Uint8Array;
                toProtoMsg(message: _35.CommunityPoolSpendProposal): _35.CommunityPoolSpendProposalProtoMsg;
            };
            DelegatorStartingInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.DelegatorStartingInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.DelegatorStartingInfo;
                fromJSON(object: any): _35.DelegatorStartingInfo;
                toJSON(message: _35.DelegatorStartingInfo): unknown;
                fromPartial(object: {
                    previousPeriod?: bigint;
                    stake?: string;
                    height?: bigint;
                }): _35.DelegatorStartingInfo;
                fromSDK(object: _35.DelegatorStartingInfoSDKType): _35.DelegatorStartingInfo;
                toSDK(message: _35.DelegatorStartingInfo): _35.DelegatorStartingInfoSDKType;
                fromAmino(object: _35.DelegatorStartingInfoAmino): _35.DelegatorStartingInfo;
                toAmino(message: _35.DelegatorStartingInfo): _35.DelegatorStartingInfoAmino;
                fromAminoMsg(object: _35.DelegatorStartingInfoAminoMsg): _35.DelegatorStartingInfo;
                toAminoMsg(message: _35.DelegatorStartingInfo): _35.DelegatorStartingInfoAminoMsg;
                fromProtoMsg(message: _35.DelegatorStartingInfoProtoMsg): _35.DelegatorStartingInfo;
                toProto(message: _35.DelegatorStartingInfo): Uint8Array;
                toProtoMsg(message: _35.DelegatorStartingInfo): _35.DelegatorStartingInfoProtoMsg;
            };
            DelegationDelegatorReward: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.DelegationDelegatorReward, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.DelegationDelegatorReward;
                fromJSON(object: any): _35.DelegationDelegatorReward;
                toJSON(message: _35.DelegationDelegatorReward): unknown;
                fromPartial(object: {
                    validatorAddress?: string;
                    reward?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _35.DelegationDelegatorReward;
                fromSDK(object: _35.DelegationDelegatorRewardSDKType): _35.DelegationDelegatorReward;
                toSDK(message: _35.DelegationDelegatorReward): _35.DelegationDelegatorRewardSDKType;
                fromAmino(object: _35.DelegationDelegatorRewardAmino): _35.DelegationDelegatorReward;
                toAmino(message: _35.DelegationDelegatorReward): _35.DelegationDelegatorRewardAmino;
                fromAminoMsg(object: _35.DelegationDelegatorRewardAminoMsg): _35.DelegationDelegatorReward;
                toAminoMsg(message: _35.DelegationDelegatorReward): _35.DelegationDelegatorRewardAminoMsg;
                fromProtoMsg(message: _35.DelegationDelegatorRewardProtoMsg): _35.DelegationDelegatorReward;
                toProto(message: _35.DelegationDelegatorReward): Uint8Array;
                toProtoMsg(message: _35.DelegationDelegatorReward): _35.DelegationDelegatorRewardProtoMsg;
            };
            CommunityPoolSpendProposalWithDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.CommunityPoolSpendProposalWithDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.CommunityPoolSpendProposalWithDeposit;
                fromJSON(object: any): _35.CommunityPoolSpendProposalWithDeposit;
                toJSON(message: _35.CommunityPoolSpendProposalWithDeposit): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                    recipient?: string;
                    amount?: string;
                    deposit?: string;
                }): _35.CommunityPoolSpendProposalWithDeposit;
                fromSDK(object: _35.CommunityPoolSpendProposalWithDepositSDKType): _35.CommunityPoolSpendProposalWithDeposit;
                toSDK(message: _35.CommunityPoolSpendProposalWithDeposit): _35.CommunityPoolSpendProposalWithDepositSDKType;
                fromAmino(object: _35.CommunityPoolSpendProposalWithDepositAmino): _35.CommunityPoolSpendProposalWithDeposit;
                toAmino(message: _35.CommunityPoolSpendProposalWithDeposit): _35.CommunityPoolSpendProposalWithDepositAmino;
                fromAminoMsg(object: _35.CommunityPoolSpendProposalWithDepositAminoMsg): _35.CommunityPoolSpendProposalWithDeposit;
                toAminoMsg(message: _35.CommunityPoolSpendProposalWithDeposit): _35.CommunityPoolSpendProposalWithDepositAminoMsg;
                fromProtoMsg(message: _35.CommunityPoolSpendProposalWithDepositProtoMsg): _35.CommunityPoolSpendProposalWithDeposit;
                toProto(message: _35.CommunityPoolSpendProposalWithDeposit): Uint8Array;
                toProtoMsg(message: _35.CommunityPoolSpendProposalWithDeposit): _35.CommunityPoolSpendProposalWithDepositProtoMsg;
            };
        };
    }
    namespace evidence {
        const v1beta1: {
            MsgClientImpl: typeof _216.MsgClientImpl;
            QueryClientImpl: typeof _199.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                evidence(request: _41.QueryEvidenceRequest): Promise<_41.QueryEvidenceResponse>;
                allEvidence(request?: _41.QueryAllEvidenceRequest): Promise<_41.QueryAllEvidenceResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useEvidence: <TData = _41.QueryEvidenceResponse>({ request, options }: _199.UseEvidenceQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useAllEvidence: <TData_1 = _41.QueryAllEvidenceResponse>({ request, options }: _199.UseAllEvidenceQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    submitEvidence(value: _42.MsgSubmitEvidence): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    submitEvidence(value: _42.MsgSubmitEvidence): {
                        typeUrl: string;
                        value: _42.MsgSubmitEvidence;
                    };
                };
                toJSON: {
                    submitEvidence(value: _42.MsgSubmitEvidence): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    submitEvidence(value: any): {
                        typeUrl: string;
                        value: _42.MsgSubmitEvidence;
                    };
                };
                fromPartial: {
                    submitEvidence(value: _42.MsgSubmitEvidence): {
                        typeUrl: string;
                        value: _42.MsgSubmitEvidence;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.evidence.v1beta1.MsgSubmitEvidence": {
                    aminoType: string;
                    toAmino: (message: _42.MsgSubmitEvidence) => _42.MsgSubmitEvidenceAmino;
                    fromAmino: (object: _42.MsgSubmitEvidenceAmino) => _42.MsgSubmitEvidence;
                };
            };
            MsgSubmitEvidence: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.MsgSubmitEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.MsgSubmitEvidence;
                fromJSON(object: any): _42.MsgSubmitEvidence;
                toJSON(message: _42.MsgSubmitEvidence): unknown;
                fromPartial(object: {
                    submitter?: string;
                    evidence?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _42.MsgSubmitEvidence;
                fromSDK(object: _42.MsgSubmitEvidenceSDKType): _42.MsgSubmitEvidence;
                toSDK(message: _42.MsgSubmitEvidence): _42.MsgSubmitEvidenceSDKType;
                fromAmino(object: _42.MsgSubmitEvidenceAmino): _42.MsgSubmitEvidence;
                toAmino(message: _42.MsgSubmitEvidence): _42.MsgSubmitEvidenceAmino;
                fromAminoMsg(object: _42.MsgSubmitEvidenceAminoMsg): _42.MsgSubmitEvidence;
                toAminoMsg(message: _42.MsgSubmitEvidence): _42.MsgSubmitEvidenceAminoMsg;
                fromProtoMsg(message: _42.MsgSubmitEvidenceProtoMsg): _42.MsgSubmitEvidence;
                toProto(message: _42.MsgSubmitEvidence): Uint8Array;
                toProtoMsg(message: _42.MsgSubmitEvidence): _42.MsgSubmitEvidenceProtoMsg;
            };
            MsgSubmitEvidenceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.MsgSubmitEvidenceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.MsgSubmitEvidenceResponse;
                fromJSON(object: any): _42.MsgSubmitEvidenceResponse;
                toJSON(message: _42.MsgSubmitEvidenceResponse): unknown;
                fromPartial(object: {
                    hash?: Uint8Array;
                }): _42.MsgSubmitEvidenceResponse;
                fromSDK(object: _42.MsgSubmitEvidenceResponseSDKType): _42.MsgSubmitEvidenceResponse;
                toSDK(message: _42.MsgSubmitEvidenceResponse): _42.MsgSubmitEvidenceResponseSDKType;
                fromAmino(object: _42.MsgSubmitEvidenceResponseAmino): _42.MsgSubmitEvidenceResponse;
                toAmino(message: _42.MsgSubmitEvidenceResponse): _42.MsgSubmitEvidenceResponseAmino;
                fromAminoMsg(object: _42.MsgSubmitEvidenceResponseAminoMsg): _42.MsgSubmitEvidenceResponse;
                toAminoMsg(message: _42.MsgSubmitEvidenceResponse): _42.MsgSubmitEvidenceResponseAminoMsg;
                fromProtoMsg(message: _42.MsgSubmitEvidenceResponseProtoMsg): _42.MsgSubmitEvidenceResponse;
                toProto(message: _42.MsgSubmitEvidenceResponse): Uint8Array;
                toProtoMsg(message: _42.MsgSubmitEvidenceResponse): _42.MsgSubmitEvidenceResponseProtoMsg;
            };
            QueryEvidenceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _41.QueryEvidenceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _41.QueryEvidenceRequest;
                fromJSON(object: any): _41.QueryEvidenceRequest;
                toJSON(message: _41.QueryEvidenceRequest): unknown;
                fromPartial(object: {
                    evidenceHash?: Uint8Array;
                }): _41.QueryEvidenceRequest;
                fromSDK(object: _41.QueryEvidenceRequestSDKType): _41.QueryEvidenceRequest;
                toSDK(message: _41.QueryEvidenceRequest): _41.QueryEvidenceRequestSDKType;
                fromAmino(object: _41.QueryEvidenceRequestAmino): _41.QueryEvidenceRequest;
                toAmino(message: _41.QueryEvidenceRequest): _41.QueryEvidenceRequestAmino;
                fromAminoMsg(object: _41.QueryEvidenceRequestAminoMsg): _41.QueryEvidenceRequest;
                toAminoMsg(message: _41.QueryEvidenceRequest): _41.QueryEvidenceRequestAminoMsg;
                fromProtoMsg(message: _41.QueryEvidenceRequestProtoMsg): _41.QueryEvidenceRequest;
                toProto(message: _41.QueryEvidenceRequest): Uint8Array;
                toProtoMsg(message: _41.QueryEvidenceRequest): _41.QueryEvidenceRequestProtoMsg;
            };
            QueryEvidenceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _41.QueryEvidenceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _41.QueryEvidenceResponse;
                fromJSON(object: any): _41.QueryEvidenceResponse;
                toJSON(message: _41.QueryEvidenceResponse): unknown;
                fromPartial(object: {
                    evidence?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _41.QueryEvidenceResponse;
                fromSDK(object: _41.QueryEvidenceResponseSDKType): _41.QueryEvidenceResponse;
                toSDK(message: _41.QueryEvidenceResponse): _41.QueryEvidenceResponseSDKType;
                fromAmino(object: _41.QueryEvidenceResponseAmino): _41.QueryEvidenceResponse;
                toAmino(message: _41.QueryEvidenceResponse): _41.QueryEvidenceResponseAmino;
                fromAminoMsg(object: _41.QueryEvidenceResponseAminoMsg): _41.QueryEvidenceResponse;
                toAminoMsg(message: _41.QueryEvidenceResponse): _41.QueryEvidenceResponseAminoMsg;
                fromProtoMsg(message: _41.QueryEvidenceResponseProtoMsg): _41.QueryEvidenceResponse;
                toProto(message: _41.QueryEvidenceResponse): Uint8Array;
                toProtoMsg(message: _41.QueryEvidenceResponse): _41.QueryEvidenceResponseProtoMsg;
            };
            QueryAllEvidenceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _41.QueryAllEvidenceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _41.QueryAllEvidenceRequest;
                fromJSON(object: any): _41.QueryAllEvidenceRequest;
                toJSON(message: _41.QueryAllEvidenceRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _41.QueryAllEvidenceRequest;
                fromSDK(object: _41.QueryAllEvidenceRequestSDKType): _41.QueryAllEvidenceRequest;
                toSDK(message: _41.QueryAllEvidenceRequest): _41.QueryAllEvidenceRequestSDKType;
                fromAmino(object: _41.QueryAllEvidenceRequestAmino): _41.QueryAllEvidenceRequest;
                toAmino(message: _41.QueryAllEvidenceRequest): _41.QueryAllEvidenceRequestAmino;
                fromAminoMsg(object: _41.QueryAllEvidenceRequestAminoMsg): _41.QueryAllEvidenceRequest;
                toAminoMsg(message: _41.QueryAllEvidenceRequest): _41.QueryAllEvidenceRequestAminoMsg;
                fromProtoMsg(message: _41.QueryAllEvidenceRequestProtoMsg): _41.QueryAllEvidenceRequest;
                toProto(message: _41.QueryAllEvidenceRequest): Uint8Array;
                toProtoMsg(message: _41.QueryAllEvidenceRequest): _41.QueryAllEvidenceRequestProtoMsg;
            };
            QueryAllEvidenceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _41.QueryAllEvidenceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _41.QueryAllEvidenceResponse;
                fromJSON(object: any): _41.QueryAllEvidenceResponse;
                toJSON(message: _41.QueryAllEvidenceResponse): unknown;
                fromPartial(object: {
                    evidence?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _41.QueryAllEvidenceResponse;
                fromSDK(object: _41.QueryAllEvidenceResponseSDKType): _41.QueryAllEvidenceResponse;
                toSDK(message: _41.QueryAllEvidenceResponse): _41.QueryAllEvidenceResponseSDKType;
                fromAmino(object: _41.QueryAllEvidenceResponseAmino): _41.QueryAllEvidenceResponse;
                toAmino(message: _41.QueryAllEvidenceResponse): _41.QueryAllEvidenceResponseAmino;
                fromAminoMsg(object: _41.QueryAllEvidenceResponseAminoMsg): _41.QueryAllEvidenceResponse;
                toAminoMsg(message: _41.QueryAllEvidenceResponse): _41.QueryAllEvidenceResponseAminoMsg;
                fromProtoMsg(message: _41.QueryAllEvidenceResponseProtoMsg): _41.QueryAllEvidenceResponse;
                toProto(message: _41.QueryAllEvidenceResponse): Uint8Array;
                toProtoMsg(message: _41.QueryAllEvidenceResponse): _41.QueryAllEvidenceResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _40.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _40.GenesisState;
                fromJSON(object: any): _40.GenesisState;
                toJSON(message: _40.GenesisState): unknown;
                fromPartial(object: {
                    evidence?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _40.GenesisState;
                fromSDK(object: _40.GenesisStateSDKType): _40.GenesisState;
                toSDK(message: _40.GenesisState): _40.GenesisStateSDKType;
                fromAmino(object: _40.GenesisStateAmino): _40.GenesisState;
                toAmino(message: _40.GenesisState): _40.GenesisStateAmino;
                fromAminoMsg(object: _40.GenesisStateAminoMsg): _40.GenesisState;
                toAminoMsg(message: _40.GenesisState): _40.GenesisStateAminoMsg;
                fromProtoMsg(message: _40.GenesisStateProtoMsg): _40.GenesisState;
                toProto(message: _40.GenesisState): Uint8Array;
                toProtoMsg(message: _40.GenesisState): _40.GenesisStateProtoMsg;
            };
            Equivocation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _39.Equivocation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _39.Equivocation;
                fromJSON(object: any): _39.Equivocation;
                toJSON(message: _39.Equivocation): unknown;
                fromPartial(object: {
                    height?: bigint;
                    time?: Date;
                    power?: bigint;
                    consensusAddress?: string;
                }): _39.Equivocation;
                fromSDK(object: _39.EquivocationSDKType): _39.Equivocation;
                toSDK(message: _39.Equivocation): _39.EquivocationSDKType;
                fromAmino(object: _39.EquivocationAmino): _39.Equivocation;
                toAmino(message: _39.Equivocation): _39.EquivocationAmino;
                fromAminoMsg(object: _39.EquivocationAminoMsg): _39.Equivocation;
                toAminoMsg(message: _39.Equivocation): _39.EquivocationAminoMsg;
                fromProtoMsg(message: _39.EquivocationProtoMsg): _39.Equivocation;
                toProto(message: _39.Equivocation): Uint8Array;
                toProtoMsg(message: _39.Equivocation): _39.EquivocationProtoMsg;
            };
        };
    }
    namespace feegrant {
        const v1beta1: {
            MsgClientImpl: typeof _217.MsgClientImpl;
            QueryClientImpl: typeof _200.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                allowance(request: _45.QueryAllowanceRequest): Promise<_45.QueryAllowanceResponse>;
                allowances(request: _45.QueryAllowancesRequest): Promise<_45.QueryAllowancesResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useAllowance: <TData = _45.QueryAllowanceResponse>({ request, options }: _200.UseAllowanceQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useAllowances: <TData_1 = _45.QueryAllowancesResponse>({ request, options }: _200.UseAllowancesQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    grantAllowance(value: _46.MsgGrantAllowance): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    revokeAllowance(value: _46.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    grantAllowance(value: _46.MsgGrantAllowance): {
                        typeUrl: string;
                        value: _46.MsgGrantAllowance;
                    };
                    revokeAllowance(value: _46.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: _46.MsgRevokeAllowance;
                    };
                };
                toJSON: {
                    grantAllowance(value: _46.MsgGrantAllowance): {
                        typeUrl: string;
                        value: unknown;
                    };
                    revokeAllowance(value: _46.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    grantAllowance(value: any): {
                        typeUrl: string;
                        value: _46.MsgGrantAllowance;
                    };
                    revokeAllowance(value: any): {
                        typeUrl: string;
                        value: _46.MsgRevokeAllowance;
                    };
                };
                fromPartial: {
                    grantAllowance(value: _46.MsgGrantAllowance): {
                        typeUrl: string;
                        value: _46.MsgGrantAllowance;
                    };
                    revokeAllowance(value: _46.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: _46.MsgRevokeAllowance;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.feegrant.v1beta1.MsgGrantAllowance": {
                    aminoType: string;
                    toAmino: (message: _46.MsgGrantAllowance) => _46.MsgGrantAllowanceAmino;
                    fromAmino: (object: _46.MsgGrantAllowanceAmino) => _46.MsgGrantAllowance;
                };
                "/cosmos.feegrant.v1beta1.MsgRevokeAllowance": {
                    aminoType: string;
                    toAmino: (message: _46.MsgRevokeAllowance) => _46.MsgRevokeAllowanceAmino;
                    fromAmino: (object: _46.MsgRevokeAllowanceAmino) => _46.MsgRevokeAllowance;
                };
            };
            MsgGrantAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _46.MsgGrantAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _46.MsgGrantAllowance;
                fromJSON(object: any): _46.MsgGrantAllowance;
                toJSON(message: _46.MsgGrantAllowance): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    allowance?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _46.MsgGrantAllowance;
                fromSDK(object: _46.MsgGrantAllowanceSDKType): _46.MsgGrantAllowance;
                toSDK(message: _46.MsgGrantAllowance): _46.MsgGrantAllowanceSDKType;
                fromAmino(object: _46.MsgGrantAllowanceAmino): _46.MsgGrantAllowance;
                toAmino(message: _46.MsgGrantAllowance): _46.MsgGrantAllowanceAmino;
                fromAminoMsg(object: _46.MsgGrantAllowanceAminoMsg): _46.MsgGrantAllowance;
                toAminoMsg(message: _46.MsgGrantAllowance): _46.MsgGrantAllowanceAminoMsg;
                fromProtoMsg(message: _46.MsgGrantAllowanceProtoMsg): _46.MsgGrantAllowance;
                toProto(message: _46.MsgGrantAllowance): Uint8Array;
                toProtoMsg(message: _46.MsgGrantAllowance): _46.MsgGrantAllowanceProtoMsg;
            };
            MsgGrantAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _46.MsgGrantAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _46.MsgGrantAllowanceResponse;
                fromJSON(_: any): _46.MsgGrantAllowanceResponse;
                toJSON(_: _46.MsgGrantAllowanceResponse): unknown;
                fromPartial(_: {}): _46.MsgGrantAllowanceResponse;
                fromSDK(_: _46.MsgGrantAllowanceResponseSDKType): _46.MsgGrantAllowanceResponse;
                toSDK(_: _46.MsgGrantAllowanceResponse): _46.MsgGrantAllowanceResponseSDKType;
                fromAmino(_: _46.MsgGrantAllowanceResponseAmino): _46.MsgGrantAllowanceResponse;
                toAmino(_: _46.MsgGrantAllowanceResponse): _46.MsgGrantAllowanceResponseAmino;
                fromAminoMsg(object: _46.MsgGrantAllowanceResponseAminoMsg): _46.MsgGrantAllowanceResponse;
                toAminoMsg(message: _46.MsgGrantAllowanceResponse): _46.MsgGrantAllowanceResponseAminoMsg;
                fromProtoMsg(message: _46.MsgGrantAllowanceResponseProtoMsg): _46.MsgGrantAllowanceResponse;
                toProto(message: _46.MsgGrantAllowanceResponse): Uint8Array;
                toProtoMsg(message: _46.MsgGrantAllowanceResponse): _46.MsgGrantAllowanceResponseProtoMsg;
            };
            MsgRevokeAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _46.MsgRevokeAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _46.MsgRevokeAllowance;
                fromJSON(object: any): _46.MsgRevokeAllowance;
                toJSON(message: _46.MsgRevokeAllowance): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                }): _46.MsgRevokeAllowance;
                fromSDK(object: _46.MsgRevokeAllowanceSDKType): _46.MsgRevokeAllowance;
                toSDK(message: _46.MsgRevokeAllowance): _46.MsgRevokeAllowanceSDKType;
                fromAmino(object: _46.MsgRevokeAllowanceAmino): _46.MsgRevokeAllowance;
                toAmino(message: _46.MsgRevokeAllowance): _46.MsgRevokeAllowanceAmino;
                fromAminoMsg(object: _46.MsgRevokeAllowanceAminoMsg): _46.MsgRevokeAllowance;
                toAminoMsg(message: _46.MsgRevokeAllowance): _46.MsgRevokeAllowanceAminoMsg;
                fromProtoMsg(message: _46.MsgRevokeAllowanceProtoMsg): _46.MsgRevokeAllowance;
                toProto(message: _46.MsgRevokeAllowance): Uint8Array;
                toProtoMsg(message: _46.MsgRevokeAllowance): _46.MsgRevokeAllowanceProtoMsg;
            };
            MsgRevokeAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _46.MsgRevokeAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _46.MsgRevokeAllowanceResponse;
                fromJSON(_: any): _46.MsgRevokeAllowanceResponse;
                toJSON(_: _46.MsgRevokeAllowanceResponse): unknown;
                fromPartial(_: {}): _46.MsgRevokeAllowanceResponse;
                fromSDK(_: _46.MsgRevokeAllowanceResponseSDKType): _46.MsgRevokeAllowanceResponse;
                toSDK(_: _46.MsgRevokeAllowanceResponse): _46.MsgRevokeAllowanceResponseSDKType;
                fromAmino(_: _46.MsgRevokeAllowanceResponseAmino): _46.MsgRevokeAllowanceResponse;
                toAmino(_: _46.MsgRevokeAllowanceResponse): _46.MsgRevokeAllowanceResponseAmino;
                fromAminoMsg(object: _46.MsgRevokeAllowanceResponseAminoMsg): _46.MsgRevokeAllowanceResponse;
                toAminoMsg(message: _46.MsgRevokeAllowanceResponse): _46.MsgRevokeAllowanceResponseAminoMsg;
                fromProtoMsg(message: _46.MsgRevokeAllowanceResponseProtoMsg): _46.MsgRevokeAllowanceResponse;
                toProto(message: _46.MsgRevokeAllowanceResponse): Uint8Array;
                toProtoMsg(message: _46.MsgRevokeAllowanceResponse): _46.MsgRevokeAllowanceResponseProtoMsg;
            };
            QueryAllowanceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.QueryAllowanceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.QueryAllowanceRequest;
                fromJSON(object: any): _45.QueryAllowanceRequest;
                toJSON(message: _45.QueryAllowanceRequest): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                }): _45.QueryAllowanceRequest;
                fromSDK(object: _45.QueryAllowanceRequestSDKType): _45.QueryAllowanceRequest;
                toSDK(message: _45.QueryAllowanceRequest): _45.QueryAllowanceRequestSDKType;
                fromAmino(object: _45.QueryAllowanceRequestAmino): _45.QueryAllowanceRequest;
                toAmino(message: _45.QueryAllowanceRequest): _45.QueryAllowanceRequestAmino;
                fromAminoMsg(object: _45.QueryAllowanceRequestAminoMsg): _45.QueryAllowanceRequest;
                toAminoMsg(message: _45.QueryAllowanceRequest): _45.QueryAllowanceRequestAminoMsg;
                fromProtoMsg(message: _45.QueryAllowanceRequestProtoMsg): _45.QueryAllowanceRequest;
                toProto(message: _45.QueryAllowanceRequest): Uint8Array;
                toProtoMsg(message: _45.QueryAllowanceRequest): _45.QueryAllowanceRequestProtoMsg;
            };
            QueryAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.QueryAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.QueryAllowanceResponse;
                fromJSON(object: any): _45.QueryAllowanceResponse;
                toJSON(message: _45.QueryAllowanceResponse): unknown;
                fromPartial(object: {
                    allowance?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _45.QueryAllowanceResponse;
                fromSDK(object: _45.QueryAllowanceResponseSDKType): _45.QueryAllowanceResponse;
                toSDK(message: _45.QueryAllowanceResponse): _45.QueryAllowanceResponseSDKType;
                fromAmino(object: _45.QueryAllowanceResponseAmino): _45.QueryAllowanceResponse;
                toAmino(message: _45.QueryAllowanceResponse): _45.QueryAllowanceResponseAmino;
                fromAminoMsg(object: _45.QueryAllowanceResponseAminoMsg): _45.QueryAllowanceResponse;
                toAminoMsg(message: _45.QueryAllowanceResponse): _45.QueryAllowanceResponseAminoMsg;
                fromProtoMsg(message: _45.QueryAllowanceResponseProtoMsg): _45.QueryAllowanceResponse;
                toProto(message: _45.QueryAllowanceResponse): Uint8Array;
                toProtoMsg(message: _45.QueryAllowanceResponse): _45.QueryAllowanceResponseProtoMsg;
            };
            QueryAllowancesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.QueryAllowancesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.QueryAllowancesRequest;
                fromJSON(object: any): _45.QueryAllowancesRequest;
                toJSON(message: _45.QueryAllowancesRequest): unknown;
                fromPartial(object: {
                    grantee?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _45.QueryAllowancesRequest;
                fromSDK(object: _45.QueryAllowancesRequestSDKType): _45.QueryAllowancesRequest;
                toSDK(message: _45.QueryAllowancesRequest): _45.QueryAllowancesRequestSDKType;
                fromAmino(object: _45.QueryAllowancesRequestAmino): _45.QueryAllowancesRequest;
                toAmino(message: _45.QueryAllowancesRequest): _45.QueryAllowancesRequestAmino;
                fromAminoMsg(object: _45.QueryAllowancesRequestAminoMsg): _45.QueryAllowancesRequest;
                toAminoMsg(message: _45.QueryAllowancesRequest): _45.QueryAllowancesRequestAminoMsg;
                fromProtoMsg(message: _45.QueryAllowancesRequestProtoMsg): _45.QueryAllowancesRequest;
                toProto(message: _45.QueryAllowancesRequest): Uint8Array;
                toProtoMsg(message: _45.QueryAllowancesRequest): _45.QueryAllowancesRequestProtoMsg;
            };
            QueryAllowancesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.QueryAllowancesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.QueryAllowancesResponse;
                fromJSON(object: any): _45.QueryAllowancesResponse;
                toJSON(message: _45.QueryAllowancesResponse): unknown;
                fromPartial(object: {
                    allowances?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _45.QueryAllowancesResponse;
                fromSDK(object: _45.QueryAllowancesResponseSDKType): _45.QueryAllowancesResponse;
                toSDK(message: _45.QueryAllowancesResponse): _45.QueryAllowancesResponseSDKType;
                fromAmino(object: _45.QueryAllowancesResponseAmino): _45.QueryAllowancesResponse;
                toAmino(message: _45.QueryAllowancesResponse): _45.QueryAllowancesResponseAmino;
                fromAminoMsg(object: _45.QueryAllowancesResponseAminoMsg): _45.QueryAllowancesResponse;
                toAminoMsg(message: _45.QueryAllowancesResponse): _45.QueryAllowancesResponseAminoMsg;
                fromProtoMsg(message: _45.QueryAllowancesResponseProtoMsg): _45.QueryAllowancesResponse;
                toProto(message: _45.QueryAllowancesResponse): Uint8Array;
                toProtoMsg(message: _45.QueryAllowancesResponse): _45.QueryAllowancesResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.GenesisState;
                fromJSON(object: any): _44.GenesisState;
                toJSON(message: _44.GenesisState): unknown;
                fromPartial(object: {
                    allowances?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                }): _44.GenesisState;
                fromSDK(object: _44.GenesisStateSDKType): _44.GenesisState;
                toSDK(message: _44.GenesisState): _44.GenesisStateSDKType;
                fromAmino(object: _44.GenesisStateAmino): _44.GenesisState;
                toAmino(message: _44.GenesisState): _44.GenesisStateAmino;
                fromAminoMsg(object: _44.GenesisStateAminoMsg): _44.GenesisState;
                toAminoMsg(message: _44.GenesisState): _44.GenesisStateAminoMsg;
                fromProtoMsg(message: _44.GenesisStateProtoMsg): _44.GenesisState;
                toProto(message: _44.GenesisState): Uint8Array;
                toProtoMsg(message: _44.GenesisState): _44.GenesisStateProtoMsg;
            };
            BasicAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.BasicAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.BasicAllowance;
                fromJSON(object: any): _43.BasicAllowance;
                toJSON(message: _43.BasicAllowance): unknown;
                fromPartial(object: {
                    spendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    expiration?: Date;
                }): _43.BasicAllowance;
                fromSDK(object: _43.BasicAllowanceSDKType): _43.BasicAllowance;
                toSDK(message: _43.BasicAllowance): _43.BasicAllowanceSDKType;
                fromAmino(object: _43.BasicAllowanceAmino): _43.BasicAllowance;
                toAmino(message: _43.BasicAllowance): _43.BasicAllowanceAmino;
                fromAminoMsg(object: _43.BasicAllowanceAminoMsg): _43.BasicAllowance;
                toAminoMsg(message: _43.BasicAllowance): _43.BasicAllowanceAminoMsg;
                fromProtoMsg(message: _43.BasicAllowanceProtoMsg): _43.BasicAllowance;
                toProto(message: _43.BasicAllowance): Uint8Array;
                toProtoMsg(message: _43.BasicAllowance): _43.BasicAllowanceProtoMsg;
            };
            PeriodicAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.PeriodicAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.PeriodicAllowance;
                fromJSON(object: any): _43.PeriodicAllowance;
                toJSON(message: _43.PeriodicAllowance): unknown;
                fromPartial(object: {
                    basic?: {
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        expiration?: Date;
                    };
                    period?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    periodSpendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    periodCanSpend?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    periodReset?: Date;
                }): _43.PeriodicAllowance;
                fromSDK(object: _43.PeriodicAllowanceSDKType): _43.PeriodicAllowance;
                toSDK(message: _43.PeriodicAllowance): _43.PeriodicAllowanceSDKType;
                fromAmino(object: _43.PeriodicAllowanceAmino): _43.PeriodicAllowance;
                toAmino(message: _43.PeriodicAllowance): _43.PeriodicAllowanceAmino;
                fromAminoMsg(object: _43.PeriodicAllowanceAminoMsg): _43.PeriodicAllowance;
                toAminoMsg(message: _43.PeriodicAllowance): _43.PeriodicAllowanceAminoMsg;
                fromProtoMsg(message: _43.PeriodicAllowanceProtoMsg): _43.PeriodicAllowance;
                toProto(message: _43.PeriodicAllowance): Uint8Array;
                toProtoMsg(message: _43.PeriodicAllowance): _43.PeriodicAllowanceProtoMsg;
            };
            AllowedMsgAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.AllowedMsgAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.AllowedMsgAllowance;
                fromJSON(object: any): _43.AllowedMsgAllowance;
                toJSON(message: _43.AllowedMsgAllowance): unknown;
                fromPartial(object: {
                    allowance?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    allowedMessages?: string[];
                }): _43.AllowedMsgAllowance;
                fromSDK(object: _43.AllowedMsgAllowanceSDKType): _43.AllowedMsgAllowance;
                toSDK(message: _43.AllowedMsgAllowance): _43.AllowedMsgAllowanceSDKType;
                fromAmino(object: _43.AllowedMsgAllowanceAmino): _43.AllowedMsgAllowance;
                toAmino(message: _43.AllowedMsgAllowance): _43.AllowedMsgAllowanceAmino;
                fromAminoMsg(object: _43.AllowedMsgAllowanceAminoMsg): _43.AllowedMsgAllowance;
                toAminoMsg(message: _43.AllowedMsgAllowance): _43.AllowedMsgAllowanceAminoMsg;
                fromProtoMsg(message: _43.AllowedMsgAllowanceProtoMsg): _43.AllowedMsgAllowance;
                toProto(message: _43.AllowedMsgAllowance): Uint8Array;
                toProtoMsg(message: _43.AllowedMsgAllowance): _43.AllowedMsgAllowanceProtoMsg;
            };
            Grant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.Grant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.Grant;
                fromJSON(object: any): _43.Grant;
                toJSON(message: _43.Grant): unknown;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    allowance?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _43.Grant;
                fromSDK(object: _43.GrantSDKType): _43.Grant;
                toSDK(message: _43.Grant): _43.GrantSDKType;
                fromAmino(object: _43.GrantAmino): _43.Grant;
                toAmino(message: _43.Grant): _43.GrantAmino;
                fromAminoMsg(object: _43.GrantAminoMsg): _43.Grant;
                toAminoMsg(message: _43.Grant): _43.GrantAminoMsg;
                fromProtoMsg(message: _43.GrantProtoMsg): _43.Grant;
                toProto(message: _43.Grant): Uint8Array;
                toProtoMsg(message: _43.Grant): _43.GrantProtoMsg;
            };
        };
    }
    namespace genutil {
        const v1beta1: {
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _47.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _47.GenesisState;
                fromJSON(object: any): _47.GenesisState;
                toJSON(message: _47.GenesisState): unknown;
                fromPartial(object: {
                    genTxs?: Uint8Array[];
                }): _47.GenesisState;
                fromSDK(object: _47.GenesisStateSDKType): _47.GenesisState;
                toSDK(message: _47.GenesisState): _47.GenesisStateSDKType;
                fromAmino(object: _47.GenesisStateAmino): _47.GenesisState;
                toAmino(message: _47.GenesisState): _47.GenesisStateAmino;
                fromAminoMsg(object: _47.GenesisStateAminoMsg): _47.GenesisState;
                toAminoMsg(message: _47.GenesisState): _47.GenesisStateAminoMsg;
                fromProtoMsg(message: _47.GenesisStateProtoMsg): _47.GenesisState;
                toProto(message: _47.GenesisState): Uint8Array;
                toProtoMsg(message: _47.GenesisState): _47.GenesisStateProtoMsg;
            };
        };
    }
    namespace gov {
        const v1beta1: {
            MsgClientImpl: typeof _218.MsgClientImpl;
            QueryClientImpl: typeof _201.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                proposal(request: _50.QueryProposalRequest): Promise<_50.QueryProposalResponse>;
                proposals(request: _50.QueryProposalsRequest): Promise<_50.QueryProposalsResponse>;
                vote(request: _50.QueryVoteRequest): Promise<_50.QueryVoteResponse>;
                votes(request: _50.QueryVotesRequest): Promise<_50.QueryVotesResponse>;
                params(request: _50.QueryParamsRequest): Promise<_50.QueryParamsResponse>;
                deposit(request: _50.QueryDepositRequest): Promise<_50.QueryDepositResponse>;
                deposits(request: _50.QueryDepositsRequest): Promise<_50.QueryDepositsResponse>;
                tallyResult(request: _50.QueryTallyResultRequest): Promise<_50.QueryTallyResultResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useProposal: <TData = _50.QueryProposalResponse>({ request, options }: _201.UseProposalQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useProposals: <TData_1 = _50.QueryProposalsResponse>({ request, options }: _201.UseProposalsQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useVote: <TData_2 = _50.QueryVoteResponse>({ request, options }: _201.UseVoteQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useVotes: <TData_3 = _50.QueryVotesResponse>({ request, options }: _201.UseVotesQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useParams: <TData_4 = _50.QueryParamsResponse>({ request, options }: _201.UseParamsQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useDeposit: <TData_5 = _50.QueryDepositResponse>({ request, options }: _201.UseDepositQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useDeposits: <TData_6 = _50.QueryDepositsResponse>({ request, options }: _201.UseDepositsQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useTallyResult: <TData_7 = _50.QueryTallyResultResponse>({ request, options }: _201.UseTallyResultQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    submitProposal(value: _51.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _51.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    voteWeighted(value: _51.MsgVoteWeighted): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    deposit(value: _51.MsgDeposit): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    submitProposal(value: _51.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _51.MsgSubmitProposal;
                    };
                    vote(value: _51.MsgVote): {
                        typeUrl: string;
                        value: _51.MsgVote;
                    };
                    voteWeighted(value: _51.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _51.MsgVoteWeighted;
                    };
                    deposit(value: _51.MsgDeposit): {
                        typeUrl: string;
                        value: _51.MsgDeposit;
                    };
                };
                toJSON: {
                    submitProposal(value: _51.MsgSubmitProposal): {
                        typeUrl: string;
                        value: unknown;
                    };
                    vote(value: _51.MsgVote): {
                        typeUrl: string;
                        value: unknown;
                    };
                    voteWeighted(value: _51.MsgVoteWeighted): {
                        typeUrl: string;
                        value: unknown;
                    };
                    deposit(value: _51.MsgDeposit): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    submitProposal(value: any): {
                        typeUrl: string;
                        value: _51.MsgSubmitProposal;
                    };
                    vote(value: any): {
                        typeUrl: string;
                        value: _51.MsgVote;
                    };
                    voteWeighted(value: any): {
                        typeUrl: string;
                        value: _51.MsgVoteWeighted;
                    };
                    deposit(value: any): {
                        typeUrl: string;
                        value: _51.MsgDeposit;
                    };
                };
                fromPartial: {
                    submitProposal(value: _51.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _51.MsgSubmitProposal;
                    };
                    vote(value: _51.MsgVote): {
                        typeUrl: string;
                        value: _51.MsgVote;
                    };
                    voteWeighted(value: _51.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _51.MsgVoteWeighted;
                    };
                    deposit(value: _51.MsgDeposit): {
                        typeUrl: string;
                        value: _51.MsgDeposit;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.gov.v1beta1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _51.MsgSubmitProposal) => _51.MsgSubmitProposalAmino;
                    fromAmino: (object: _51.MsgSubmitProposalAmino) => _51.MsgSubmitProposal;
                };
                "/cosmos.gov.v1beta1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _51.MsgVote) => _51.MsgVoteAmino;
                    fromAmino: (object: _51.MsgVoteAmino) => _51.MsgVote;
                };
                "/cosmos.gov.v1beta1.MsgVoteWeighted": {
                    aminoType: string;
                    toAmino: (message: _51.MsgVoteWeighted) => _51.MsgVoteWeightedAmino;
                    fromAmino: (object: _51.MsgVoteWeightedAmino) => _51.MsgVoteWeighted;
                };
                "/cosmos.gov.v1beta1.MsgDeposit": {
                    aminoType: string;
                    toAmino: (message: _51.MsgDeposit) => _51.MsgDepositAmino;
                    fromAmino: (object: _51.MsgDepositAmino) => _51.MsgDeposit;
                };
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgSubmitProposal;
                fromJSON(object: any): _51.MsgSubmitProposal;
                toJSON(message: _51.MsgSubmitProposal): unknown;
                fromPartial(object: {
                    content?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    initialDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    proposer?: string;
                    isExpedited?: boolean;
                }): _51.MsgSubmitProposal;
                fromSDK(object: _51.MsgSubmitProposalSDKType): _51.MsgSubmitProposal;
                toSDK(message: _51.MsgSubmitProposal): _51.MsgSubmitProposalSDKType;
                fromAmino(object: _51.MsgSubmitProposalAmino): _51.MsgSubmitProposal;
                toAmino(message: _51.MsgSubmitProposal): _51.MsgSubmitProposalAmino;
                fromAminoMsg(object: _51.MsgSubmitProposalAminoMsg): _51.MsgSubmitProposal;
                toAminoMsg(message: _51.MsgSubmitProposal): _51.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _51.MsgSubmitProposalProtoMsg): _51.MsgSubmitProposal;
                toProto(message: _51.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _51.MsgSubmitProposal): _51.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgSubmitProposalResponse;
                fromJSON(object: any): _51.MsgSubmitProposalResponse;
                toJSON(message: _51.MsgSubmitProposalResponse): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _51.MsgSubmitProposalResponse;
                fromSDK(object: _51.MsgSubmitProposalResponseSDKType): _51.MsgSubmitProposalResponse;
                toSDK(message: _51.MsgSubmitProposalResponse): _51.MsgSubmitProposalResponseSDKType;
                fromAmino(object: _51.MsgSubmitProposalResponseAmino): _51.MsgSubmitProposalResponse;
                toAmino(message: _51.MsgSubmitProposalResponse): _51.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _51.MsgSubmitProposalResponseAminoMsg): _51.MsgSubmitProposalResponse;
                toAminoMsg(message: _51.MsgSubmitProposalResponse): _51.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _51.MsgSubmitProposalResponseProtoMsg): _51.MsgSubmitProposalResponse;
                toProto(message: _51.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _51.MsgSubmitProposalResponse): _51.MsgSubmitProposalResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgVote;
                fromJSON(object: any): _51.MsgVote;
                toJSON(message: _51.MsgVote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _49.VoteOption;
                }): _51.MsgVote;
                fromSDK(object: _51.MsgVoteSDKType): _51.MsgVote;
                toSDK(message: _51.MsgVote): _51.MsgVoteSDKType;
                fromAmino(object: _51.MsgVoteAmino): _51.MsgVote;
                toAmino(message: _51.MsgVote): _51.MsgVoteAmino;
                fromAminoMsg(object: _51.MsgVoteAminoMsg): _51.MsgVote;
                toAminoMsg(message: _51.MsgVote): _51.MsgVoteAminoMsg;
                fromProtoMsg(message: _51.MsgVoteProtoMsg): _51.MsgVote;
                toProto(message: _51.MsgVote): Uint8Array;
                toProtoMsg(message: _51.MsgVote): _51.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _51.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgVoteResponse;
                fromJSON(_: any): _51.MsgVoteResponse;
                toJSON(_: _51.MsgVoteResponse): unknown;
                fromPartial(_: {}): _51.MsgVoteResponse;
                fromSDK(_: _51.MsgVoteResponseSDKType): _51.MsgVoteResponse;
                toSDK(_: _51.MsgVoteResponse): _51.MsgVoteResponseSDKType;
                fromAmino(_: _51.MsgVoteResponseAmino): _51.MsgVoteResponse;
                toAmino(_: _51.MsgVoteResponse): _51.MsgVoteResponseAmino;
                fromAminoMsg(object: _51.MsgVoteResponseAminoMsg): _51.MsgVoteResponse;
                toAminoMsg(message: _51.MsgVoteResponse): _51.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _51.MsgVoteResponseProtoMsg): _51.MsgVoteResponse;
                toProto(message: _51.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _51.MsgVoteResponse): _51.MsgVoteResponseProtoMsg;
            };
            MsgVoteWeighted: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgVoteWeighted, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgVoteWeighted;
                fromJSON(object: any): _51.MsgVoteWeighted;
                toJSON(message: _51.MsgVoteWeighted): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _49.VoteOption;
                        weight?: string;
                    }[];
                }): _51.MsgVoteWeighted;
                fromSDK(object: _51.MsgVoteWeightedSDKType): _51.MsgVoteWeighted;
                toSDK(message: _51.MsgVoteWeighted): _51.MsgVoteWeightedSDKType;
                fromAmino(object: _51.MsgVoteWeightedAmino): _51.MsgVoteWeighted;
                toAmino(message: _51.MsgVoteWeighted): _51.MsgVoteWeightedAmino;
                fromAminoMsg(object: _51.MsgVoteWeightedAminoMsg): _51.MsgVoteWeighted;
                toAminoMsg(message: _51.MsgVoteWeighted): _51.MsgVoteWeightedAminoMsg;
                fromProtoMsg(message: _51.MsgVoteWeightedProtoMsg): _51.MsgVoteWeighted;
                toProto(message: _51.MsgVoteWeighted): Uint8Array;
                toProtoMsg(message: _51.MsgVoteWeighted): _51.MsgVoteWeightedProtoMsg;
            };
            MsgVoteWeightedResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _51.MsgVoteWeightedResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgVoteWeightedResponse;
                fromJSON(_: any): _51.MsgVoteWeightedResponse;
                toJSON(_: _51.MsgVoteWeightedResponse): unknown;
                fromPartial(_: {}): _51.MsgVoteWeightedResponse;
                fromSDK(_: _51.MsgVoteWeightedResponseSDKType): _51.MsgVoteWeightedResponse;
                toSDK(_: _51.MsgVoteWeightedResponse): _51.MsgVoteWeightedResponseSDKType;
                fromAmino(_: _51.MsgVoteWeightedResponseAmino): _51.MsgVoteWeightedResponse;
                toAmino(_: _51.MsgVoteWeightedResponse): _51.MsgVoteWeightedResponseAmino;
                fromAminoMsg(object: _51.MsgVoteWeightedResponseAminoMsg): _51.MsgVoteWeightedResponse;
                toAminoMsg(message: _51.MsgVoteWeightedResponse): _51.MsgVoteWeightedResponseAminoMsg;
                fromProtoMsg(message: _51.MsgVoteWeightedResponseProtoMsg): _51.MsgVoteWeightedResponse;
                toProto(message: _51.MsgVoteWeightedResponse): Uint8Array;
                toProtoMsg(message: _51.MsgVoteWeightedResponse): _51.MsgVoteWeightedResponseProtoMsg;
            };
            MsgDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgDeposit;
                fromJSON(object: any): _51.MsgDeposit;
                toJSON(message: _51.MsgDeposit): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _51.MsgDeposit;
                fromSDK(object: _51.MsgDepositSDKType): _51.MsgDeposit;
                toSDK(message: _51.MsgDeposit): _51.MsgDepositSDKType;
                fromAmino(object: _51.MsgDepositAmino): _51.MsgDeposit;
                toAmino(message: _51.MsgDeposit): _51.MsgDepositAmino;
                fromAminoMsg(object: _51.MsgDepositAminoMsg): _51.MsgDeposit;
                toAminoMsg(message: _51.MsgDeposit): _51.MsgDepositAminoMsg;
                fromProtoMsg(message: _51.MsgDepositProtoMsg): _51.MsgDeposit;
                toProto(message: _51.MsgDeposit): Uint8Array;
                toProtoMsg(message: _51.MsgDeposit): _51.MsgDepositProtoMsg;
            };
            MsgDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _51.MsgDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgDepositResponse;
                fromJSON(_: any): _51.MsgDepositResponse;
                toJSON(_: _51.MsgDepositResponse): unknown;
                fromPartial(_: {}): _51.MsgDepositResponse;
                fromSDK(_: _51.MsgDepositResponseSDKType): _51.MsgDepositResponse;
                toSDK(_: _51.MsgDepositResponse): _51.MsgDepositResponseSDKType;
                fromAmino(_: _51.MsgDepositResponseAmino): _51.MsgDepositResponse;
                toAmino(_: _51.MsgDepositResponse): _51.MsgDepositResponseAmino;
                fromAminoMsg(object: _51.MsgDepositResponseAminoMsg): _51.MsgDepositResponse;
                toAminoMsg(message: _51.MsgDepositResponse): _51.MsgDepositResponseAminoMsg;
                fromProtoMsg(message: _51.MsgDepositResponseProtoMsg): _51.MsgDepositResponse;
                toProto(message: _51.MsgDepositResponse): Uint8Array;
                toProtoMsg(message: _51.MsgDepositResponse): _51.MsgDepositResponseProtoMsg;
            };
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryProposalRequest;
                fromJSON(object: any): _50.QueryProposalRequest;
                toJSON(message: _50.QueryProposalRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _50.QueryProposalRequest;
                fromSDK(object: _50.QueryProposalRequestSDKType): _50.QueryProposalRequest;
                toSDK(message: _50.QueryProposalRequest): _50.QueryProposalRequestSDKType;
                fromAmino(object: _50.QueryProposalRequestAmino): _50.QueryProposalRequest;
                toAmino(message: _50.QueryProposalRequest): _50.QueryProposalRequestAmino;
                fromAminoMsg(object: _50.QueryProposalRequestAminoMsg): _50.QueryProposalRequest;
                toAminoMsg(message: _50.QueryProposalRequest): _50.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _50.QueryProposalRequestProtoMsg): _50.QueryProposalRequest;
                toProto(message: _50.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _50.QueryProposalRequest): _50.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryProposalResponse;
                fromJSON(object: any): _50.QueryProposalResponse;
                toJSON(message: _50.QueryProposalResponse): unknown;
                fromPartial(object: {
                    proposal?: {
                        proposalId?: bigint;
                        content?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        status?: _49.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        isExpedited?: boolean;
                    };
                }): _50.QueryProposalResponse;
                fromSDK(object: _50.QueryProposalResponseSDKType): _50.QueryProposalResponse;
                toSDK(message: _50.QueryProposalResponse): _50.QueryProposalResponseSDKType;
                fromAmino(object: _50.QueryProposalResponseAmino): _50.QueryProposalResponse;
                toAmino(message: _50.QueryProposalResponse): _50.QueryProposalResponseAmino;
                fromAminoMsg(object: _50.QueryProposalResponseAminoMsg): _50.QueryProposalResponse;
                toAminoMsg(message: _50.QueryProposalResponse): _50.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _50.QueryProposalResponseProtoMsg): _50.QueryProposalResponse;
                toProto(message: _50.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _50.QueryProposalResponse): _50.QueryProposalResponseProtoMsg;
            };
            QueryProposalsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryProposalsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryProposalsRequest;
                fromJSON(object: any): _50.QueryProposalsRequest;
                toJSON(message: _50.QueryProposalsRequest): unknown;
                fromPartial(object: {
                    proposalStatus?: _49.ProposalStatus;
                    voter?: string;
                    depositor?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _50.QueryProposalsRequest;
                fromSDK(object: _50.QueryProposalsRequestSDKType): _50.QueryProposalsRequest;
                toSDK(message: _50.QueryProposalsRequest): _50.QueryProposalsRequestSDKType;
                fromAmino(object: _50.QueryProposalsRequestAmino): _50.QueryProposalsRequest;
                toAmino(message: _50.QueryProposalsRequest): _50.QueryProposalsRequestAmino;
                fromAminoMsg(object: _50.QueryProposalsRequestAminoMsg): _50.QueryProposalsRequest;
                toAminoMsg(message: _50.QueryProposalsRequest): _50.QueryProposalsRequestAminoMsg;
                fromProtoMsg(message: _50.QueryProposalsRequestProtoMsg): _50.QueryProposalsRequest;
                toProto(message: _50.QueryProposalsRequest): Uint8Array;
                toProtoMsg(message: _50.QueryProposalsRequest): _50.QueryProposalsRequestProtoMsg;
            };
            QueryProposalsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryProposalsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryProposalsResponse;
                fromJSON(object: any): _50.QueryProposalsResponse;
                toJSON(message: _50.QueryProposalsResponse): unknown;
                fromPartial(object: {
                    proposals?: {
                        proposalId?: bigint;
                        content?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        status?: _49.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        isExpedited?: boolean;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _50.QueryProposalsResponse;
                fromSDK(object: _50.QueryProposalsResponseSDKType): _50.QueryProposalsResponse;
                toSDK(message: _50.QueryProposalsResponse): _50.QueryProposalsResponseSDKType;
                fromAmino(object: _50.QueryProposalsResponseAmino): _50.QueryProposalsResponse;
                toAmino(message: _50.QueryProposalsResponse): _50.QueryProposalsResponseAmino;
                fromAminoMsg(object: _50.QueryProposalsResponseAminoMsg): _50.QueryProposalsResponse;
                toAminoMsg(message: _50.QueryProposalsResponse): _50.QueryProposalsResponseAminoMsg;
                fromProtoMsg(message: _50.QueryProposalsResponseProtoMsg): _50.QueryProposalsResponse;
                toProto(message: _50.QueryProposalsResponse): Uint8Array;
                toProtoMsg(message: _50.QueryProposalsResponse): _50.QueryProposalsResponseProtoMsg;
            };
            QueryVoteRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryVoteRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryVoteRequest;
                fromJSON(object: any): _50.QueryVoteRequest;
                toJSON(message: _50.QueryVoteRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _50.QueryVoteRequest;
                fromSDK(object: _50.QueryVoteRequestSDKType): _50.QueryVoteRequest;
                toSDK(message: _50.QueryVoteRequest): _50.QueryVoteRequestSDKType;
                fromAmino(object: _50.QueryVoteRequestAmino): _50.QueryVoteRequest;
                toAmino(message: _50.QueryVoteRequest): _50.QueryVoteRequestAmino;
                fromAminoMsg(object: _50.QueryVoteRequestAminoMsg): _50.QueryVoteRequest;
                toAminoMsg(message: _50.QueryVoteRequest): _50.QueryVoteRequestAminoMsg;
                fromProtoMsg(message: _50.QueryVoteRequestProtoMsg): _50.QueryVoteRequest;
                toProto(message: _50.QueryVoteRequest): Uint8Array;
                toProtoMsg(message: _50.QueryVoteRequest): _50.QueryVoteRequestProtoMsg;
            };
            QueryVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryVoteResponse;
                fromJSON(object: any): _50.QueryVoteResponse;
                toJSON(message: _50.QueryVoteResponse): unknown;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _49.VoteOption;
                        options?: {
                            option?: _49.VoteOption;
                            weight?: string;
                        }[];
                    };
                }): _50.QueryVoteResponse;
                fromSDK(object: _50.QueryVoteResponseSDKType): _50.QueryVoteResponse;
                toSDK(message: _50.QueryVoteResponse): _50.QueryVoteResponseSDKType;
                fromAmino(object: _50.QueryVoteResponseAmino): _50.QueryVoteResponse;
                toAmino(message: _50.QueryVoteResponse): _50.QueryVoteResponseAmino;
                fromAminoMsg(object: _50.QueryVoteResponseAminoMsg): _50.QueryVoteResponse;
                toAminoMsg(message: _50.QueryVoteResponse): _50.QueryVoteResponseAminoMsg;
                fromProtoMsg(message: _50.QueryVoteResponseProtoMsg): _50.QueryVoteResponse;
                toProto(message: _50.QueryVoteResponse): Uint8Array;
                toProtoMsg(message: _50.QueryVoteResponse): _50.QueryVoteResponseProtoMsg;
            };
            QueryVotesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryVotesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryVotesRequest;
                fromJSON(object: any): _50.QueryVotesRequest;
                toJSON(message: _50.QueryVotesRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _50.QueryVotesRequest;
                fromSDK(object: _50.QueryVotesRequestSDKType): _50.QueryVotesRequest;
                toSDK(message: _50.QueryVotesRequest): _50.QueryVotesRequestSDKType;
                fromAmino(object: _50.QueryVotesRequestAmino): _50.QueryVotesRequest;
                toAmino(message: _50.QueryVotesRequest): _50.QueryVotesRequestAmino;
                fromAminoMsg(object: _50.QueryVotesRequestAminoMsg): _50.QueryVotesRequest;
                toAminoMsg(message: _50.QueryVotesRequest): _50.QueryVotesRequestAminoMsg;
                fromProtoMsg(message: _50.QueryVotesRequestProtoMsg): _50.QueryVotesRequest;
                toProto(message: _50.QueryVotesRequest): Uint8Array;
                toProtoMsg(message: _50.QueryVotesRequest): _50.QueryVotesRequestProtoMsg;
            };
            QueryVotesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryVotesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryVotesResponse;
                fromJSON(object: any): _50.QueryVotesResponse;
                toJSON(message: _50.QueryVotesResponse): unknown;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _49.VoteOption;
                        options?: {
                            option?: _49.VoteOption;
                            weight?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _50.QueryVotesResponse;
                fromSDK(object: _50.QueryVotesResponseSDKType): _50.QueryVotesResponse;
                toSDK(message: _50.QueryVotesResponse): _50.QueryVotesResponseSDKType;
                fromAmino(object: _50.QueryVotesResponseAmino): _50.QueryVotesResponse;
                toAmino(message: _50.QueryVotesResponse): _50.QueryVotesResponseAmino;
                fromAminoMsg(object: _50.QueryVotesResponseAminoMsg): _50.QueryVotesResponse;
                toAminoMsg(message: _50.QueryVotesResponse): _50.QueryVotesResponseAminoMsg;
                fromProtoMsg(message: _50.QueryVotesResponseProtoMsg): _50.QueryVotesResponse;
                toProto(message: _50.QueryVotesResponse): Uint8Array;
                toProtoMsg(message: _50.QueryVotesResponse): _50.QueryVotesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryParamsRequest;
                fromJSON(object: any): _50.QueryParamsRequest;
                toJSON(message: _50.QueryParamsRequest): unknown;
                fromPartial(object: {
                    paramsType?: string;
                }): _50.QueryParamsRequest;
                fromSDK(object: _50.QueryParamsRequestSDKType): _50.QueryParamsRequest;
                toSDK(message: _50.QueryParamsRequest): _50.QueryParamsRequestSDKType;
                fromAmino(object: _50.QueryParamsRequestAmino): _50.QueryParamsRequest;
                toAmino(message: _50.QueryParamsRequest): _50.QueryParamsRequestAmino;
                fromAminoMsg(object: _50.QueryParamsRequestAminoMsg): _50.QueryParamsRequest;
                toAminoMsg(message: _50.QueryParamsRequest): _50.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _50.QueryParamsRequestProtoMsg): _50.QueryParamsRequest;
                toProto(message: _50.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _50.QueryParamsRequest): _50.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryParamsResponse;
                fromJSON(object: any): _50.QueryParamsResponse;
                toJSON(message: _50.QueryParamsResponse): unknown;
                fromPartial(object: {
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        proposalVotingPeriods?: {
                            proposalType?: string;
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                        expeditedVotingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExpeditedDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        minInitialDepositRatio?: string;
                    };
                    tallyParams?: {
                        quorum?: Uint8Array;
                        threshold?: Uint8Array;
                        vetoThreshold?: Uint8Array;
                        expeditedThreshold?: Uint8Array;
                        expeditedQuorum?: Uint8Array;
                    };
                }): _50.QueryParamsResponse;
                fromSDK(object: _50.QueryParamsResponseSDKType): _50.QueryParamsResponse;
                toSDK(message: _50.QueryParamsResponse): _50.QueryParamsResponseSDKType;
                fromAmino(object: _50.QueryParamsResponseAmino): _50.QueryParamsResponse;
                toAmino(message: _50.QueryParamsResponse): _50.QueryParamsResponseAmino;
                fromAminoMsg(object: _50.QueryParamsResponseAminoMsg): _50.QueryParamsResponse;
                toAminoMsg(message: _50.QueryParamsResponse): _50.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _50.QueryParamsResponseProtoMsg): _50.QueryParamsResponse;
                toProto(message: _50.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _50.QueryParamsResponse): _50.QueryParamsResponseProtoMsg;
            };
            QueryDepositRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryDepositRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryDepositRequest;
                fromJSON(object: any): _50.QueryDepositRequest;
                toJSON(message: _50.QueryDepositRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                }): _50.QueryDepositRequest;
                fromSDK(object: _50.QueryDepositRequestSDKType): _50.QueryDepositRequest;
                toSDK(message: _50.QueryDepositRequest): _50.QueryDepositRequestSDKType;
                fromAmino(object: _50.QueryDepositRequestAmino): _50.QueryDepositRequest;
                toAmino(message: _50.QueryDepositRequest): _50.QueryDepositRequestAmino;
                fromAminoMsg(object: _50.QueryDepositRequestAminoMsg): _50.QueryDepositRequest;
                toAminoMsg(message: _50.QueryDepositRequest): _50.QueryDepositRequestAminoMsg;
                fromProtoMsg(message: _50.QueryDepositRequestProtoMsg): _50.QueryDepositRequest;
                toProto(message: _50.QueryDepositRequest): Uint8Array;
                toProtoMsg(message: _50.QueryDepositRequest): _50.QueryDepositRequestProtoMsg;
            };
            QueryDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryDepositResponse;
                fromJSON(object: any): _50.QueryDepositResponse;
                toJSON(message: _50.QueryDepositResponse): unknown;
                fromPartial(object: {
                    deposit?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _50.QueryDepositResponse;
                fromSDK(object: _50.QueryDepositResponseSDKType): _50.QueryDepositResponse;
                toSDK(message: _50.QueryDepositResponse): _50.QueryDepositResponseSDKType;
                fromAmino(object: _50.QueryDepositResponseAmino): _50.QueryDepositResponse;
                toAmino(message: _50.QueryDepositResponse): _50.QueryDepositResponseAmino;
                fromAminoMsg(object: _50.QueryDepositResponseAminoMsg): _50.QueryDepositResponse;
                toAminoMsg(message: _50.QueryDepositResponse): _50.QueryDepositResponseAminoMsg;
                fromProtoMsg(message: _50.QueryDepositResponseProtoMsg): _50.QueryDepositResponse;
                toProto(message: _50.QueryDepositResponse): Uint8Array;
                toProtoMsg(message: _50.QueryDepositResponse): _50.QueryDepositResponseProtoMsg;
            };
            QueryDepositsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryDepositsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryDepositsRequest;
                fromJSON(object: any): _50.QueryDepositsRequest;
                toJSON(message: _50.QueryDepositsRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _50.QueryDepositsRequest;
                fromSDK(object: _50.QueryDepositsRequestSDKType): _50.QueryDepositsRequest;
                toSDK(message: _50.QueryDepositsRequest): _50.QueryDepositsRequestSDKType;
                fromAmino(object: _50.QueryDepositsRequestAmino): _50.QueryDepositsRequest;
                toAmino(message: _50.QueryDepositsRequest): _50.QueryDepositsRequestAmino;
                fromAminoMsg(object: _50.QueryDepositsRequestAminoMsg): _50.QueryDepositsRequest;
                toAminoMsg(message: _50.QueryDepositsRequest): _50.QueryDepositsRequestAminoMsg;
                fromProtoMsg(message: _50.QueryDepositsRequestProtoMsg): _50.QueryDepositsRequest;
                toProto(message: _50.QueryDepositsRequest): Uint8Array;
                toProtoMsg(message: _50.QueryDepositsRequest): _50.QueryDepositsRequestProtoMsg;
            };
            QueryDepositsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryDepositsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryDepositsResponse;
                fromJSON(object: any): _50.QueryDepositsResponse;
                toJSON(message: _50.QueryDepositsResponse): unknown;
                fromPartial(object: {
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _50.QueryDepositsResponse;
                fromSDK(object: _50.QueryDepositsResponseSDKType): _50.QueryDepositsResponse;
                toSDK(message: _50.QueryDepositsResponse): _50.QueryDepositsResponseSDKType;
                fromAmino(object: _50.QueryDepositsResponseAmino): _50.QueryDepositsResponse;
                toAmino(message: _50.QueryDepositsResponse): _50.QueryDepositsResponseAmino;
                fromAminoMsg(object: _50.QueryDepositsResponseAminoMsg): _50.QueryDepositsResponse;
                toAminoMsg(message: _50.QueryDepositsResponse): _50.QueryDepositsResponseAminoMsg;
                fromProtoMsg(message: _50.QueryDepositsResponseProtoMsg): _50.QueryDepositsResponse;
                toProto(message: _50.QueryDepositsResponse): Uint8Array;
                toProtoMsg(message: _50.QueryDepositsResponse): _50.QueryDepositsResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryTallyResultRequest;
                fromJSON(object: any): _50.QueryTallyResultRequest;
                toJSON(message: _50.QueryTallyResultRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _50.QueryTallyResultRequest;
                fromSDK(object: _50.QueryTallyResultRequestSDKType): _50.QueryTallyResultRequest;
                toSDK(message: _50.QueryTallyResultRequest): _50.QueryTallyResultRequestSDKType;
                fromAmino(object: _50.QueryTallyResultRequestAmino): _50.QueryTallyResultRequest;
                toAmino(message: _50.QueryTallyResultRequest): _50.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _50.QueryTallyResultRequestAminoMsg): _50.QueryTallyResultRequest;
                toAminoMsg(message: _50.QueryTallyResultRequest): _50.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _50.QueryTallyResultRequestProtoMsg): _50.QueryTallyResultRequest;
                toProto(message: _50.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _50.QueryTallyResultRequest): _50.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryTallyResultResponse;
                fromJSON(object: any): _50.QueryTallyResultResponse;
                toJSON(message: _50.QueryTallyResultResponse): unknown;
                fromPartial(object: {
                    tally?: {
                        yes?: string;
                        abstain?: string;
                        no?: string;
                        noWithVeto?: string;
                    };
                }): _50.QueryTallyResultResponse;
                fromSDK(object: _50.QueryTallyResultResponseSDKType): _50.QueryTallyResultResponse;
                toSDK(message: _50.QueryTallyResultResponse): _50.QueryTallyResultResponseSDKType;
                fromAmino(object: _50.QueryTallyResultResponseAmino): _50.QueryTallyResultResponse;
                toAmino(message: _50.QueryTallyResultResponse): _50.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _50.QueryTallyResultResponseAminoMsg): _50.QueryTallyResultResponse;
                toAminoMsg(message: _50.QueryTallyResultResponse): _50.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _50.QueryTallyResultResponseProtoMsg): _50.QueryTallyResultResponse;
                toProto(message: _50.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _50.QueryTallyResultResponse): _50.QueryTallyResultResponseProtoMsg;
            };
            voteOptionFromJSON(object: any): _49.VoteOption;
            voteOptionToJSON(object: _49.VoteOption): string;
            proposalStatusFromJSON(object: any): _49.ProposalStatus;
            proposalStatusToJSON(object: _49.ProposalStatus): string;
            VoteOption: typeof _49.VoteOption;
            VoteOptionSDKType: typeof _49.VoteOption;
            VoteOptionAmino: typeof _49.VoteOption;
            ProposalStatus: typeof _49.ProposalStatus;
            ProposalStatusSDKType: typeof _49.ProposalStatus;
            ProposalStatusAmino: typeof _49.ProposalStatus;
            WeightedVoteOption: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.WeightedVoteOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.WeightedVoteOption;
                fromJSON(object: any): _49.WeightedVoteOption;
                toJSON(message: _49.WeightedVoteOption): unknown;
                fromPartial(object: {
                    option?: _49.VoteOption;
                    weight?: string;
                }): _49.WeightedVoteOption;
                fromSDK(object: _49.WeightedVoteOptionSDKType): _49.WeightedVoteOption;
                toSDK(message: _49.WeightedVoteOption): _49.WeightedVoteOptionSDKType;
                fromAmino(object: _49.WeightedVoteOptionAmino): _49.WeightedVoteOption;
                toAmino(message: _49.WeightedVoteOption): _49.WeightedVoteOptionAmino;
                fromAminoMsg(object: _49.WeightedVoteOptionAminoMsg): _49.WeightedVoteOption;
                toAminoMsg(message: _49.WeightedVoteOption): _49.WeightedVoteOptionAminoMsg;
                fromProtoMsg(message: _49.WeightedVoteOptionProtoMsg): _49.WeightedVoteOption;
                toProto(message: _49.WeightedVoteOption): Uint8Array;
                toProtoMsg(message: _49.WeightedVoteOption): _49.WeightedVoteOptionProtoMsg;
            };
            TextProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.TextProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.TextProposal;
                fromJSON(object: any): _49.TextProposal;
                toJSON(message: _49.TextProposal): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                }): _49.TextProposal;
                fromSDK(object: _49.TextProposalSDKType): _49.TextProposal;
                toSDK(message: _49.TextProposal): _49.TextProposalSDKType;
                fromAmino(object: _49.TextProposalAmino): _49.TextProposal;
                toAmino(message: _49.TextProposal): _49.TextProposalAmino;
                fromAminoMsg(object: _49.TextProposalAminoMsg): _49.TextProposal;
                toAminoMsg(message: _49.TextProposal): _49.TextProposalAminoMsg;
                fromProtoMsg(message: _49.TextProposalProtoMsg): _49.TextProposal;
                toProto(message: _49.TextProposal): Uint8Array;
                toProtoMsg(message: _49.TextProposal): _49.TextProposalProtoMsg;
            };
            Deposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.Deposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.Deposit;
                fromJSON(object: any): _49.Deposit;
                toJSON(message: _49.Deposit): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _49.Deposit;
                fromSDK(object: _49.DepositSDKType): _49.Deposit;
                toSDK(message: _49.Deposit): _49.DepositSDKType;
                fromAmino(object: _49.DepositAmino): _49.Deposit;
                toAmino(message: _49.Deposit): _49.DepositAmino;
                fromAminoMsg(object: _49.DepositAminoMsg): _49.Deposit;
                toAminoMsg(message: _49.Deposit): _49.DepositAminoMsg;
                fromProtoMsg(message: _49.DepositProtoMsg): _49.Deposit;
                toProto(message: _49.Deposit): Uint8Array;
                toProtoMsg(message: _49.Deposit): _49.DepositProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.Proposal;
                fromJSON(object: any): _49.Proposal;
                toJSON(message: _49.Proposal): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    content?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    status?: _49.ProposalStatus;
                    finalTallyResult?: {
                        yes?: string;
                        abstain?: string;
                        no?: string;
                        noWithVeto?: string;
                    };
                    submitTime?: Date;
                    depositEndTime?: Date;
                    totalDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    votingStartTime?: Date;
                    votingEndTime?: Date;
                    isExpedited?: boolean;
                }): _49.Proposal;
                fromSDK(object: _49.ProposalSDKType): _49.Proposal;
                toSDK(message: _49.Proposal): _49.ProposalSDKType;
                fromAmino(object: _49.ProposalAmino): _49.Proposal;
                toAmino(message: _49.Proposal): _49.ProposalAmino;
                fromAminoMsg(object: _49.ProposalAminoMsg): _49.Proposal;
                toAminoMsg(message: _49.Proposal): _49.ProposalAminoMsg;
                fromProtoMsg(message: _49.ProposalProtoMsg): _49.Proposal;
                toProto(message: _49.Proposal): Uint8Array;
                toProtoMsg(message: _49.Proposal): _49.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.TallyResult;
                fromJSON(object: any): _49.TallyResult;
                toJSON(message: _49.TallyResult): unknown;
                fromPartial(object: {
                    yes?: string;
                    abstain?: string;
                    no?: string;
                    noWithVeto?: string;
                }): _49.TallyResult;
                fromSDK(object: _49.TallyResultSDKType): _49.TallyResult;
                toSDK(message: _49.TallyResult): _49.TallyResultSDKType;
                fromAmino(object: _49.TallyResultAmino): _49.TallyResult;
                toAmino(message: _49.TallyResult): _49.TallyResultAmino;
                fromAminoMsg(object: _49.TallyResultAminoMsg): _49.TallyResult;
                toAminoMsg(message: _49.TallyResult): _49.TallyResultAminoMsg;
                fromProtoMsg(message: _49.TallyResultProtoMsg): _49.TallyResult;
                toProto(message: _49.TallyResult): Uint8Array;
                toProtoMsg(message: _49.TallyResult): _49.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.Vote;
                fromJSON(object: any): _49.Vote;
                toJSON(message: _49.Vote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _49.VoteOption;
                    options?: {
                        option?: _49.VoteOption;
                        weight?: string;
                    }[];
                }): _49.Vote;
                fromSDK(object: _49.VoteSDKType): _49.Vote;
                toSDK(message: _49.Vote): _49.VoteSDKType;
                fromAmino(object: _49.VoteAmino): _49.Vote;
                toAmino(message: _49.Vote): _49.VoteAmino;
                fromAminoMsg(object: _49.VoteAminoMsg): _49.Vote;
                toAminoMsg(message: _49.Vote): _49.VoteAminoMsg;
                fromProtoMsg(message: _49.VoteProtoMsg): _49.Vote;
                toProto(message: _49.Vote): Uint8Array;
                toProtoMsg(message: _49.Vote): _49.VoteProtoMsg;
            };
            DepositParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.DepositParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.DepositParams;
                fromJSON(object: any): _49.DepositParams;
                toJSON(message: _49.DepositParams): unknown;
                fromPartial(object: {
                    minDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    maxDepositPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    minExpeditedDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    minInitialDepositRatio?: string;
                }): _49.DepositParams;
                fromSDK(object: _49.DepositParamsSDKType): _49.DepositParams;
                toSDK(message: _49.DepositParams): _49.DepositParamsSDKType;
                fromAmino(object: _49.DepositParamsAmino): _49.DepositParams;
                toAmino(message: _49.DepositParams): _49.DepositParamsAmino;
                fromAminoMsg(object: _49.DepositParamsAminoMsg): _49.DepositParams;
                toAminoMsg(message: _49.DepositParams): _49.DepositParamsAminoMsg;
                fromProtoMsg(message: _49.DepositParamsProtoMsg): _49.DepositParams;
                toProto(message: _49.DepositParams): Uint8Array;
                toProtoMsg(message: _49.DepositParams): _49.DepositParamsProtoMsg;
            };
            VotingParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.VotingParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.VotingParams;
                fromJSON(object: any): _49.VotingParams;
                toJSON(message: _49.VotingParams): unknown;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    proposalVotingPeriods?: {
                        proposalType?: string;
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    }[];
                    expeditedVotingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _49.VotingParams;
                fromSDK(object: _49.VotingParamsSDKType): _49.VotingParams;
                toSDK(message: _49.VotingParams): _49.VotingParamsSDKType;
                fromAmino(object: _49.VotingParamsAmino): _49.VotingParams;
                toAmino(message: _49.VotingParams): _49.VotingParamsAmino;
                fromAminoMsg(object: _49.VotingParamsAminoMsg): _49.VotingParams;
                toAminoMsg(message: _49.VotingParams): _49.VotingParamsAminoMsg;
                fromProtoMsg(message: _49.VotingParamsProtoMsg): _49.VotingParams;
                toProto(message: _49.VotingParams): Uint8Array;
                toProtoMsg(message: _49.VotingParams): _49.VotingParamsProtoMsg;
            };
            TallyParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.TallyParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.TallyParams;
                fromJSON(object: any): _49.TallyParams;
                toJSON(message: _49.TallyParams): unknown;
                fromPartial(object: {
                    quorum?: Uint8Array;
                    threshold?: Uint8Array;
                    vetoThreshold?: Uint8Array;
                    expeditedThreshold?: Uint8Array;
                    expeditedQuorum?: Uint8Array;
                }): _49.TallyParams;
                fromSDK(object: _49.TallyParamsSDKType): _49.TallyParams;
                toSDK(message: _49.TallyParams): _49.TallyParamsSDKType;
                fromAmino(object: _49.TallyParamsAmino): _49.TallyParams;
                toAmino(message: _49.TallyParams): _49.TallyParamsAmino;
                fromAminoMsg(object: _49.TallyParamsAminoMsg): _49.TallyParams;
                toAminoMsg(message: _49.TallyParams): _49.TallyParamsAminoMsg;
                fromProtoMsg(message: _49.TallyParamsProtoMsg): _49.TallyParams;
                toProto(message: _49.TallyParams): Uint8Array;
                toProtoMsg(message: _49.TallyParams): _49.TallyParamsProtoMsg;
            };
            ProposalVotingPeriod: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.ProposalVotingPeriod, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.ProposalVotingPeriod;
                fromJSON(object: any): _49.ProposalVotingPeriod;
                toJSON(message: _49.ProposalVotingPeriod): unknown;
                fromPartial(object: {
                    proposalType?: string;
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _49.ProposalVotingPeriod;
                fromSDK(object: _49.ProposalVotingPeriodSDKType): _49.ProposalVotingPeriod;
                toSDK(message: _49.ProposalVotingPeriod): _49.ProposalVotingPeriodSDKType;
                fromAmino(object: _49.ProposalVotingPeriodAmino): _49.ProposalVotingPeriod;
                toAmino(message: _49.ProposalVotingPeriod): _49.ProposalVotingPeriodAmino;
                fromAminoMsg(object: _49.ProposalVotingPeriodAminoMsg): _49.ProposalVotingPeriod;
                toAminoMsg(message: _49.ProposalVotingPeriod): _49.ProposalVotingPeriodAminoMsg;
                fromProtoMsg(message: _49.ProposalVotingPeriodProtoMsg): _49.ProposalVotingPeriod;
                toProto(message: _49.ProposalVotingPeriod): Uint8Array;
                toProtoMsg(message: _49.ProposalVotingPeriod): _49.ProposalVotingPeriodProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _48.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _48.GenesisState;
                fromJSON(object: any): _48.GenesisState;
                toJSON(message: _48.GenesisState): unknown;
                fromPartial(object: {
                    startingProposalId?: bigint;
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _49.VoteOption;
                        options?: {
                            option?: _49.VoteOption;
                            weight?: string;
                        }[];
                    }[];
                    proposals?: {
                        proposalId?: bigint;
                        content?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        status?: _49.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        isExpedited?: boolean;
                    }[];
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExpeditedDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        minInitialDepositRatio?: string;
                    };
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        proposalVotingPeriods?: {
                            proposalType?: string;
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                        expeditedVotingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: Uint8Array;
                        threshold?: Uint8Array;
                        vetoThreshold?: Uint8Array;
                        expeditedThreshold?: Uint8Array;
                        expeditedQuorum?: Uint8Array;
                    };
                }): _48.GenesisState;
                fromSDK(object: _48.GenesisStateSDKType): _48.GenesisState;
                toSDK(message: _48.GenesisState): _48.GenesisStateSDKType;
                fromAmino(object: _48.GenesisStateAmino): _48.GenesisState;
                toAmino(message: _48.GenesisState): _48.GenesisStateAmino;
                fromAminoMsg(object: _48.GenesisStateAminoMsg): _48.GenesisState;
                toAminoMsg(message: _48.GenesisState): _48.GenesisStateAminoMsg;
                fromProtoMsg(message: _48.GenesisStateProtoMsg): _48.GenesisState;
                toProto(message: _48.GenesisState): Uint8Array;
                toProtoMsg(message: _48.GenesisState): _48.GenesisStateProtoMsg;
            };
        };
        const v1: {
            MsgClientImpl: typeof _222.MsgClientImpl;
            QueryClientImpl: typeof _209.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                proposal(request: _54.QueryProposalRequest): Promise<_54.QueryProposalResponse>;
                proposals(request: _54.QueryProposalsRequest): Promise<_54.QueryProposalsResponse>;
                vote(request: _54.QueryVoteRequest): Promise<_54.QueryVoteResponse>;
                votes(request: _54.QueryVotesRequest): Promise<_54.QueryVotesResponse>;
                params(request: _54.QueryParamsRequest): Promise<_54.QueryParamsResponse>;
                deposit(request: _54.QueryDepositRequest): Promise<_54.QueryDepositResponse>;
                deposits(request: _54.QueryDepositsRequest): Promise<_54.QueryDepositsResponse>;
                tallyResult(request: _54.QueryTallyResultRequest): Promise<_54.QueryTallyResultResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useProposal: <TData = _54.QueryProposalResponse>({ request, options }: _209.UseProposalQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useProposals: <TData_1 = _54.QueryProposalsResponse>({ request, options }: _209.UseProposalsQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useVote: <TData_2 = _54.QueryVoteResponse>({ request, options }: _209.UseVoteQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useVotes: <TData_3 = _54.QueryVotesResponse>({ request, options }: _209.UseVotesQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useParams: <TData_4 = _54.QueryParamsResponse>({ request, options }: _209.UseParamsQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useDeposit: <TData_5 = _54.QueryDepositResponse>({ request, options }: _209.UseDepositQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useDeposits: <TData_6 = _54.QueryDepositsResponse>({ request, options }: _209.UseDepositsQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useTallyResult: <TData_7 = _54.QueryTallyResultResponse>({ request, options }: _209.UseTallyResultQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    submitProposal(value: _55.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    execLegacyContent(value: _55.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _55.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    voteWeighted(value: _55.MsgVoteWeighted): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    deposit(value: _55.MsgDeposit): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    submitProposal(value: _55.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _55.MsgSubmitProposal;
                    };
                    execLegacyContent(value: _55.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: _55.MsgExecLegacyContent;
                    };
                    vote(value: _55.MsgVote): {
                        typeUrl: string;
                        value: _55.MsgVote;
                    };
                    voteWeighted(value: _55.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _55.MsgVoteWeighted;
                    };
                    deposit(value: _55.MsgDeposit): {
                        typeUrl: string;
                        value: _55.MsgDeposit;
                    };
                };
                toJSON: {
                    submitProposal(value: _55.MsgSubmitProposal): {
                        typeUrl: string;
                        value: unknown;
                    };
                    execLegacyContent(value: _55.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: unknown;
                    };
                    vote(value: _55.MsgVote): {
                        typeUrl: string;
                        value: unknown;
                    };
                    voteWeighted(value: _55.MsgVoteWeighted): {
                        typeUrl: string;
                        value: unknown;
                    };
                    deposit(value: _55.MsgDeposit): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    submitProposal(value: any): {
                        typeUrl: string;
                        value: _55.MsgSubmitProposal;
                    };
                    execLegacyContent(value: any): {
                        typeUrl: string;
                        value: _55.MsgExecLegacyContent;
                    };
                    vote(value: any): {
                        typeUrl: string;
                        value: _55.MsgVote;
                    };
                    voteWeighted(value: any): {
                        typeUrl: string;
                        value: _55.MsgVoteWeighted;
                    };
                    deposit(value: any): {
                        typeUrl: string;
                        value: _55.MsgDeposit;
                    };
                };
                fromPartial: {
                    submitProposal(value: _55.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _55.MsgSubmitProposal;
                    };
                    execLegacyContent(value: _55.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: _55.MsgExecLegacyContent;
                    };
                    vote(value: _55.MsgVote): {
                        typeUrl: string;
                        value: _55.MsgVote;
                    };
                    voteWeighted(value: _55.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _55.MsgVoteWeighted;
                    };
                    deposit(value: _55.MsgDeposit): {
                        typeUrl: string;
                        value: _55.MsgDeposit;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.gov.v1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _55.MsgSubmitProposal) => _55.MsgSubmitProposalAmino;
                    fromAmino: (object: _55.MsgSubmitProposalAmino) => _55.MsgSubmitProposal;
                };
                "/cosmos.gov.v1.MsgExecLegacyContent": {
                    aminoType: string;
                    toAmino: (message: _55.MsgExecLegacyContent) => _55.MsgExecLegacyContentAmino;
                    fromAmino: (object: _55.MsgExecLegacyContentAmino) => _55.MsgExecLegacyContent;
                };
                "/cosmos.gov.v1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _55.MsgVote) => _55.MsgVoteAmino;
                    fromAmino: (object: _55.MsgVoteAmino) => _55.MsgVote;
                };
                "/cosmos.gov.v1.MsgVoteWeighted": {
                    aminoType: string;
                    toAmino: (message: _55.MsgVoteWeighted) => _55.MsgVoteWeightedAmino;
                    fromAmino: (object: _55.MsgVoteWeightedAmino) => _55.MsgVoteWeighted;
                };
                "/cosmos.gov.v1.MsgDeposit": {
                    aminoType: string;
                    toAmino: (message: _55.MsgDeposit) => _55.MsgDepositAmino;
                    fromAmino: (object: _55.MsgDepositAmino) => _55.MsgDeposit;
                };
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgSubmitProposal;
                fromJSON(object: any): _55.MsgSubmitProposal;
                toJSON(message: _55.MsgSubmitProposal): unknown;
                fromPartial(object: {
                    messages?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    initialDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    proposer?: string;
                    metadata?: string;
                }): _55.MsgSubmitProposal;
                fromSDK(object: _55.MsgSubmitProposalSDKType): _55.MsgSubmitProposal;
                toSDK(message: _55.MsgSubmitProposal): _55.MsgSubmitProposalSDKType;
                fromAmino(object: _55.MsgSubmitProposalAmino): _55.MsgSubmitProposal;
                toAmino(message: _55.MsgSubmitProposal): _55.MsgSubmitProposalAmino;
                fromAminoMsg(object: _55.MsgSubmitProposalAminoMsg): _55.MsgSubmitProposal;
                toAminoMsg(message: _55.MsgSubmitProposal): _55.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _55.MsgSubmitProposalProtoMsg): _55.MsgSubmitProposal;
                toProto(message: _55.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _55.MsgSubmitProposal): _55.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgSubmitProposalResponse;
                fromJSON(object: any): _55.MsgSubmitProposalResponse;
                toJSON(message: _55.MsgSubmitProposalResponse): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _55.MsgSubmitProposalResponse;
                fromSDK(object: _55.MsgSubmitProposalResponseSDKType): _55.MsgSubmitProposalResponse;
                toSDK(message: _55.MsgSubmitProposalResponse): _55.MsgSubmitProposalResponseSDKType;
                fromAmino(object: _55.MsgSubmitProposalResponseAmino): _55.MsgSubmitProposalResponse;
                toAmino(message: _55.MsgSubmitProposalResponse): _55.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _55.MsgSubmitProposalResponseAminoMsg): _55.MsgSubmitProposalResponse;
                toAminoMsg(message: _55.MsgSubmitProposalResponse): _55.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _55.MsgSubmitProposalResponseProtoMsg): _55.MsgSubmitProposalResponse;
                toProto(message: _55.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _55.MsgSubmitProposalResponse): _55.MsgSubmitProposalResponseProtoMsg;
            };
            MsgExecLegacyContent: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgExecLegacyContent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgExecLegacyContent;
                fromJSON(object: any): _55.MsgExecLegacyContent;
                toJSON(message: _55.MsgExecLegacyContent): unknown;
                fromPartial(object: {
                    content?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    authority?: string;
                }): _55.MsgExecLegacyContent;
                fromSDK(object: _55.MsgExecLegacyContentSDKType): _55.MsgExecLegacyContent;
                toSDK(message: _55.MsgExecLegacyContent): _55.MsgExecLegacyContentSDKType;
                fromAmino(object: _55.MsgExecLegacyContentAmino): _55.MsgExecLegacyContent;
                toAmino(message: _55.MsgExecLegacyContent): _55.MsgExecLegacyContentAmino;
                fromAminoMsg(object: _55.MsgExecLegacyContentAminoMsg): _55.MsgExecLegacyContent;
                toAminoMsg(message: _55.MsgExecLegacyContent): _55.MsgExecLegacyContentAminoMsg;
                fromProtoMsg(message: _55.MsgExecLegacyContentProtoMsg): _55.MsgExecLegacyContent;
                toProto(message: _55.MsgExecLegacyContent): Uint8Array;
                toProtoMsg(message: _55.MsgExecLegacyContent): _55.MsgExecLegacyContentProtoMsg;
            };
            MsgExecLegacyContentResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _55.MsgExecLegacyContentResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgExecLegacyContentResponse;
                fromJSON(_: any): _55.MsgExecLegacyContentResponse;
                toJSON(_: _55.MsgExecLegacyContentResponse): unknown;
                fromPartial(_: {}): _55.MsgExecLegacyContentResponse;
                fromSDK(_: _55.MsgExecLegacyContentResponseSDKType): _55.MsgExecLegacyContentResponse;
                toSDK(_: _55.MsgExecLegacyContentResponse): _55.MsgExecLegacyContentResponseSDKType;
                fromAmino(_: _55.MsgExecLegacyContentResponseAmino): _55.MsgExecLegacyContentResponse;
                toAmino(_: _55.MsgExecLegacyContentResponse): _55.MsgExecLegacyContentResponseAmino;
                fromAminoMsg(object: _55.MsgExecLegacyContentResponseAminoMsg): _55.MsgExecLegacyContentResponse;
                toAminoMsg(message: _55.MsgExecLegacyContentResponse): _55.MsgExecLegacyContentResponseAminoMsg;
                fromProtoMsg(message: _55.MsgExecLegacyContentResponseProtoMsg): _55.MsgExecLegacyContentResponse;
                toProto(message: _55.MsgExecLegacyContentResponse): Uint8Array;
                toProtoMsg(message: _55.MsgExecLegacyContentResponse): _55.MsgExecLegacyContentResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgVote;
                fromJSON(object: any): _55.MsgVote;
                toJSON(message: _55.MsgVote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _53.VoteOption;
                    metadata?: string;
                }): _55.MsgVote;
                fromSDK(object: _55.MsgVoteSDKType): _55.MsgVote;
                toSDK(message: _55.MsgVote): _55.MsgVoteSDKType;
                fromAmino(object: _55.MsgVoteAmino): _55.MsgVote;
                toAmino(message: _55.MsgVote): _55.MsgVoteAmino;
                fromAminoMsg(object: _55.MsgVoteAminoMsg): _55.MsgVote;
                toAminoMsg(message: _55.MsgVote): _55.MsgVoteAminoMsg;
                fromProtoMsg(message: _55.MsgVoteProtoMsg): _55.MsgVote;
                toProto(message: _55.MsgVote): Uint8Array;
                toProtoMsg(message: _55.MsgVote): _55.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _55.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgVoteResponse;
                fromJSON(_: any): _55.MsgVoteResponse;
                toJSON(_: _55.MsgVoteResponse): unknown;
                fromPartial(_: {}): _55.MsgVoteResponse;
                fromSDK(_: _55.MsgVoteResponseSDKType): _55.MsgVoteResponse;
                toSDK(_: _55.MsgVoteResponse): _55.MsgVoteResponseSDKType;
                fromAmino(_: _55.MsgVoteResponseAmino): _55.MsgVoteResponse;
                toAmino(_: _55.MsgVoteResponse): _55.MsgVoteResponseAmino;
                fromAminoMsg(object: _55.MsgVoteResponseAminoMsg): _55.MsgVoteResponse;
                toAminoMsg(message: _55.MsgVoteResponse): _55.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _55.MsgVoteResponseProtoMsg): _55.MsgVoteResponse;
                toProto(message: _55.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _55.MsgVoteResponse): _55.MsgVoteResponseProtoMsg;
            };
            MsgVoteWeighted: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgVoteWeighted, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgVoteWeighted;
                fromJSON(object: any): _55.MsgVoteWeighted;
                toJSON(message: _55.MsgVoteWeighted): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _53.VoteOption;
                        weight?: string;
                    }[];
                    metadata?: string;
                }): _55.MsgVoteWeighted;
                fromSDK(object: _55.MsgVoteWeightedSDKType): _55.MsgVoteWeighted;
                toSDK(message: _55.MsgVoteWeighted): _55.MsgVoteWeightedSDKType;
                fromAmino(object: _55.MsgVoteWeightedAmino): _55.MsgVoteWeighted;
                toAmino(message: _55.MsgVoteWeighted): _55.MsgVoteWeightedAmino;
                fromAminoMsg(object: _55.MsgVoteWeightedAminoMsg): _55.MsgVoteWeighted;
                toAminoMsg(message: _55.MsgVoteWeighted): _55.MsgVoteWeightedAminoMsg;
                fromProtoMsg(message: _55.MsgVoteWeightedProtoMsg): _55.MsgVoteWeighted;
                toProto(message: _55.MsgVoteWeighted): Uint8Array;
                toProtoMsg(message: _55.MsgVoteWeighted): _55.MsgVoteWeightedProtoMsg;
            };
            MsgVoteWeightedResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _55.MsgVoteWeightedResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgVoteWeightedResponse;
                fromJSON(_: any): _55.MsgVoteWeightedResponse;
                toJSON(_: _55.MsgVoteWeightedResponse): unknown;
                fromPartial(_: {}): _55.MsgVoteWeightedResponse;
                fromSDK(_: _55.MsgVoteWeightedResponseSDKType): _55.MsgVoteWeightedResponse;
                toSDK(_: _55.MsgVoteWeightedResponse): _55.MsgVoteWeightedResponseSDKType;
                fromAmino(_: _55.MsgVoteWeightedResponseAmino): _55.MsgVoteWeightedResponse;
                toAmino(_: _55.MsgVoteWeightedResponse): _55.MsgVoteWeightedResponseAmino;
                fromAminoMsg(object: _55.MsgVoteWeightedResponseAminoMsg): _55.MsgVoteWeightedResponse;
                toAminoMsg(message: _55.MsgVoteWeightedResponse): _55.MsgVoteWeightedResponseAminoMsg;
                fromProtoMsg(message: _55.MsgVoteWeightedResponseProtoMsg): _55.MsgVoteWeightedResponse;
                toProto(message: _55.MsgVoteWeightedResponse): Uint8Array;
                toProtoMsg(message: _55.MsgVoteWeightedResponse): _55.MsgVoteWeightedResponseProtoMsg;
            };
            MsgDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.MsgDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgDeposit;
                fromJSON(object: any): _55.MsgDeposit;
                toJSON(message: _55.MsgDeposit): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _55.MsgDeposit;
                fromSDK(object: _55.MsgDepositSDKType): _55.MsgDeposit;
                toSDK(message: _55.MsgDeposit): _55.MsgDepositSDKType;
                fromAmino(object: _55.MsgDepositAmino): _55.MsgDeposit;
                toAmino(message: _55.MsgDeposit): _55.MsgDepositAmino;
                fromAminoMsg(object: _55.MsgDepositAminoMsg): _55.MsgDeposit;
                toAminoMsg(message: _55.MsgDeposit): _55.MsgDepositAminoMsg;
                fromProtoMsg(message: _55.MsgDepositProtoMsg): _55.MsgDeposit;
                toProto(message: _55.MsgDeposit): Uint8Array;
                toProtoMsg(message: _55.MsgDeposit): _55.MsgDepositProtoMsg;
            };
            MsgDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _55.MsgDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.MsgDepositResponse;
                fromJSON(_: any): _55.MsgDepositResponse;
                toJSON(_: _55.MsgDepositResponse): unknown;
                fromPartial(_: {}): _55.MsgDepositResponse;
                fromSDK(_: _55.MsgDepositResponseSDKType): _55.MsgDepositResponse;
                toSDK(_: _55.MsgDepositResponse): _55.MsgDepositResponseSDKType;
                fromAmino(_: _55.MsgDepositResponseAmino): _55.MsgDepositResponse;
                toAmino(_: _55.MsgDepositResponse): _55.MsgDepositResponseAmino;
                fromAminoMsg(object: _55.MsgDepositResponseAminoMsg): _55.MsgDepositResponse;
                toAminoMsg(message: _55.MsgDepositResponse): _55.MsgDepositResponseAminoMsg;
                fromProtoMsg(message: _55.MsgDepositResponseProtoMsg): _55.MsgDepositResponse;
                toProto(message: _55.MsgDepositResponse): Uint8Array;
                toProtoMsg(message: _55.MsgDepositResponse): _55.MsgDepositResponseProtoMsg;
            };
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryProposalRequest;
                fromJSON(object: any): _54.QueryProposalRequest;
                toJSON(message: _54.QueryProposalRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _54.QueryProposalRequest;
                fromSDK(object: _54.QueryProposalRequestSDKType): _54.QueryProposalRequest;
                toSDK(message: _54.QueryProposalRequest): _54.QueryProposalRequestSDKType;
                fromAmino(object: _54.QueryProposalRequestAmino): _54.QueryProposalRequest;
                toAmino(message: _54.QueryProposalRequest): _54.QueryProposalRequestAmino;
                fromAminoMsg(object: _54.QueryProposalRequestAminoMsg): _54.QueryProposalRequest;
                toAminoMsg(message: _54.QueryProposalRequest): _54.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _54.QueryProposalRequestProtoMsg): _54.QueryProposalRequest;
                toProto(message: _54.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _54.QueryProposalRequest): _54.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryProposalResponse;
                fromJSON(object: any): _54.QueryProposalResponse;
                toJSON(message: _54.QueryProposalResponse): unknown;
                fromPartial(object: {
                    proposal?: {
                        id?: bigint;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _53.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                    };
                }): _54.QueryProposalResponse;
                fromSDK(object: _54.QueryProposalResponseSDKType): _54.QueryProposalResponse;
                toSDK(message: _54.QueryProposalResponse): _54.QueryProposalResponseSDKType;
                fromAmino(object: _54.QueryProposalResponseAmino): _54.QueryProposalResponse;
                toAmino(message: _54.QueryProposalResponse): _54.QueryProposalResponseAmino;
                fromAminoMsg(object: _54.QueryProposalResponseAminoMsg): _54.QueryProposalResponse;
                toAminoMsg(message: _54.QueryProposalResponse): _54.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _54.QueryProposalResponseProtoMsg): _54.QueryProposalResponse;
                toProto(message: _54.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _54.QueryProposalResponse): _54.QueryProposalResponseProtoMsg;
            };
            QueryProposalsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryProposalsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryProposalsRequest;
                fromJSON(object: any): _54.QueryProposalsRequest;
                toJSON(message: _54.QueryProposalsRequest): unknown;
                fromPartial(object: {
                    proposalStatus?: _53.ProposalStatus;
                    voter?: string;
                    depositor?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _54.QueryProposalsRequest;
                fromSDK(object: _54.QueryProposalsRequestSDKType): _54.QueryProposalsRequest;
                toSDK(message: _54.QueryProposalsRequest): _54.QueryProposalsRequestSDKType;
                fromAmino(object: _54.QueryProposalsRequestAmino): _54.QueryProposalsRequest;
                toAmino(message: _54.QueryProposalsRequest): _54.QueryProposalsRequestAmino;
                fromAminoMsg(object: _54.QueryProposalsRequestAminoMsg): _54.QueryProposalsRequest;
                toAminoMsg(message: _54.QueryProposalsRequest): _54.QueryProposalsRequestAminoMsg;
                fromProtoMsg(message: _54.QueryProposalsRequestProtoMsg): _54.QueryProposalsRequest;
                toProto(message: _54.QueryProposalsRequest): Uint8Array;
                toProtoMsg(message: _54.QueryProposalsRequest): _54.QueryProposalsRequestProtoMsg;
            };
            QueryProposalsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryProposalsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryProposalsResponse;
                fromJSON(object: any): _54.QueryProposalsResponse;
                toJSON(message: _54.QueryProposalsResponse): unknown;
                fromPartial(object: {
                    proposals?: {
                        id?: bigint;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _53.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _54.QueryProposalsResponse;
                fromSDK(object: _54.QueryProposalsResponseSDKType): _54.QueryProposalsResponse;
                toSDK(message: _54.QueryProposalsResponse): _54.QueryProposalsResponseSDKType;
                fromAmino(object: _54.QueryProposalsResponseAmino): _54.QueryProposalsResponse;
                toAmino(message: _54.QueryProposalsResponse): _54.QueryProposalsResponseAmino;
                fromAminoMsg(object: _54.QueryProposalsResponseAminoMsg): _54.QueryProposalsResponse;
                toAminoMsg(message: _54.QueryProposalsResponse): _54.QueryProposalsResponseAminoMsg;
                fromProtoMsg(message: _54.QueryProposalsResponseProtoMsg): _54.QueryProposalsResponse;
                toProto(message: _54.QueryProposalsResponse): Uint8Array;
                toProtoMsg(message: _54.QueryProposalsResponse): _54.QueryProposalsResponseProtoMsg;
            };
            QueryVoteRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryVoteRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryVoteRequest;
                fromJSON(object: any): _54.QueryVoteRequest;
                toJSON(message: _54.QueryVoteRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _54.QueryVoteRequest;
                fromSDK(object: _54.QueryVoteRequestSDKType): _54.QueryVoteRequest;
                toSDK(message: _54.QueryVoteRequest): _54.QueryVoteRequestSDKType;
                fromAmino(object: _54.QueryVoteRequestAmino): _54.QueryVoteRequest;
                toAmino(message: _54.QueryVoteRequest): _54.QueryVoteRequestAmino;
                fromAminoMsg(object: _54.QueryVoteRequestAminoMsg): _54.QueryVoteRequest;
                toAminoMsg(message: _54.QueryVoteRequest): _54.QueryVoteRequestAminoMsg;
                fromProtoMsg(message: _54.QueryVoteRequestProtoMsg): _54.QueryVoteRequest;
                toProto(message: _54.QueryVoteRequest): Uint8Array;
                toProtoMsg(message: _54.QueryVoteRequest): _54.QueryVoteRequestProtoMsg;
            };
            QueryVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryVoteResponse;
                fromJSON(object: any): _54.QueryVoteResponse;
                toJSON(message: _54.QueryVoteResponse): unknown;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _53.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    };
                }): _54.QueryVoteResponse;
                fromSDK(object: _54.QueryVoteResponseSDKType): _54.QueryVoteResponse;
                toSDK(message: _54.QueryVoteResponse): _54.QueryVoteResponseSDKType;
                fromAmino(object: _54.QueryVoteResponseAmino): _54.QueryVoteResponse;
                toAmino(message: _54.QueryVoteResponse): _54.QueryVoteResponseAmino;
                fromAminoMsg(object: _54.QueryVoteResponseAminoMsg): _54.QueryVoteResponse;
                toAminoMsg(message: _54.QueryVoteResponse): _54.QueryVoteResponseAminoMsg;
                fromProtoMsg(message: _54.QueryVoteResponseProtoMsg): _54.QueryVoteResponse;
                toProto(message: _54.QueryVoteResponse): Uint8Array;
                toProtoMsg(message: _54.QueryVoteResponse): _54.QueryVoteResponseProtoMsg;
            };
            QueryVotesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryVotesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryVotesRequest;
                fromJSON(object: any): _54.QueryVotesRequest;
                toJSON(message: _54.QueryVotesRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _54.QueryVotesRequest;
                fromSDK(object: _54.QueryVotesRequestSDKType): _54.QueryVotesRequest;
                toSDK(message: _54.QueryVotesRequest): _54.QueryVotesRequestSDKType;
                fromAmino(object: _54.QueryVotesRequestAmino): _54.QueryVotesRequest;
                toAmino(message: _54.QueryVotesRequest): _54.QueryVotesRequestAmino;
                fromAminoMsg(object: _54.QueryVotesRequestAminoMsg): _54.QueryVotesRequest;
                toAminoMsg(message: _54.QueryVotesRequest): _54.QueryVotesRequestAminoMsg;
                fromProtoMsg(message: _54.QueryVotesRequestProtoMsg): _54.QueryVotesRequest;
                toProto(message: _54.QueryVotesRequest): Uint8Array;
                toProtoMsg(message: _54.QueryVotesRequest): _54.QueryVotesRequestProtoMsg;
            };
            QueryVotesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryVotesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryVotesResponse;
                fromJSON(object: any): _54.QueryVotesResponse;
                toJSON(message: _54.QueryVotesResponse): unknown;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _53.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _54.QueryVotesResponse;
                fromSDK(object: _54.QueryVotesResponseSDKType): _54.QueryVotesResponse;
                toSDK(message: _54.QueryVotesResponse): _54.QueryVotesResponseSDKType;
                fromAmino(object: _54.QueryVotesResponseAmino): _54.QueryVotesResponse;
                toAmino(message: _54.QueryVotesResponse): _54.QueryVotesResponseAmino;
                fromAminoMsg(object: _54.QueryVotesResponseAminoMsg): _54.QueryVotesResponse;
                toAminoMsg(message: _54.QueryVotesResponse): _54.QueryVotesResponseAminoMsg;
                fromProtoMsg(message: _54.QueryVotesResponseProtoMsg): _54.QueryVotesResponse;
                toProto(message: _54.QueryVotesResponse): Uint8Array;
                toProtoMsg(message: _54.QueryVotesResponse): _54.QueryVotesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryParamsRequest;
                fromJSON(object: any): _54.QueryParamsRequest;
                toJSON(message: _54.QueryParamsRequest): unknown;
                fromPartial(object: {
                    paramsType?: string;
                }): _54.QueryParamsRequest;
                fromSDK(object: _54.QueryParamsRequestSDKType): _54.QueryParamsRequest;
                toSDK(message: _54.QueryParamsRequest): _54.QueryParamsRequestSDKType;
                fromAmino(object: _54.QueryParamsRequestAmino): _54.QueryParamsRequest;
                toAmino(message: _54.QueryParamsRequest): _54.QueryParamsRequestAmino;
                fromAminoMsg(object: _54.QueryParamsRequestAminoMsg): _54.QueryParamsRequest;
                toAminoMsg(message: _54.QueryParamsRequest): _54.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _54.QueryParamsRequestProtoMsg): _54.QueryParamsRequest;
                toProto(message: _54.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _54.QueryParamsRequest): _54.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryParamsResponse;
                fromJSON(object: any): _54.QueryParamsResponse;
                toJSON(message: _54.QueryParamsResponse): unknown;
                fromPartial(object: {
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                    };
                }): _54.QueryParamsResponse;
                fromSDK(object: _54.QueryParamsResponseSDKType): _54.QueryParamsResponse;
                toSDK(message: _54.QueryParamsResponse): _54.QueryParamsResponseSDKType;
                fromAmino(object: _54.QueryParamsResponseAmino): _54.QueryParamsResponse;
                toAmino(message: _54.QueryParamsResponse): _54.QueryParamsResponseAmino;
                fromAminoMsg(object: _54.QueryParamsResponseAminoMsg): _54.QueryParamsResponse;
                toAminoMsg(message: _54.QueryParamsResponse): _54.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _54.QueryParamsResponseProtoMsg): _54.QueryParamsResponse;
                toProto(message: _54.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _54.QueryParamsResponse): _54.QueryParamsResponseProtoMsg;
            };
            QueryDepositRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryDepositRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryDepositRequest;
                fromJSON(object: any): _54.QueryDepositRequest;
                toJSON(message: _54.QueryDepositRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                }): _54.QueryDepositRequest;
                fromSDK(object: _54.QueryDepositRequestSDKType): _54.QueryDepositRequest;
                toSDK(message: _54.QueryDepositRequest): _54.QueryDepositRequestSDKType;
                fromAmino(object: _54.QueryDepositRequestAmino): _54.QueryDepositRequest;
                toAmino(message: _54.QueryDepositRequest): _54.QueryDepositRequestAmino;
                fromAminoMsg(object: _54.QueryDepositRequestAminoMsg): _54.QueryDepositRequest;
                toAminoMsg(message: _54.QueryDepositRequest): _54.QueryDepositRequestAminoMsg;
                fromProtoMsg(message: _54.QueryDepositRequestProtoMsg): _54.QueryDepositRequest;
                toProto(message: _54.QueryDepositRequest): Uint8Array;
                toProtoMsg(message: _54.QueryDepositRequest): _54.QueryDepositRequestProtoMsg;
            };
            QueryDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryDepositResponse;
                fromJSON(object: any): _54.QueryDepositResponse;
                toJSON(message: _54.QueryDepositResponse): unknown;
                fromPartial(object: {
                    deposit?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _54.QueryDepositResponse;
                fromSDK(object: _54.QueryDepositResponseSDKType): _54.QueryDepositResponse;
                toSDK(message: _54.QueryDepositResponse): _54.QueryDepositResponseSDKType;
                fromAmino(object: _54.QueryDepositResponseAmino): _54.QueryDepositResponse;
                toAmino(message: _54.QueryDepositResponse): _54.QueryDepositResponseAmino;
                fromAminoMsg(object: _54.QueryDepositResponseAminoMsg): _54.QueryDepositResponse;
                toAminoMsg(message: _54.QueryDepositResponse): _54.QueryDepositResponseAminoMsg;
                fromProtoMsg(message: _54.QueryDepositResponseProtoMsg): _54.QueryDepositResponse;
                toProto(message: _54.QueryDepositResponse): Uint8Array;
                toProtoMsg(message: _54.QueryDepositResponse): _54.QueryDepositResponseProtoMsg;
            };
            QueryDepositsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryDepositsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryDepositsRequest;
                fromJSON(object: any): _54.QueryDepositsRequest;
                toJSON(message: _54.QueryDepositsRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _54.QueryDepositsRequest;
                fromSDK(object: _54.QueryDepositsRequestSDKType): _54.QueryDepositsRequest;
                toSDK(message: _54.QueryDepositsRequest): _54.QueryDepositsRequestSDKType;
                fromAmino(object: _54.QueryDepositsRequestAmino): _54.QueryDepositsRequest;
                toAmino(message: _54.QueryDepositsRequest): _54.QueryDepositsRequestAmino;
                fromAminoMsg(object: _54.QueryDepositsRequestAminoMsg): _54.QueryDepositsRequest;
                toAminoMsg(message: _54.QueryDepositsRequest): _54.QueryDepositsRequestAminoMsg;
                fromProtoMsg(message: _54.QueryDepositsRequestProtoMsg): _54.QueryDepositsRequest;
                toProto(message: _54.QueryDepositsRequest): Uint8Array;
                toProtoMsg(message: _54.QueryDepositsRequest): _54.QueryDepositsRequestProtoMsg;
            };
            QueryDepositsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryDepositsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryDepositsResponse;
                fromJSON(object: any): _54.QueryDepositsResponse;
                toJSON(message: _54.QueryDepositsResponse): unknown;
                fromPartial(object: {
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _54.QueryDepositsResponse;
                fromSDK(object: _54.QueryDepositsResponseSDKType): _54.QueryDepositsResponse;
                toSDK(message: _54.QueryDepositsResponse): _54.QueryDepositsResponseSDKType;
                fromAmino(object: _54.QueryDepositsResponseAmino): _54.QueryDepositsResponse;
                toAmino(message: _54.QueryDepositsResponse): _54.QueryDepositsResponseAmino;
                fromAminoMsg(object: _54.QueryDepositsResponseAminoMsg): _54.QueryDepositsResponse;
                toAminoMsg(message: _54.QueryDepositsResponse): _54.QueryDepositsResponseAminoMsg;
                fromProtoMsg(message: _54.QueryDepositsResponseProtoMsg): _54.QueryDepositsResponse;
                toProto(message: _54.QueryDepositsResponse): Uint8Array;
                toProtoMsg(message: _54.QueryDepositsResponse): _54.QueryDepositsResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryTallyResultRequest;
                fromJSON(object: any): _54.QueryTallyResultRequest;
                toJSON(message: _54.QueryTallyResultRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _54.QueryTallyResultRequest;
                fromSDK(object: _54.QueryTallyResultRequestSDKType): _54.QueryTallyResultRequest;
                toSDK(message: _54.QueryTallyResultRequest): _54.QueryTallyResultRequestSDKType;
                fromAmino(object: _54.QueryTallyResultRequestAmino): _54.QueryTallyResultRequest;
                toAmino(message: _54.QueryTallyResultRequest): _54.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _54.QueryTallyResultRequestAminoMsg): _54.QueryTallyResultRequest;
                toAminoMsg(message: _54.QueryTallyResultRequest): _54.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _54.QueryTallyResultRequestProtoMsg): _54.QueryTallyResultRequest;
                toProto(message: _54.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _54.QueryTallyResultRequest): _54.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.QueryTallyResultResponse;
                fromJSON(object: any): _54.QueryTallyResultResponse;
                toJSON(message: _54.QueryTallyResultResponse): unknown;
                fromPartial(object: {
                    tally?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                }): _54.QueryTallyResultResponse;
                fromSDK(object: _54.QueryTallyResultResponseSDKType): _54.QueryTallyResultResponse;
                toSDK(message: _54.QueryTallyResultResponse): _54.QueryTallyResultResponseSDKType;
                fromAmino(object: _54.QueryTallyResultResponseAmino): _54.QueryTallyResultResponse;
                toAmino(message: _54.QueryTallyResultResponse): _54.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _54.QueryTallyResultResponseAminoMsg): _54.QueryTallyResultResponse;
                toAminoMsg(message: _54.QueryTallyResultResponse): _54.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _54.QueryTallyResultResponseProtoMsg): _54.QueryTallyResultResponse;
                toProto(message: _54.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _54.QueryTallyResultResponse): _54.QueryTallyResultResponseProtoMsg;
            };
            voteOptionFromJSON(object: any): _53.VoteOption;
            voteOptionToJSON(object: _53.VoteOption): string;
            proposalStatusFromJSON(object: any): _53.ProposalStatus;
            proposalStatusToJSON(object: _53.ProposalStatus): string;
            VoteOption: typeof _53.VoteOption;
            VoteOptionSDKType: typeof _53.VoteOption;
            VoteOptionAmino: typeof _53.VoteOption;
            ProposalStatus: typeof _53.ProposalStatus;
            ProposalStatusSDKType: typeof _53.ProposalStatus;
            ProposalStatusAmino: typeof _53.ProposalStatus;
            WeightedVoteOption: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.WeightedVoteOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.WeightedVoteOption;
                fromJSON(object: any): _53.WeightedVoteOption;
                toJSON(message: _53.WeightedVoteOption): unknown;
                fromPartial(object: {
                    option?: _53.VoteOption;
                    weight?: string;
                }): _53.WeightedVoteOption;
                fromSDK(object: _53.WeightedVoteOptionSDKType): _53.WeightedVoteOption;
                toSDK(message: _53.WeightedVoteOption): _53.WeightedVoteOptionSDKType;
                fromAmino(object: _53.WeightedVoteOptionAmino): _53.WeightedVoteOption;
                toAmino(message: _53.WeightedVoteOption): _53.WeightedVoteOptionAmino;
                fromAminoMsg(object: _53.WeightedVoteOptionAminoMsg): _53.WeightedVoteOption;
                toAminoMsg(message: _53.WeightedVoteOption): _53.WeightedVoteOptionAminoMsg;
                fromProtoMsg(message: _53.WeightedVoteOptionProtoMsg): _53.WeightedVoteOption;
                toProto(message: _53.WeightedVoteOption): Uint8Array;
                toProtoMsg(message: _53.WeightedVoteOption): _53.WeightedVoteOptionProtoMsg;
            };
            Deposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.Deposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.Deposit;
                fromJSON(object: any): _53.Deposit;
                toJSON(message: _53.Deposit): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _53.Deposit;
                fromSDK(object: _53.DepositSDKType): _53.Deposit;
                toSDK(message: _53.Deposit): _53.DepositSDKType;
                fromAmino(object: _53.DepositAmino): _53.Deposit;
                toAmino(message: _53.Deposit): _53.DepositAmino;
                fromAminoMsg(object: _53.DepositAminoMsg): _53.Deposit;
                toAminoMsg(message: _53.Deposit): _53.DepositAminoMsg;
                fromProtoMsg(message: _53.DepositProtoMsg): _53.Deposit;
                toProto(message: _53.Deposit): Uint8Array;
                toProtoMsg(message: _53.Deposit): _53.DepositProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.Proposal;
                fromJSON(object: any): _53.Proposal;
                toJSON(message: _53.Proposal): unknown;
                fromPartial(object: {
                    id?: bigint;
                    messages?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    status?: _53.ProposalStatus;
                    finalTallyResult?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                    submitTime?: Date;
                    depositEndTime?: Date;
                    totalDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    votingStartTime?: Date;
                    votingEndTime?: Date;
                    metadata?: string;
                }): _53.Proposal;
                fromSDK(object: _53.ProposalSDKType): _53.Proposal;
                toSDK(message: _53.Proposal): _53.ProposalSDKType;
                fromAmino(object: _53.ProposalAmino): _53.Proposal;
                toAmino(message: _53.Proposal): _53.ProposalAmino;
                fromAminoMsg(object: _53.ProposalAminoMsg): _53.Proposal;
                toAminoMsg(message: _53.Proposal): _53.ProposalAminoMsg;
                fromProtoMsg(message: _53.ProposalProtoMsg): _53.Proposal;
                toProto(message: _53.Proposal): Uint8Array;
                toProtoMsg(message: _53.Proposal): _53.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.TallyResult;
                fromJSON(object: any): _53.TallyResult;
                toJSON(message: _53.TallyResult): unknown;
                fromPartial(object: {
                    yesCount?: string;
                    abstainCount?: string;
                    noCount?: string;
                    noWithVetoCount?: string;
                }): _53.TallyResult;
                fromSDK(object: _53.TallyResultSDKType): _53.TallyResult;
                toSDK(message: _53.TallyResult): _53.TallyResultSDKType;
                fromAmino(object: _53.TallyResultAmino): _53.TallyResult;
                toAmino(message: _53.TallyResult): _53.TallyResultAmino;
                fromAminoMsg(object: _53.TallyResultAminoMsg): _53.TallyResult;
                toAminoMsg(message: _53.TallyResult): _53.TallyResultAminoMsg;
                fromProtoMsg(message: _53.TallyResultProtoMsg): _53.TallyResult;
                toProto(message: _53.TallyResult): Uint8Array;
                toProtoMsg(message: _53.TallyResult): _53.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.Vote;
                fromJSON(object: any): _53.Vote;
                toJSON(message: _53.Vote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _53.VoteOption;
                        weight?: string;
                    }[];
                    metadata?: string;
                }): _53.Vote;
                fromSDK(object: _53.VoteSDKType): _53.Vote;
                toSDK(message: _53.Vote): _53.VoteSDKType;
                fromAmino(object: _53.VoteAmino): _53.Vote;
                toAmino(message: _53.Vote): _53.VoteAmino;
                fromAminoMsg(object: _53.VoteAminoMsg): _53.Vote;
                toAminoMsg(message: _53.Vote): _53.VoteAminoMsg;
                fromProtoMsg(message: _53.VoteProtoMsg): _53.Vote;
                toProto(message: _53.Vote): Uint8Array;
                toProtoMsg(message: _53.Vote): _53.VoteProtoMsg;
            };
            DepositParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.DepositParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.DepositParams;
                fromJSON(object: any): _53.DepositParams;
                toJSON(message: _53.DepositParams): unknown;
                fromPartial(object: {
                    minDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    maxDepositPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _53.DepositParams;
                fromSDK(object: _53.DepositParamsSDKType): _53.DepositParams;
                toSDK(message: _53.DepositParams): _53.DepositParamsSDKType;
                fromAmino(object: _53.DepositParamsAmino): _53.DepositParams;
                toAmino(message: _53.DepositParams): _53.DepositParamsAmino;
                fromAminoMsg(object: _53.DepositParamsAminoMsg): _53.DepositParams;
                toAminoMsg(message: _53.DepositParams): _53.DepositParamsAminoMsg;
                fromProtoMsg(message: _53.DepositParamsProtoMsg): _53.DepositParams;
                toProto(message: _53.DepositParams): Uint8Array;
                toProtoMsg(message: _53.DepositParams): _53.DepositParamsProtoMsg;
            };
            VotingParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.VotingParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.VotingParams;
                fromJSON(object: any): _53.VotingParams;
                toJSON(message: _53.VotingParams): unknown;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _53.VotingParams;
                fromSDK(object: _53.VotingParamsSDKType): _53.VotingParams;
                toSDK(message: _53.VotingParams): _53.VotingParamsSDKType;
                fromAmino(object: _53.VotingParamsAmino): _53.VotingParams;
                toAmino(message: _53.VotingParams): _53.VotingParamsAmino;
                fromAminoMsg(object: _53.VotingParamsAminoMsg): _53.VotingParams;
                toAminoMsg(message: _53.VotingParams): _53.VotingParamsAminoMsg;
                fromProtoMsg(message: _53.VotingParamsProtoMsg): _53.VotingParams;
                toProto(message: _53.VotingParams): Uint8Array;
                toProtoMsg(message: _53.VotingParams): _53.VotingParamsProtoMsg;
            };
            TallyParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _53.TallyParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.TallyParams;
                fromJSON(object: any): _53.TallyParams;
                toJSON(message: _53.TallyParams): unknown;
                fromPartial(object: {
                    quorum?: string;
                    threshold?: string;
                    vetoThreshold?: string;
                }): _53.TallyParams;
                fromSDK(object: _53.TallyParamsSDKType): _53.TallyParams;
                toSDK(message: _53.TallyParams): _53.TallyParamsSDKType;
                fromAmino(object: _53.TallyParamsAmino): _53.TallyParams;
                toAmino(message: _53.TallyParams): _53.TallyParamsAmino;
                fromAminoMsg(object: _53.TallyParamsAminoMsg): _53.TallyParams;
                toAminoMsg(message: _53.TallyParams): _53.TallyParamsAminoMsg;
                fromProtoMsg(message: _53.TallyParamsProtoMsg): _53.TallyParams;
                toProto(message: _53.TallyParams): Uint8Array;
                toProtoMsg(message: _53.TallyParams): _53.TallyParamsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _52.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _52.GenesisState;
                fromJSON(object: any): _52.GenesisState;
                toJSON(message: _52.GenesisState): unknown;
                fromPartial(object: {
                    startingProposalId?: bigint;
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _53.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    }[];
                    proposals?: {
                        id?: bigint;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _53.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                    }[];
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                    };
                }): _52.GenesisState;
                fromSDK(object: _52.GenesisStateSDKType): _52.GenesisState;
                toSDK(message: _52.GenesisState): _52.GenesisStateSDKType;
                fromAmino(object: _52.GenesisStateAmino): _52.GenesisState;
                toAmino(message: _52.GenesisState): _52.GenesisStateAmino;
                fromAminoMsg(object: _52.GenesisStateAminoMsg): _52.GenesisState;
                toAminoMsg(message: _52.GenesisState): _52.GenesisStateAminoMsg;
                fromProtoMsg(message: _52.GenesisStateProtoMsg): _52.GenesisState;
                toProto(message: _52.GenesisState): Uint8Array;
                toProtoMsg(message: _52.GenesisState): _52.GenesisStateProtoMsg;
            };
        };
    }
    namespace mint {
        const v1beta1: {
            QueryClientImpl: typeof _202.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _58.QueryParamsRequest): Promise<_58.QueryParamsResponse>;
                inflation(request?: _58.QueryInflationRequest): Promise<_58.QueryInflationResponse>;
                annualProvisions(request?: _58.QueryAnnualProvisionsRequest): Promise<_58.QueryAnnualProvisionsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useParams: <TData = _58.QueryParamsResponse>({ request, options }: _202.UseParamsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useInflation: <TData_1 = _58.QueryInflationResponse>({ request, options }: _202.UseInflationQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useAnnualProvisions: <TData_2 = _58.QueryAnnualProvisionsResponse>({ request, options }: _202.UseAnnualProvisionsQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _58.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryParamsRequest;
                fromJSON(_: any): _58.QueryParamsRequest;
                toJSON(_: _58.QueryParamsRequest): unknown;
                fromPartial(_: {}): _58.QueryParamsRequest;
                fromSDK(_: _58.QueryParamsRequestSDKType): _58.QueryParamsRequest;
                toSDK(_: _58.QueryParamsRequest): _58.QueryParamsRequestSDKType;
                fromAmino(_: _58.QueryParamsRequestAmino): _58.QueryParamsRequest;
                toAmino(_: _58.QueryParamsRequest): _58.QueryParamsRequestAmino;
                fromAminoMsg(object: _58.QueryParamsRequestAminoMsg): _58.QueryParamsRequest;
                toAminoMsg(message: _58.QueryParamsRequest): _58.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _58.QueryParamsRequestProtoMsg): _58.QueryParamsRequest;
                toProto(message: _58.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _58.QueryParamsRequest): _58.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _58.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryParamsResponse;
                fromJSON(object: any): _58.QueryParamsResponse;
                toJSON(message: _58.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        mintDenom?: string;
                        inflationRateChange?: string;
                        inflationMax?: string;
                        inflationMin?: string;
                        goalBonded?: string;
                        blocksPerYear?: bigint;
                    };
                }): _58.QueryParamsResponse;
                fromSDK(object: _58.QueryParamsResponseSDKType): _58.QueryParamsResponse;
                toSDK(message: _58.QueryParamsResponse): _58.QueryParamsResponseSDKType;
                fromAmino(object: _58.QueryParamsResponseAmino): _58.QueryParamsResponse;
                toAmino(message: _58.QueryParamsResponse): _58.QueryParamsResponseAmino;
                fromAminoMsg(object: _58.QueryParamsResponseAminoMsg): _58.QueryParamsResponse;
                toAminoMsg(message: _58.QueryParamsResponse): _58.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _58.QueryParamsResponseProtoMsg): _58.QueryParamsResponse;
                toProto(message: _58.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _58.QueryParamsResponse): _58.QueryParamsResponseProtoMsg;
            };
            QueryInflationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _58.QueryInflationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryInflationRequest;
                fromJSON(_: any): _58.QueryInflationRequest;
                toJSON(_: _58.QueryInflationRequest): unknown;
                fromPartial(_: {}): _58.QueryInflationRequest;
                fromSDK(_: _58.QueryInflationRequestSDKType): _58.QueryInflationRequest;
                toSDK(_: _58.QueryInflationRequest): _58.QueryInflationRequestSDKType;
                fromAmino(_: _58.QueryInflationRequestAmino): _58.QueryInflationRequest;
                toAmino(_: _58.QueryInflationRequest): _58.QueryInflationRequestAmino;
                fromAminoMsg(object: _58.QueryInflationRequestAminoMsg): _58.QueryInflationRequest;
                toAminoMsg(message: _58.QueryInflationRequest): _58.QueryInflationRequestAminoMsg;
                fromProtoMsg(message: _58.QueryInflationRequestProtoMsg): _58.QueryInflationRequest;
                toProto(message: _58.QueryInflationRequest): Uint8Array;
                toProtoMsg(message: _58.QueryInflationRequest): _58.QueryInflationRequestProtoMsg;
            };
            QueryInflationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _58.QueryInflationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryInflationResponse;
                fromJSON(object: any): _58.QueryInflationResponse;
                toJSON(message: _58.QueryInflationResponse): unknown;
                fromPartial(object: {
                    inflation?: Uint8Array;
                }): _58.QueryInflationResponse;
                fromSDK(object: _58.QueryInflationResponseSDKType): _58.QueryInflationResponse;
                toSDK(message: _58.QueryInflationResponse): _58.QueryInflationResponseSDKType;
                fromAmino(object: _58.QueryInflationResponseAmino): _58.QueryInflationResponse;
                toAmino(message: _58.QueryInflationResponse): _58.QueryInflationResponseAmino;
                fromAminoMsg(object: _58.QueryInflationResponseAminoMsg): _58.QueryInflationResponse;
                toAminoMsg(message: _58.QueryInflationResponse): _58.QueryInflationResponseAminoMsg;
                fromProtoMsg(message: _58.QueryInflationResponseProtoMsg): _58.QueryInflationResponse;
                toProto(message: _58.QueryInflationResponse): Uint8Array;
                toProtoMsg(message: _58.QueryInflationResponse): _58.QueryInflationResponseProtoMsg;
            };
            QueryAnnualProvisionsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _58.QueryAnnualProvisionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryAnnualProvisionsRequest;
                fromJSON(_: any): _58.QueryAnnualProvisionsRequest;
                toJSON(_: _58.QueryAnnualProvisionsRequest): unknown;
                fromPartial(_: {}): _58.QueryAnnualProvisionsRequest;
                fromSDK(_: _58.QueryAnnualProvisionsRequestSDKType): _58.QueryAnnualProvisionsRequest;
                toSDK(_: _58.QueryAnnualProvisionsRequest): _58.QueryAnnualProvisionsRequestSDKType;
                fromAmino(_: _58.QueryAnnualProvisionsRequestAmino): _58.QueryAnnualProvisionsRequest;
                toAmino(_: _58.QueryAnnualProvisionsRequest): _58.QueryAnnualProvisionsRequestAmino;
                fromAminoMsg(object: _58.QueryAnnualProvisionsRequestAminoMsg): _58.QueryAnnualProvisionsRequest;
                toAminoMsg(message: _58.QueryAnnualProvisionsRequest): _58.QueryAnnualProvisionsRequestAminoMsg;
                fromProtoMsg(message: _58.QueryAnnualProvisionsRequestProtoMsg): _58.QueryAnnualProvisionsRequest;
                toProto(message: _58.QueryAnnualProvisionsRequest): Uint8Array;
                toProtoMsg(message: _58.QueryAnnualProvisionsRequest): _58.QueryAnnualProvisionsRequestProtoMsg;
            };
            QueryAnnualProvisionsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _58.QueryAnnualProvisionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.QueryAnnualProvisionsResponse;
                fromJSON(object: any): _58.QueryAnnualProvisionsResponse;
                toJSON(message: _58.QueryAnnualProvisionsResponse): unknown;
                fromPartial(object: {
                    annualProvisions?: Uint8Array;
                }): _58.QueryAnnualProvisionsResponse;
                fromSDK(object: _58.QueryAnnualProvisionsResponseSDKType): _58.QueryAnnualProvisionsResponse;
                toSDK(message: _58.QueryAnnualProvisionsResponse): _58.QueryAnnualProvisionsResponseSDKType;
                fromAmino(object: _58.QueryAnnualProvisionsResponseAmino): _58.QueryAnnualProvisionsResponse;
                toAmino(message: _58.QueryAnnualProvisionsResponse): _58.QueryAnnualProvisionsResponseAmino;
                fromAminoMsg(object: _58.QueryAnnualProvisionsResponseAminoMsg): _58.QueryAnnualProvisionsResponse;
                toAminoMsg(message: _58.QueryAnnualProvisionsResponse): _58.QueryAnnualProvisionsResponseAminoMsg;
                fromProtoMsg(message: _58.QueryAnnualProvisionsResponseProtoMsg): _58.QueryAnnualProvisionsResponse;
                toProto(message: _58.QueryAnnualProvisionsResponse): Uint8Array;
                toProtoMsg(message: _58.QueryAnnualProvisionsResponse): _58.QueryAnnualProvisionsResponseProtoMsg;
            };
            Minter: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.Minter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.Minter;
                fromJSON(object: any): _57.Minter;
                toJSON(message: _57.Minter): unknown;
                fromPartial(object: {
                    inflation?: string;
                    annualProvisions?: string;
                }): _57.Minter;
                fromSDK(object: _57.MinterSDKType): _57.Minter;
                toSDK(message: _57.Minter): _57.MinterSDKType;
                fromAmino(object: _57.MinterAmino): _57.Minter;
                toAmino(message: _57.Minter): _57.MinterAmino;
                fromAminoMsg(object: _57.MinterAminoMsg): _57.Minter;
                toAminoMsg(message: _57.Minter): _57.MinterAminoMsg;
                fromProtoMsg(message: _57.MinterProtoMsg): _57.Minter;
                toProto(message: _57.Minter): Uint8Array;
                toProtoMsg(message: _57.Minter): _57.MinterProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.Params;
                fromJSON(object: any): _57.Params;
                toJSON(message: _57.Params): unknown;
                fromPartial(object: {
                    mintDenom?: string;
                    inflationRateChange?: string;
                    inflationMax?: string;
                    inflationMin?: string;
                    goalBonded?: string;
                    blocksPerYear?: bigint;
                }): _57.Params;
                fromSDK(object: _57.ParamsSDKType): _57.Params;
                toSDK(message: _57.Params): _57.ParamsSDKType;
                fromAmino(object: _57.ParamsAmino): _57.Params;
                toAmino(message: _57.Params): _57.ParamsAmino;
                fromAminoMsg(object: _57.ParamsAminoMsg): _57.Params;
                toAminoMsg(message: _57.Params): _57.ParamsAminoMsg;
                fromProtoMsg(message: _57.ParamsProtoMsg): _57.Params;
                toProto(message: _57.Params): Uint8Array;
                toProtoMsg(message: _57.Params): _57.ParamsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.GenesisState;
                fromJSON(object: any): _56.GenesisState;
                toJSON(message: _56.GenesisState): unknown;
                fromPartial(object: {
                    minter?: {
                        inflation?: string;
                        annualProvisions?: string;
                    };
                    params?: {
                        mintDenom?: string;
                        inflationRateChange?: string;
                        inflationMax?: string;
                        inflationMin?: string;
                        goalBonded?: string;
                        blocksPerYear?: bigint;
                    };
                }): _56.GenesisState;
                fromSDK(object: _56.GenesisStateSDKType): _56.GenesisState;
                toSDK(message: _56.GenesisState): _56.GenesisStateSDKType;
                fromAmino(object: _56.GenesisStateAmino): _56.GenesisState;
                toAmino(message: _56.GenesisState): _56.GenesisStateAmino;
                fromAminoMsg(object: _56.GenesisStateAminoMsg): _56.GenesisState;
                toAminoMsg(message: _56.GenesisState): _56.GenesisStateAminoMsg;
                fromProtoMsg(message: _56.GenesisStateProtoMsg): _56.GenesisState;
                toProto(message: _56.GenesisState): Uint8Array;
                toProtoMsg(message: _56.GenesisState): _56.GenesisStateProtoMsg;
            };
        };
    }
    namespace params {
        const v1beta1: {
            QueryClientImpl: typeof _203.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request: _60.QueryParamsRequest): Promise<_60.QueryParamsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useParams: <TData = _60.QueryParamsResponse>({ request, options }: _203.UseParamsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryParamsRequest;
                fromJSON(object: any): _60.QueryParamsRequest;
                toJSON(message: _60.QueryParamsRequest): unknown;
                fromPartial(object: {
                    subspace?: string;
                    key?: string;
                }): _60.QueryParamsRequest;
                fromSDK(object: _60.QueryParamsRequestSDKType): _60.QueryParamsRequest;
                toSDK(message: _60.QueryParamsRequest): _60.QueryParamsRequestSDKType;
                fromAmino(object: _60.QueryParamsRequestAmino): _60.QueryParamsRequest;
                toAmino(message: _60.QueryParamsRequest): _60.QueryParamsRequestAmino;
                fromAminoMsg(object: _60.QueryParamsRequestAminoMsg): _60.QueryParamsRequest;
                toAminoMsg(message: _60.QueryParamsRequest): _60.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _60.QueryParamsRequestProtoMsg): _60.QueryParamsRequest;
                toProto(message: _60.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _60.QueryParamsRequest): _60.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryParamsResponse;
                fromJSON(object: any): _60.QueryParamsResponse;
                toJSON(message: _60.QueryParamsResponse): unknown;
                fromPartial(object: {
                    param?: {
                        subspace?: string;
                        key?: string;
                        value?: string;
                    };
                }): _60.QueryParamsResponse;
                fromSDK(object: _60.QueryParamsResponseSDKType): _60.QueryParamsResponse;
                toSDK(message: _60.QueryParamsResponse): _60.QueryParamsResponseSDKType;
                fromAmino(object: _60.QueryParamsResponseAmino): _60.QueryParamsResponse;
                toAmino(message: _60.QueryParamsResponse): _60.QueryParamsResponseAmino;
                fromAminoMsg(object: _60.QueryParamsResponseAminoMsg): _60.QueryParamsResponse;
                toAminoMsg(message: _60.QueryParamsResponse): _60.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _60.QueryParamsResponseProtoMsg): _60.QueryParamsResponse;
                toProto(message: _60.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _60.QueryParamsResponse): _60.QueryParamsResponseProtoMsg;
            };
            ParameterChangeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.ParameterChangeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.ParameterChangeProposal;
                fromJSON(object: any): _59.ParameterChangeProposal;
                toJSON(message: _59.ParameterChangeProposal): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                    changes?: {
                        subspace?: string;
                        key?: string;
                        value?: string;
                    }[];
                }): _59.ParameterChangeProposal;
                fromSDK(object: _59.ParameterChangeProposalSDKType): _59.ParameterChangeProposal;
                toSDK(message: _59.ParameterChangeProposal): _59.ParameterChangeProposalSDKType;
                fromAmino(object: _59.ParameterChangeProposalAmino): _59.ParameterChangeProposal;
                toAmino(message: _59.ParameterChangeProposal): _59.ParameterChangeProposalAmino;
                fromAminoMsg(object: _59.ParameterChangeProposalAminoMsg): _59.ParameterChangeProposal;
                toAminoMsg(message: _59.ParameterChangeProposal): _59.ParameterChangeProposalAminoMsg;
                fromProtoMsg(message: _59.ParameterChangeProposalProtoMsg): _59.ParameterChangeProposal;
                toProto(message: _59.ParameterChangeProposal): Uint8Array;
                toProtoMsg(message: _59.ParameterChangeProposal): _59.ParameterChangeProposalProtoMsg;
            };
            ParamChange: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.ParamChange, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.ParamChange;
                fromJSON(object: any): _59.ParamChange;
                toJSON(message: _59.ParamChange): unknown;
                fromPartial(object: {
                    subspace?: string;
                    key?: string;
                    value?: string;
                }): _59.ParamChange;
                fromSDK(object: _59.ParamChangeSDKType): _59.ParamChange;
                toSDK(message: _59.ParamChange): _59.ParamChangeSDKType;
                fromAmino(object: _59.ParamChangeAmino): _59.ParamChange;
                toAmino(message: _59.ParamChange): _59.ParamChangeAmino;
                fromAminoMsg(object: _59.ParamChangeAminoMsg): _59.ParamChange;
                toAminoMsg(message: _59.ParamChange): _59.ParamChangeAminoMsg;
                fromProtoMsg(message: _59.ParamChangeProtoMsg): _59.ParamChange;
                toProto(message: _59.ParamChange): Uint8Array;
                toProtoMsg(message: _59.ParamChange): _59.ParamChangeProtoMsg;
            };
        };
    }
    namespace slashing {
        const v1beta1: {
            MsgClientImpl: typeof _219.MsgClientImpl;
            QueryClientImpl: typeof _204.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _62.QueryParamsRequest): Promise<_62.QueryParamsResponse>;
                signingInfo(request: _62.QuerySigningInfoRequest): Promise<_62.QuerySigningInfoResponse>;
                signingInfos(request?: _62.QuerySigningInfosRequest): Promise<_62.QuerySigningInfosResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useParams: <TData = _62.QueryParamsResponse>({ request, options }: _204.UseParamsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useSigningInfo: <TData_1 = _62.QuerySigningInfoResponse>({ request, options }: _204.UseSigningInfoQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useSigningInfos: <TData_2 = _62.QuerySigningInfosResponse>({ request, options }: _204.UseSigningInfosQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    unjail(value: _64.MsgUnjail): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    unjail(value: _64.MsgUnjail): {
                        typeUrl: string;
                        value: _64.MsgUnjail;
                    };
                };
                toJSON: {
                    unjail(value: _64.MsgUnjail): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    unjail(value: any): {
                        typeUrl: string;
                        value: _64.MsgUnjail;
                    };
                };
                fromPartial: {
                    unjail(value: _64.MsgUnjail): {
                        typeUrl: string;
                        value: _64.MsgUnjail;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.slashing.v1beta1.MsgUnjail": {
                    aminoType: string;
                    toAmino: (message: _64.MsgUnjail) => _64.MsgUnjailAmino;
                    fromAmino: (object: _64.MsgUnjailAmino) => _64.MsgUnjail;
                };
            };
            MsgUnjail: {
                typeUrl: string;
                aminoType: string;
                encode(message: _64.MsgUnjail, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _64.MsgUnjail;
                fromJSON(object: any): _64.MsgUnjail;
                toJSON(message: _64.MsgUnjail): unknown;
                fromPartial(object: {
                    validatorAddr?: string;
                }): _64.MsgUnjail;
                fromSDK(object: _64.MsgUnjailSDKType): _64.MsgUnjail;
                toSDK(message: _64.MsgUnjail): _64.MsgUnjailSDKType;
                fromAmino(object: _64.MsgUnjailAmino): _64.MsgUnjail;
                toAmino(message: _64.MsgUnjail): _64.MsgUnjailAmino;
                fromAminoMsg(object: _64.MsgUnjailAminoMsg): _64.MsgUnjail;
                toAminoMsg(message: _64.MsgUnjail): _64.MsgUnjailAminoMsg;
                fromProtoMsg(message: _64.MsgUnjailProtoMsg): _64.MsgUnjail;
                toProto(message: _64.MsgUnjail): Uint8Array;
                toProtoMsg(message: _64.MsgUnjail): _64.MsgUnjailProtoMsg;
            };
            MsgUnjailResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _64.MsgUnjailResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _64.MsgUnjailResponse;
                fromJSON(_: any): _64.MsgUnjailResponse;
                toJSON(_: _64.MsgUnjailResponse): unknown;
                fromPartial(_: {}): _64.MsgUnjailResponse;
                fromSDK(_: _64.MsgUnjailResponseSDKType): _64.MsgUnjailResponse;
                toSDK(_: _64.MsgUnjailResponse): _64.MsgUnjailResponseSDKType;
                fromAmino(_: _64.MsgUnjailResponseAmino): _64.MsgUnjailResponse;
                toAmino(_: _64.MsgUnjailResponse): _64.MsgUnjailResponseAmino;
                fromAminoMsg(object: _64.MsgUnjailResponseAminoMsg): _64.MsgUnjailResponse;
                toAminoMsg(message: _64.MsgUnjailResponse): _64.MsgUnjailResponseAminoMsg;
                fromProtoMsg(message: _64.MsgUnjailResponseProtoMsg): _64.MsgUnjailResponse;
                toProto(message: _64.MsgUnjailResponse): Uint8Array;
                toProtoMsg(message: _64.MsgUnjailResponse): _64.MsgUnjailResponseProtoMsg;
            };
            ValidatorSigningInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.ValidatorSigningInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.ValidatorSigningInfo;
                fromJSON(object: any): _63.ValidatorSigningInfo;
                toJSON(message: _63.ValidatorSigningInfo): unknown;
                fromPartial(object: {
                    address?: string;
                    startHeight?: bigint;
                    indexOffset?: bigint;
                    jailedUntil?: Date;
                    tombstoned?: boolean;
                    missedBlocksCounter?: bigint;
                }): _63.ValidatorSigningInfo;
                fromSDK(object: _63.ValidatorSigningInfoSDKType): _63.ValidatorSigningInfo;
                toSDK(message: _63.ValidatorSigningInfo): _63.ValidatorSigningInfoSDKType;
                fromAmino(object: _63.ValidatorSigningInfoAmino): _63.ValidatorSigningInfo;
                toAmino(message: _63.ValidatorSigningInfo): _63.ValidatorSigningInfoAmino;
                fromAminoMsg(object: _63.ValidatorSigningInfoAminoMsg): _63.ValidatorSigningInfo;
                toAminoMsg(message: _63.ValidatorSigningInfo): _63.ValidatorSigningInfoAminoMsg;
                fromProtoMsg(message: _63.ValidatorSigningInfoProtoMsg): _63.ValidatorSigningInfo;
                toProto(message: _63.ValidatorSigningInfo): Uint8Array;
                toProtoMsg(message: _63.ValidatorSigningInfo): _63.ValidatorSigningInfoProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.Params;
                fromJSON(object: any): _63.Params;
                toJSON(message: _63.Params): unknown;
                fromPartial(object: {
                    signedBlocksWindow?: bigint;
                    minSignedPerWindow?: Uint8Array;
                    downtimeJailDuration?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    slashFractionDoubleSign?: Uint8Array;
                    slashFractionDowntime?: Uint8Array;
                }): _63.Params;
                fromSDK(object: _63.ParamsSDKType): _63.Params;
                toSDK(message: _63.Params): _63.ParamsSDKType;
                fromAmino(object: _63.ParamsAmino): _63.Params;
                toAmino(message: _63.Params): _63.ParamsAmino;
                fromAminoMsg(object: _63.ParamsAminoMsg): _63.Params;
                toAminoMsg(message: _63.Params): _63.ParamsAminoMsg;
                fromProtoMsg(message: _63.ParamsProtoMsg): _63.Params;
                toProto(message: _63.Params): Uint8Array;
                toProtoMsg(message: _63.Params): _63.ParamsProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _62.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryParamsRequest;
                fromJSON(_: any): _62.QueryParamsRequest;
                toJSON(_: _62.QueryParamsRequest): unknown;
                fromPartial(_: {}): _62.QueryParamsRequest;
                fromSDK(_: _62.QueryParamsRequestSDKType): _62.QueryParamsRequest;
                toSDK(_: _62.QueryParamsRequest): _62.QueryParamsRequestSDKType;
                fromAmino(_: _62.QueryParamsRequestAmino): _62.QueryParamsRequest;
                toAmino(_: _62.QueryParamsRequest): _62.QueryParamsRequestAmino;
                fromAminoMsg(object: _62.QueryParamsRequestAminoMsg): _62.QueryParamsRequest;
                toAminoMsg(message: _62.QueryParamsRequest): _62.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _62.QueryParamsRequestProtoMsg): _62.QueryParamsRequest;
                toProto(message: _62.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _62.QueryParamsRequest): _62.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _62.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QueryParamsResponse;
                fromJSON(object: any): _62.QueryParamsResponse;
                toJSON(message: _62.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        signedBlocksWindow?: bigint;
                        minSignedPerWindow?: Uint8Array;
                        downtimeJailDuration?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        slashFractionDoubleSign?: Uint8Array;
                        slashFractionDowntime?: Uint8Array;
                    };
                }): _62.QueryParamsResponse;
                fromSDK(object: _62.QueryParamsResponseSDKType): _62.QueryParamsResponse;
                toSDK(message: _62.QueryParamsResponse): _62.QueryParamsResponseSDKType;
                fromAmino(object: _62.QueryParamsResponseAmino): _62.QueryParamsResponse;
                toAmino(message: _62.QueryParamsResponse): _62.QueryParamsResponseAmino;
                fromAminoMsg(object: _62.QueryParamsResponseAminoMsg): _62.QueryParamsResponse;
                toAminoMsg(message: _62.QueryParamsResponse): _62.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _62.QueryParamsResponseProtoMsg): _62.QueryParamsResponse;
                toProto(message: _62.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _62.QueryParamsResponse): _62.QueryParamsResponseProtoMsg;
            };
            QuerySigningInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _62.QuerySigningInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QuerySigningInfoRequest;
                fromJSON(object: any): _62.QuerySigningInfoRequest;
                toJSON(message: _62.QuerySigningInfoRequest): unknown;
                fromPartial(object: {
                    consAddress?: string;
                }): _62.QuerySigningInfoRequest;
                fromSDK(object: _62.QuerySigningInfoRequestSDKType): _62.QuerySigningInfoRequest;
                toSDK(message: _62.QuerySigningInfoRequest): _62.QuerySigningInfoRequestSDKType;
                fromAmino(object: _62.QuerySigningInfoRequestAmino): _62.QuerySigningInfoRequest;
                toAmino(message: _62.QuerySigningInfoRequest): _62.QuerySigningInfoRequestAmino;
                fromAminoMsg(object: _62.QuerySigningInfoRequestAminoMsg): _62.QuerySigningInfoRequest;
                toAminoMsg(message: _62.QuerySigningInfoRequest): _62.QuerySigningInfoRequestAminoMsg;
                fromProtoMsg(message: _62.QuerySigningInfoRequestProtoMsg): _62.QuerySigningInfoRequest;
                toProto(message: _62.QuerySigningInfoRequest): Uint8Array;
                toProtoMsg(message: _62.QuerySigningInfoRequest): _62.QuerySigningInfoRequestProtoMsg;
            };
            QuerySigningInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _62.QuerySigningInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QuerySigningInfoResponse;
                fromJSON(object: any): _62.QuerySigningInfoResponse;
                toJSON(message: _62.QuerySigningInfoResponse): unknown;
                fromPartial(object: {
                    valSigningInfo?: {
                        address?: string;
                        startHeight?: bigint;
                        indexOffset?: bigint;
                        jailedUntil?: Date;
                        tombstoned?: boolean;
                        missedBlocksCounter?: bigint;
                    };
                }): _62.QuerySigningInfoResponse;
                fromSDK(object: _62.QuerySigningInfoResponseSDKType): _62.QuerySigningInfoResponse;
                toSDK(message: _62.QuerySigningInfoResponse): _62.QuerySigningInfoResponseSDKType;
                fromAmino(object: _62.QuerySigningInfoResponseAmino): _62.QuerySigningInfoResponse;
                toAmino(message: _62.QuerySigningInfoResponse): _62.QuerySigningInfoResponseAmino;
                fromAminoMsg(object: _62.QuerySigningInfoResponseAminoMsg): _62.QuerySigningInfoResponse;
                toAminoMsg(message: _62.QuerySigningInfoResponse): _62.QuerySigningInfoResponseAminoMsg;
                fromProtoMsg(message: _62.QuerySigningInfoResponseProtoMsg): _62.QuerySigningInfoResponse;
                toProto(message: _62.QuerySigningInfoResponse): Uint8Array;
                toProtoMsg(message: _62.QuerySigningInfoResponse): _62.QuerySigningInfoResponseProtoMsg;
            };
            QuerySigningInfosRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _62.QuerySigningInfosRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QuerySigningInfosRequest;
                fromJSON(object: any): _62.QuerySigningInfosRequest;
                toJSON(message: _62.QuerySigningInfosRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _62.QuerySigningInfosRequest;
                fromSDK(object: _62.QuerySigningInfosRequestSDKType): _62.QuerySigningInfosRequest;
                toSDK(message: _62.QuerySigningInfosRequest): _62.QuerySigningInfosRequestSDKType;
                fromAmino(object: _62.QuerySigningInfosRequestAmino): _62.QuerySigningInfosRequest;
                toAmino(message: _62.QuerySigningInfosRequest): _62.QuerySigningInfosRequestAmino;
                fromAminoMsg(object: _62.QuerySigningInfosRequestAminoMsg): _62.QuerySigningInfosRequest;
                toAminoMsg(message: _62.QuerySigningInfosRequest): _62.QuerySigningInfosRequestAminoMsg;
                fromProtoMsg(message: _62.QuerySigningInfosRequestProtoMsg): _62.QuerySigningInfosRequest;
                toProto(message: _62.QuerySigningInfosRequest): Uint8Array;
                toProtoMsg(message: _62.QuerySigningInfosRequest): _62.QuerySigningInfosRequestProtoMsg;
            };
            QuerySigningInfosResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _62.QuerySigningInfosResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.QuerySigningInfosResponse;
                fromJSON(object: any): _62.QuerySigningInfosResponse;
                toJSON(message: _62.QuerySigningInfosResponse): unknown;
                fromPartial(object: {
                    info?: {
                        address?: string;
                        startHeight?: bigint;
                        indexOffset?: bigint;
                        jailedUntil?: Date;
                        tombstoned?: boolean;
                        missedBlocksCounter?: bigint;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _62.QuerySigningInfosResponse;
                fromSDK(object: _62.QuerySigningInfosResponseSDKType): _62.QuerySigningInfosResponse;
                toSDK(message: _62.QuerySigningInfosResponse): _62.QuerySigningInfosResponseSDKType;
                fromAmino(object: _62.QuerySigningInfosResponseAmino): _62.QuerySigningInfosResponse;
                toAmino(message: _62.QuerySigningInfosResponse): _62.QuerySigningInfosResponseAmino;
                fromAminoMsg(object: _62.QuerySigningInfosResponseAminoMsg): _62.QuerySigningInfosResponse;
                toAminoMsg(message: _62.QuerySigningInfosResponse): _62.QuerySigningInfosResponseAminoMsg;
                fromProtoMsg(message: _62.QuerySigningInfosResponseProtoMsg): _62.QuerySigningInfosResponse;
                toProto(message: _62.QuerySigningInfosResponse): Uint8Array;
                toProtoMsg(message: _62.QuerySigningInfosResponse): _62.QuerySigningInfosResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.GenesisState;
                fromJSON(object: any): _61.GenesisState;
                toJSON(message: _61.GenesisState): unknown;
                fromPartial(object: {
                    params?: {
                        signedBlocksWindow?: bigint;
                        minSignedPerWindow?: Uint8Array;
                        downtimeJailDuration?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        slashFractionDoubleSign?: Uint8Array;
                        slashFractionDowntime?: Uint8Array;
                    };
                    signingInfos?: {
                        address?: string;
                        validatorSigningInfo?: {
                            address?: string;
                            startHeight?: bigint;
                            indexOffset?: bigint;
                            jailedUntil?: Date;
                            tombstoned?: boolean;
                            missedBlocksCounter?: bigint;
                        };
                    }[];
                    missedBlocks?: {
                        address?: string;
                        missedBlocks?: {
                            index?: bigint;
                            missed?: boolean;
                        }[];
                    }[];
                }): _61.GenesisState;
                fromSDK(object: _61.GenesisStateSDKType): _61.GenesisState;
                toSDK(message: _61.GenesisState): _61.GenesisStateSDKType;
                fromAmino(object: _61.GenesisStateAmino): _61.GenesisState;
                toAmino(message: _61.GenesisState): _61.GenesisStateAmino;
                fromAminoMsg(object: _61.GenesisStateAminoMsg): _61.GenesisState;
                toAminoMsg(message: _61.GenesisState): _61.GenesisStateAminoMsg;
                fromProtoMsg(message: _61.GenesisStateProtoMsg): _61.GenesisState;
                toProto(message: _61.GenesisState): Uint8Array;
                toProtoMsg(message: _61.GenesisState): _61.GenesisStateProtoMsg;
            };
            SigningInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.SigningInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.SigningInfo;
                fromJSON(object: any): _61.SigningInfo;
                toJSON(message: _61.SigningInfo): unknown;
                fromPartial(object: {
                    address?: string;
                    validatorSigningInfo?: {
                        address?: string;
                        startHeight?: bigint;
                        indexOffset?: bigint;
                        jailedUntil?: Date;
                        tombstoned?: boolean;
                        missedBlocksCounter?: bigint;
                    };
                }): _61.SigningInfo;
                fromSDK(object: _61.SigningInfoSDKType): _61.SigningInfo;
                toSDK(message: _61.SigningInfo): _61.SigningInfoSDKType;
                fromAmino(object: _61.SigningInfoAmino): _61.SigningInfo;
                toAmino(message: _61.SigningInfo): _61.SigningInfoAmino;
                fromAminoMsg(object: _61.SigningInfoAminoMsg): _61.SigningInfo;
                toAminoMsg(message: _61.SigningInfo): _61.SigningInfoAminoMsg;
                fromProtoMsg(message: _61.SigningInfoProtoMsg): _61.SigningInfo;
                toProto(message: _61.SigningInfo): Uint8Array;
                toProtoMsg(message: _61.SigningInfo): _61.SigningInfoProtoMsg;
            };
            ValidatorMissedBlocks: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.ValidatorMissedBlocks, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.ValidatorMissedBlocks;
                fromJSON(object: any): _61.ValidatorMissedBlocks;
                toJSON(message: _61.ValidatorMissedBlocks): unknown;
                fromPartial(object: {
                    address?: string;
                    missedBlocks?: {
                        index?: bigint;
                        missed?: boolean;
                    }[];
                }): _61.ValidatorMissedBlocks;
                fromSDK(object: _61.ValidatorMissedBlocksSDKType): _61.ValidatorMissedBlocks;
                toSDK(message: _61.ValidatorMissedBlocks): _61.ValidatorMissedBlocksSDKType;
                fromAmino(object: _61.ValidatorMissedBlocksAmino): _61.ValidatorMissedBlocks;
                toAmino(message: _61.ValidatorMissedBlocks): _61.ValidatorMissedBlocksAmino;
                fromAminoMsg(object: _61.ValidatorMissedBlocksAminoMsg): _61.ValidatorMissedBlocks;
                toAminoMsg(message: _61.ValidatorMissedBlocks): _61.ValidatorMissedBlocksAminoMsg;
                fromProtoMsg(message: _61.ValidatorMissedBlocksProtoMsg): _61.ValidatorMissedBlocks;
                toProto(message: _61.ValidatorMissedBlocks): Uint8Array;
                toProtoMsg(message: _61.ValidatorMissedBlocks): _61.ValidatorMissedBlocksProtoMsg;
            };
            MissedBlock: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MissedBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MissedBlock;
                fromJSON(object: any): _61.MissedBlock;
                toJSON(message: _61.MissedBlock): unknown;
                fromPartial(object: {
                    index?: bigint;
                    missed?: boolean;
                }): _61.MissedBlock;
                fromSDK(object: _61.MissedBlockSDKType): _61.MissedBlock;
                toSDK(message: _61.MissedBlock): _61.MissedBlockSDKType;
                fromAmino(object: _61.MissedBlockAmino): _61.MissedBlock;
                toAmino(message: _61.MissedBlock): _61.MissedBlockAmino;
                fromAminoMsg(object: _61.MissedBlockAminoMsg): _61.MissedBlock;
                toAminoMsg(message: _61.MissedBlock): _61.MissedBlockAminoMsg;
                fromProtoMsg(message: _61.MissedBlockProtoMsg): _61.MissedBlock;
                toProto(message: _61.MissedBlock): Uint8Array;
                toProtoMsg(message: _61.MissedBlock): _61.MissedBlockProtoMsg;
            };
        };
    }
    namespace staking {
        const v1beta1: {
            MsgClientImpl: typeof _220.MsgClientImpl;
            QueryClientImpl: typeof _205.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                validators(request: _67.QueryValidatorsRequest): Promise<_67.QueryValidatorsResponse>;
                validator(request: _67.QueryValidatorRequest): Promise<_67.QueryValidatorResponse>;
                validatorDelegations(request: _67.QueryValidatorDelegationsRequest): Promise<_67.QueryValidatorDelegationsResponse>;
                validatorUnbondingDelegations(request: _67.QueryValidatorUnbondingDelegationsRequest): Promise<_67.QueryValidatorUnbondingDelegationsResponse>;
                delegation(request: _67.QueryDelegationRequest): Promise<_67.QueryDelegationResponse>;
                unbondingDelegation(request: _67.QueryUnbondingDelegationRequest): Promise<_67.QueryUnbondingDelegationResponse>;
                delegatorDelegations(request: _67.QueryDelegatorDelegationsRequest): Promise<_67.QueryDelegatorDelegationsResponse>;
                delegatorUnbondingDelegations(request: _67.QueryDelegatorUnbondingDelegationsRequest): Promise<_67.QueryDelegatorUnbondingDelegationsResponse>;
                redelegations(request: _67.QueryRedelegationsRequest): Promise<_67.QueryRedelegationsResponse>;
                delegatorValidators(request: _67.QueryDelegatorValidatorsRequest): Promise<_67.QueryDelegatorValidatorsResponse>;
                delegatorValidator(request: _67.QueryDelegatorValidatorRequest): Promise<_67.QueryDelegatorValidatorResponse>;
                historicalInfo(request: _67.QueryHistoricalInfoRequest): Promise<_67.QueryHistoricalInfoResponse>;
                pool(request?: _67.QueryPoolRequest): Promise<_67.QueryPoolResponse>;
                params(request?: _67.QueryParamsRequest): Promise<_67.QueryParamsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useValidators: <TData = _67.QueryValidatorsResponse>({ request, options }: _205.UseValidatorsQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useValidator: <TData_1 = _67.QueryValidatorResponse>({ request, options }: _205.UseValidatorQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useValidatorDelegations: <TData_2 = _67.QueryValidatorDelegationsResponse>({ request, options }: _205.UseValidatorDelegationsQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useValidatorUnbondingDelegations: <TData_3 = _67.QueryValidatorUnbondingDelegationsResponse>({ request, options }: _205.UseValidatorUnbondingDelegationsQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useDelegation: <TData_4 = _67.QueryDelegationResponse>({ request, options }: _205.UseDelegationQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useUnbondingDelegation: <TData_5 = _67.QueryUnbondingDelegationResponse>({ request, options }: _205.UseUnbondingDelegationQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useDelegatorDelegations: <TData_6 = _67.QueryDelegatorDelegationsResponse>({ request, options }: _205.UseDelegatorDelegationsQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useDelegatorUnbondingDelegations: <TData_7 = _67.QueryDelegatorUnbondingDelegationsResponse>({ request, options }: _205.UseDelegatorUnbondingDelegationsQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
                useRedelegations: <TData_8 = _67.QueryRedelegationsResponse>({ request, options }: _205.UseRedelegationsQuery<TData_8>) => import("@tanstack/react-query").UseQueryResult<TData_8, Error>;
                useDelegatorValidators: <TData_9 = _67.QueryDelegatorValidatorsResponse>({ request, options }: _205.UseDelegatorValidatorsQuery<TData_9>) => import("@tanstack/react-query").UseQueryResult<TData_9, Error>;
                useDelegatorValidator: <TData_10 = _67.QueryDelegatorValidatorResponse>({ request, options }: _205.UseDelegatorValidatorQuery<TData_10>) => import("@tanstack/react-query").UseQueryResult<TData_10, Error>;
                useHistoricalInfo: <TData_11 = _67.QueryHistoricalInfoResponse>({ request, options }: _205.UseHistoricalInfoQuery<TData_11>) => import("@tanstack/react-query").UseQueryResult<TData_11, Error>;
                usePool: <TData_12 = _67.QueryPoolResponse>({ request, options }: _205.UsePoolQuery<TData_12>) => import("@tanstack/react-query").UseQueryResult<TData_12, Error>;
                useParams: <TData_13 = _67.QueryParamsResponse>({ request, options }: _205.UseParamsQuery<TData_13>) => import("@tanstack/react-query").UseQueryResult<TData_13, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createValidator(value: _69.MsgCreateValidator): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    editValidator(value: _69.MsgEditValidator): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    delegate(value: _69.MsgDelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    beginRedelegate(value: _69.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    undelegate(value: _69.MsgUndelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createValidator(value: _69.MsgCreateValidator): {
                        typeUrl: string;
                        value: _69.MsgCreateValidator;
                    };
                    editValidator(value: _69.MsgEditValidator): {
                        typeUrl: string;
                        value: _69.MsgEditValidator;
                    };
                    delegate(value: _69.MsgDelegate): {
                        typeUrl: string;
                        value: _69.MsgDelegate;
                    };
                    beginRedelegate(value: _69.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: _69.MsgBeginRedelegate;
                    };
                    undelegate(value: _69.MsgUndelegate): {
                        typeUrl: string;
                        value: _69.MsgUndelegate;
                    };
                };
                toJSON: {
                    createValidator(value: _69.MsgCreateValidator): {
                        typeUrl: string;
                        value: unknown;
                    };
                    editValidator(value: _69.MsgEditValidator): {
                        typeUrl: string;
                        value: unknown;
                    };
                    delegate(value: _69.MsgDelegate): {
                        typeUrl: string;
                        value: unknown;
                    };
                    beginRedelegate(value: _69.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: unknown;
                    };
                    undelegate(value: _69.MsgUndelegate): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    createValidator(value: any): {
                        typeUrl: string;
                        value: _69.MsgCreateValidator;
                    };
                    editValidator(value: any): {
                        typeUrl: string;
                        value: _69.MsgEditValidator;
                    };
                    delegate(value: any): {
                        typeUrl: string;
                        value: _69.MsgDelegate;
                    };
                    beginRedelegate(value: any): {
                        typeUrl: string;
                        value: _69.MsgBeginRedelegate;
                    };
                    undelegate(value: any): {
                        typeUrl: string;
                        value: _69.MsgUndelegate;
                    };
                };
                fromPartial: {
                    createValidator(value: _69.MsgCreateValidator): {
                        typeUrl: string;
                        value: _69.MsgCreateValidator;
                    };
                    editValidator(value: _69.MsgEditValidator): {
                        typeUrl: string;
                        value: _69.MsgEditValidator;
                    };
                    delegate(value: _69.MsgDelegate): {
                        typeUrl: string;
                        value: _69.MsgDelegate;
                    };
                    beginRedelegate(value: _69.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: _69.MsgBeginRedelegate;
                    };
                    undelegate(value: _69.MsgUndelegate): {
                        typeUrl: string;
                        value: _69.MsgUndelegate;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.staking.v1beta1.MsgCreateValidator": {
                    aminoType: string;
                    toAmino: (message: _69.MsgCreateValidator) => _69.MsgCreateValidatorAmino;
                    fromAmino: (object: _69.MsgCreateValidatorAmino) => _69.MsgCreateValidator;
                };
                "/cosmos.staking.v1beta1.MsgEditValidator": {
                    aminoType: string;
                    toAmino: (message: _69.MsgEditValidator) => _69.MsgEditValidatorAmino;
                    fromAmino: (object: _69.MsgEditValidatorAmino) => _69.MsgEditValidator;
                };
                "/cosmos.staking.v1beta1.MsgDelegate": {
                    aminoType: string;
                    toAmino: (message: _69.MsgDelegate) => _69.MsgDelegateAmino;
                    fromAmino: (object: _69.MsgDelegateAmino) => _69.MsgDelegate;
                };
                "/cosmos.staking.v1beta1.MsgBeginRedelegate": {
                    aminoType: string;
                    toAmino: (message: _69.MsgBeginRedelegate) => _69.MsgBeginRedelegateAmino;
                    fromAmino: (object: _69.MsgBeginRedelegateAmino) => _69.MsgBeginRedelegate;
                };
                "/cosmos.staking.v1beta1.MsgUndelegate": {
                    aminoType: string;
                    toAmino: (message: _69.MsgUndelegate) => _69.MsgUndelegateAmino;
                    fromAmino: (object: _69.MsgUndelegateAmino) => _69.MsgUndelegate;
                };
            };
            MsgCreateValidator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgCreateValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgCreateValidator;
                fromJSON(object: any): _69.MsgCreateValidator;
                toJSON(message: _69.MsgCreateValidator): unknown;
                fromPartial(object: {
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    commission?: {
                        rate?: string;
                        maxRate?: string;
                        maxChangeRate?: string;
                    };
                    minSelfDelegation?: string;
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    pubkey?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    value?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _69.MsgCreateValidator;
                fromSDK(object: _69.MsgCreateValidatorSDKType): _69.MsgCreateValidator;
                toSDK(message: _69.MsgCreateValidator): _69.MsgCreateValidatorSDKType;
                fromAmino(object: _69.MsgCreateValidatorAmino): _69.MsgCreateValidator;
                toAmino(message: _69.MsgCreateValidator): _69.MsgCreateValidatorAmino;
                fromAminoMsg(object: _69.MsgCreateValidatorAminoMsg): _69.MsgCreateValidator;
                toAminoMsg(message: _69.MsgCreateValidator): _69.MsgCreateValidatorAminoMsg;
                fromProtoMsg(message: _69.MsgCreateValidatorProtoMsg): _69.MsgCreateValidator;
                toProto(message: _69.MsgCreateValidator): Uint8Array;
                toProtoMsg(message: _69.MsgCreateValidator): _69.MsgCreateValidatorProtoMsg;
            };
            MsgCreateValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _69.MsgCreateValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgCreateValidatorResponse;
                fromJSON(_: any): _69.MsgCreateValidatorResponse;
                toJSON(_: _69.MsgCreateValidatorResponse): unknown;
                fromPartial(_: {}): _69.MsgCreateValidatorResponse;
                fromSDK(_: _69.MsgCreateValidatorResponseSDKType): _69.MsgCreateValidatorResponse;
                toSDK(_: _69.MsgCreateValidatorResponse): _69.MsgCreateValidatorResponseSDKType;
                fromAmino(_: _69.MsgCreateValidatorResponseAmino): _69.MsgCreateValidatorResponse;
                toAmino(_: _69.MsgCreateValidatorResponse): _69.MsgCreateValidatorResponseAmino;
                fromAminoMsg(object: _69.MsgCreateValidatorResponseAminoMsg): _69.MsgCreateValidatorResponse;
                toAminoMsg(message: _69.MsgCreateValidatorResponse): _69.MsgCreateValidatorResponseAminoMsg;
                fromProtoMsg(message: _69.MsgCreateValidatorResponseProtoMsg): _69.MsgCreateValidatorResponse;
                toProto(message: _69.MsgCreateValidatorResponse): Uint8Array;
                toProtoMsg(message: _69.MsgCreateValidatorResponse): _69.MsgCreateValidatorResponseProtoMsg;
            };
            MsgEditValidator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgEditValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgEditValidator;
                fromJSON(object: any): _69.MsgEditValidator;
                toJSON(message: _69.MsgEditValidator): unknown;
                fromPartial(object: {
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    validatorAddress?: string;
                    commissionRate?: string;
                    minSelfDelegation?: string;
                }): _69.MsgEditValidator;
                fromSDK(object: _69.MsgEditValidatorSDKType): _69.MsgEditValidator;
                toSDK(message: _69.MsgEditValidator): _69.MsgEditValidatorSDKType;
                fromAmino(object: _69.MsgEditValidatorAmino): _69.MsgEditValidator;
                toAmino(message: _69.MsgEditValidator): _69.MsgEditValidatorAmino;
                fromAminoMsg(object: _69.MsgEditValidatorAminoMsg): _69.MsgEditValidator;
                toAminoMsg(message: _69.MsgEditValidator): _69.MsgEditValidatorAminoMsg;
                fromProtoMsg(message: _69.MsgEditValidatorProtoMsg): _69.MsgEditValidator;
                toProto(message: _69.MsgEditValidator): Uint8Array;
                toProtoMsg(message: _69.MsgEditValidator): _69.MsgEditValidatorProtoMsg;
            };
            MsgEditValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _69.MsgEditValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgEditValidatorResponse;
                fromJSON(_: any): _69.MsgEditValidatorResponse;
                toJSON(_: _69.MsgEditValidatorResponse): unknown;
                fromPartial(_: {}): _69.MsgEditValidatorResponse;
                fromSDK(_: _69.MsgEditValidatorResponseSDKType): _69.MsgEditValidatorResponse;
                toSDK(_: _69.MsgEditValidatorResponse): _69.MsgEditValidatorResponseSDKType;
                fromAmino(_: _69.MsgEditValidatorResponseAmino): _69.MsgEditValidatorResponse;
                toAmino(_: _69.MsgEditValidatorResponse): _69.MsgEditValidatorResponseAmino;
                fromAminoMsg(object: _69.MsgEditValidatorResponseAminoMsg): _69.MsgEditValidatorResponse;
                toAminoMsg(message: _69.MsgEditValidatorResponse): _69.MsgEditValidatorResponseAminoMsg;
                fromProtoMsg(message: _69.MsgEditValidatorResponseProtoMsg): _69.MsgEditValidatorResponse;
                toProto(message: _69.MsgEditValidatorResponse): Uint8Array;
                toProtoMsg(message: _69.MsgEditValidatorResponse): _69.MsgEditValidatorResponseProtoMsg;
            };
            MsgDelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgDelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgDelegate;
                fromJSON(object: any): _69.MsgDelegate;
                toJSON(message: _69.MsgDelegate): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _69.MsgDelegate;
                fromSDK(object: _69.MsgDelegateSDKType): _69.MsgDelegate;
                toSDK(message: _69.MsgDelegate): _69.MsgDelegateSDKType;
                fromAmino(object: _69.MsgDelegateAmino): _69.MsgDelegate;
                toAmino(message: _69.MsgDelegate): _69.MsgDelegateAmino;
                fromAminoMsg(object: _69.MsgDelegateAminoMsg): _69.MsgDelegate;
                toAminoMsg(message: _69.MsgDelegate): _69.MsgDelegateAminoMsg;
                fromProtoMsg(message: _69.MsgDelegateProtoMsg): _69.MsgDelegate;
                toProto(message: _69.MsgDelegate): Uint8Array;
                toProtoMsg(message: _69.MsgDelegate): _69.MsgDelegateProtoMsg;
            };
            MsgDelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _69.MsgDelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgDelegateResponse;
                fromJSON(_: any): _69.MsgDelegateResponse;
                toJSON(_: _69.MsgDelegateResponse): unknown;
                fromPartial(_: {}): _69.MsgDelegateResponse;
                fromSDK(_: _69.MsgDelegateResponseSDKType): _69.MsgDelegateResponse;
                toSDK(_: _69.MsgDelegateResponse): _69.MsgDelegateResponseSDKType;
                fromAmino(_: _69.MsgDelegateResponseAmino): _69.MsgDelegateResponse;
                toAmino(_: _69.MsgDelegateResponse): _69.MsgDelegateResponseAmino;
                fromAminoMsg(object: _69.MsgDelegateResponseAminoMsg): _69.MsgDelegateResponse;
                toAminoMsg(message: _69.MsgDelegateResponse): _69.MsgDelegateResponseAminoMsg;
                fromProtoMsg(message: _69.MsgDelegateResponseProtoMsg): _69.MsgDelegateResponse;
                toProto(message: _69.MsgDelegateResponse): Uint8Array;
                toProtoMsg(message: _69.MsgDelegateResponse): _69.MsgDelegateResponseProtoMsg;
            };
            MsgBeginRedelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgBeginRedelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgBeginRedelegate;
                fromJSON(object: any): _69.MsgBeginRedelegate;
                toJSON(message: _69.MsgBeginRedelegate): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _69.MsgBeginRedelegate;
                fromSDK(object: _69.MsgBeginRedelegateSDKType): _69.MsgBeginRedelegate;
                toSDK(message: _69.MsgBeginRedelegate): _69.MsgBeginRedelegateSDKType;
                fromAmino(object: _69.MsgBeginRedelegateAmino): _69.MsgBeginRedelegate;
                toAmino(message: _69.MsgBeginRedelegate): _69.MsgBeginRedelegateAmino;
                fromAminoMsg(object: _69.MsgBeginRedelegateAminoMsg): _69.MsgBeginRedelegate;
                toAminoMsg(message: _69.MsgBeginRedelegate): _69.MsgBeginRedelegateAminoMsg;
                fromProtoMsg(message: _69.MsgBeginRedelegateProtoMsg): _69.MsgBeginRedelegate;
                toProto(message: _69.MsgBeginRedelegate): Uint8Array;
                toProtoMsg(message: _69.MsgBeginRedelegate): _69.MsgBeginRedelegateProtoMsg;
            };
            MsgBeginRedelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgBeginRedelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgBeginRedelegateResponse;
                fromJSON(object: any): _69.MsgBeginRedelegateResponse;
                toJSON(message: _69.MsgBeginRedelegateResponse): unknown;
                fromPartial(object: {
                    completionTime?: Date;
                }): _69.MsgBeginRedelegateResponse;
                fromSDK(object: _69.MsgBeginRedelegateResponseSDKType): _69.MsgBeginRedelegateResponse;
                toSDK(message: _69.MsgBeginRedelegateResponse): _69.MsgBeginRedelegateResponseSDKType;
                fromAmino(object: _69.MsgBeginRedelegateResponseAmino): _69.MsgBeginRedelegateResponse;
                toAmino(message: _69.MsgBeginRedelegateResponse): _69.MsgBeginRedelegateResponseAmino;
                fromAminoMsg(object: _69.MsgBeginRedelegateResponseAminoMsg): _69.MsgBeginRedelegateResponse;
                toAminoMsg(message: _69.MsgBeginRedelegateResponse): _69.MsgBeginRedelegateResponseAminoMsg;
                fromProtoMsg(message: _69.MsgBeginRedelegateResponseProtoMsg): _69.MsgBeginRedelegateResponse;
                toProto(message: _69.MsgBeginRedelegateResponse): Uint8Array;
                toProtoMsg(message: _69.MsgBeginRedelegateResponse): _69.MsgBeginRedelegateResponseProtoMsg;
            };
            MsgUndelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgUndelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgUndelegate;
                fromJSON(object: any): _69.MsgUndelegate;
                toJSON(message: _69.MsgUndelegate): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _69.MsgUndelegate;
                fromSDK(object: _69.MsgUndelegateSDKType): _69.MsgUndelegate;
                toSDK(message: _69.MsgUndelegate): _69.MsgUndelegateSDKType;
                fromAmino(object: _69.MsgUndelegateAmino): _69.MsgUndelegate;
                toAmino(message: _69.MsgUndelegate): _69.MsgUndelegateAmino;
                fromAminoMsg(object: _69.MsgUndelegateAminoMsg): _69.MsgUndelegate;
                toAminoMsg(message: _69.MsgUndelegate): _69.MsgUndelegateAminoMsg;
                fromProtoMsg(message: _69.MsgUndelegateProtoMsg): _69.MsgUndelegate;
                toProto(message: _69.MsgUndelegate): Uint8Array;
                toProtoMsg(message: _69.MsgUndelegate): _69.MsgUndelegateProtoMsg;
            };
            MsgUndelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.MsgUndelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.MsgUndelegateResponse;
                fromJSON(object: any): _69.MsgUndelegateResponse;
                toJSON(message: _69.MsgUndelegateResponse): unknown;
                fromPartial(object: {
                    completionTime?: Date;
                }): _69.MsgUndelegateResponse;
                fromSDK(object: _69.MsgUndelegateResponseSDKType): _69.MsgUndelegateResponse;
                toSDK(message: _69.MsgUndelegateResponse): _69.MsgUndelegateResponseSDKType;
                fromAmino(object: _69.MsgUndelegateResponseAmino): _69.MsgUndelegateResponse;
                toAmino(message: _69.MsgUndelegateResponse): _69.MsgUndelegateResponseAmino;
                fromAminoMsg(object: _69.MsgUndelegateResponseAminoMsg): _69.MsgUndelegateResponse;
                toAminoMsg(message: _69.MsgUndelegateResponse): _69.MsgUndelegateResponseAminoMsg;
                fromProtoMsg(message: _69.MsgUndelegateResponseProtoMsg): _69.MsgUndelegateResponse;
                toProto(message: _69.MsgUndelegateResponse): Uint8Array;
                toProtoMsg(message: _69.MsgUndelegateResponse): _69.MsgUndelegateResponseProtoMsg;
            };
            bondStatusFromJSON(object: any): _68.BondStatus;
            bondStatusToJSON(object: _68.BondStatus): string;
            BondStatus: typeof _68.BondStatus;
            BondStatusSDKType: typeof _68.BondStatus;
            BondStatusAmino: typeof _68.BondStatus;
            HistoricalInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.HistoricalInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.HistoricalInfo;
                fromJSON(object: any): _68.HistoricalInfo;
                toJSON(message: _68.HistoricalInfo): unknown;
                fromPartial(object: {
                    header?: {
                        version?: {
                            block?: bigint;
                            app?: bigint;
                        };
                        chainId?: string;
                        height?: bigint;
                        time?: Date;
                        lastBlockId?: {
                            hash?: Uint8Array;
                            partSetHeader?: {
                                total?: number;
                                hash?: Uint8Array;
                            };
                        };
                        lastCommitHash?: Uint8Array;
                        dataHash?: Uint8Array;
                        validatorsHash?: Uint8Array;
                        nextValidatorsHash?: Uint8Array;
                        consensusHash?: Uint8Array;
                        appHash?: Uint8Array;
                        lastResultsHash?: Uint8Array;
                        evidenceHash?: Uint8Array;
                        proposerAddress?: Uint8Array;
                    };
                    valset?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    }[];
                }): _68.HistoricalInfo;
                fromSDK(object: _68.HistoricalInfoSDKType): _68.HistoricalInfo;
                toSDK(message: _68.HistoricalInfo): _68.HistoricalInfoSDKType;
                fromAmino(object: _68.HistoricalInfoAmino): _68.HistoricalInfo;
                toAmino(message: _68.HistoricalInfo): _68.HistoricalInfoAmino;
                fromAminoMsg(object: _68.HistoricalInfoAminoMsg): _68.HistoricalInfo;
                toAminoMsg(message: _68.HistoricalInfo): _68.HistoricalInfoAminoMsg;
                fromProtoMsg(message: _68.HistoricalInfoProtoMsg): _68.HistoricalInfo;
                toProto(message: _68.HistoricalInfo): Uint8Array;
                toProtoMsg(message: _68.HistoricalInfo): _68.HistoricalInfoProtoMsg;
            };
            CommissionRates: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.CommissionRates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.CommissionRates;
                fromJSON(object: any): _68.CommissionRates;
                toJSON(message: _68.CommissionRates): unknown;
                fromPartial(object: {
                    rate?: string;
                    maxRate?: string;
                    maxChangeRate?: string;
                }): _68.CommissionRates;
                fromSDK(object: _68.CommissionRatesSDKType): _68.CommissionRates;
                toSDK(message: _68.CommissionRates): _68.CommissionRatesSDKType;
                fromAmino(object: _68.CommissionRatesAmino): _68.CommissionRates;
                toAmino(message: _68.CommissionRates): _68.CommissionRatesAmino;
                fromAminoMsg(object: _68.CommissionRatesAminoMsg): _68.CommissionRates;
                toAminoMsg(message: _68.CommissionRates): _68.CommissionRatesAminoMsg;
                fromProtoMsg(message: _68.CommissionRatesProtoMsg): _68.CommissionRates;
                toProto(message: _68.CommissionRates): Uint8Array;
                toProtoMsg(message: _68.CommissionRates): _68.CommissionRatesProtoMsg;
            };
            Commission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Commission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Commission;
                fromJSON(object: any): _68.Commission;
                toJSON(message: _68.Commission): unknown;
                fromPartial(object: {
                    commissionRates?: {
                        rate?: string;
                        maxRate?: string;
                        maxChangeRate?: string;
                    };
                    updateTime?: Date;
                }): _68.Commission;
                fromSDK(object: _68.CommissionSDKType): _68.Commission;
                toSDK(message: _68.Commission): _68.CommissionSDKType;
                fromAmino(object: _68.CommissionAmino): _68.Commission;
                toAmino(message: _68.Commission): _68.CommissionAmino;
                fromAminoMsg(object: _68.CommissionAminoMsg): _68.Commission;
                toAminoMsg(message: _68.Commission): _68.CommissionAminoMsg;
                fromProtoMsg(message: _68.CommissionProtoMsg): _68.Commission;
                toProto(message: _68.Commission): Uint8Array;
                toProtoMsg(message: _68.Commission): _68.CommissionProtoMsg;
            };
            Description: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Description, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Description;
                fromJSON(object: any): _68.Description;
                toJSON(message: _68.Description): unknown;
                fromPartial(object: {
                    moniker?: string;
                    identity?: string;
                    website?: string;
                    securityContact?: string;
                    details?: string;
                }): _68.Description;
                fromSDK(object: _68.DescriptionSDKType): _68.Description;
                toSDK(message: _68.Description): _68.DescriptionSDKType;
                fromAmino(object: _68.DescriptionAmino): _68.Description;
                toAmino(message: _68.Description): _68.DescriptionAmino;
                fromAminoMsg(object: _68.DescriptionAminoMsg): _68.Description;
                toAminoMsg(message: _68.Description): _68.DescriptionAminoMsg;
                fromProtoMsg(message: _68.DescriptionProtoMsg): _68.Description;
                toProto(message: _68.Description): Uint8Array;
                toProtoMsg(message: _68.Description): _68.DescriptionProtoMsg;
            };
            Validator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Validator;
                fromJSON(object: any): _68.Validator;
                toJSON(message: _68.Validator): unknown;
                fromPartial(object: {
                    operatorAddress?: string;
                    consensusPubkey?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    jailed?: boolean;
                    status?: _68.BondStatus;
                    tokens?: string;
                    delegatorShares?: string;
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    unbondingHeight?: bigint;
                    unbondingTime?: Date;
                    commission?: {
                        commissionRates?: {
                            rate?: string;
                            maxRate?: string;
                            maxChangeRate?: string;
                        };
                        updateTime?: Date;
                    };
                    minSelfDelegation?: string;
                }): _68.Validator;
                fromSDK(object: _68.ValidatorSDKType): _68.Validator;
                toSDK(message: _68.Validator): _68.ValidatorSDKType;
                fromAmino(object: _68.ValidatorAmino): _68.Validator;
                toAmino(message: _68.Validator): _68.ValidatorAmino;
                fromAminoMsg(object: _68.ValidatorAminoMsg): _68.Validator;
                toAminoMsg(message: _68.Validator): _68.ValidatorAminoMsg;
                fromProtoMsg(message: _68.ValidatorProtoMsg): _68.Validator;
                toProto(message: _68.Validator): Uint8Array;
                toProtoMsg(message: _68.Validator): _68.ValidatorProtoMsg;
            };
            ValAddresses: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.ValAddresses, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.ValAddresses;
                fromJSON(object: any): _68.ValAddresses;
                toJSON(message: _68.ValAddresses): unknown;
                fromPartial(object: {
                    addresses?: string[];
                }): _68.ValAddresses;
                fromSDK(object: _68.ValAddressesSDKType): _68.ValAddresses;
                toSDK(message: _68.ValAddresses): _68.ValAddressesSDKType;
                fromAmino(object: _68.ValAddressesAmino): _68.ValAddresses;
                toAmino(message: _68.ValAddresses): _68.ValAddressesAmino;
                fromAminoMsg(object: _68.ValAddressesAminoMsg): _68.ValAddresses;
                toAminoMsg(message: _68.ValAddresses): _68.ValAddressesAminoMsg;
                fromProtoMsg(message: _68.ValAddressesProtoMsg): _68.ValAddresses;
                toProto(message: _68.ValAddresses): Uint8Array;
                toProtoMsg(message: _68.ValAddresses): _68.ValAddressesProtoMsg;
            };
            DVPair: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.DVPair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.DVPair;
                fromJSON(object: any): _68.DVPair;
                toJSON(message: _68.DVPair): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _68.DVPair;
                fromSDK(object: _68.DVPairSDKType): _68.DVPair;
                toSDK(message: _68.DVPair): _68.DVPairSDKType;
                fromAmino(object: _68.DVPairAmino): _68.DVPair;
                toAmino(message: _68.DVPair): _68.DVPairAmino;
                fromAminoMsg(object: _68.DVPairAminoMsg): _68.DVPair;
                toAminoMsg(message: _68.DVPair): _68.DVPairAminoMsg;
                fromProtoMsg(message: _68.DVPairProtoMsg): _68.DVPair;
                toProto(message: _68.DVPair): Uint8Array;
                toProtoMsg(message: _68.DVPair): _68.DVPairProtoMsg;
            };
            DVPairs: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.DVPairs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.DVPairs;
                fromJSON(object: any): _68.DVPairs;
                toJSON(message: _68.DVPairs): unknown;
                fromPartial(object: {
                    pairs?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                    }[];
                }): _68.DVPairs;
                fromSDK(object: _68.DVPairsSDKType): _68.DVPairs;
                toSDK(message: _68.DVPairs): _68.DVPairsSDKType;
                fromAmino(object: _68.DVPairsAmino): _68.DVPairs;
                toAmino(message: _68.DVPairs): _68.DVPairsAmino;
                fromAminoMsg(object: _68.DVPairsAminoMsg): _68.DVPairs;
                toAminoMsg(message: _68.DVPairs): _68.DVPairsAminoMsg;
                fromProtoMsg(message: _68.DVPairsProtoMsg): _68.DVPairs;
                toProto(message: _68.DVPairs): Uint8Array;
                toProtoMsg(message: _68.DVPairs): _68.DVPairsProtoMsg;
            };
            DVVTriplet: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.DVVTriplet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.DVVTriplet;
                fromJSON(object: any): _68.DVVTriplet;
                toJSON(message: _68.DVVTriplet): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                }): _68.DVVTriplet;
                fromSDK(object: _68.DVVTripletSDKType): _68.DVVTriplet;
                toSDK(message: _68.DVVTriplet): _68.DVVTripletSDKType;
                fromAmino(object: _68.DVVTripletAmino): _68.DVVTriplet;
                toAmino(message: _68.DVVTriplet): _68.DVVTripletAmino;
                fromAminoMsg(object: _68.DVVTripletAminoMsg): _68.DVVTriplet;
                toAminoMsg(message: _68.DVVTriplet): _68.DVVTripletAminoMsg;
                fromProtoMsg(message: _68.DVVTripletProtoMsg): _68.DVVTriplet;
                toProto(message: _68.DVVTriplet): Uint8Array;
                toProtoMsg(message: _68.DVVTriplet): _68.DVVTripletProtoMsg;
            };
            DVVTriplets: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.DVVTriplets, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.DVVTriplets;
                fromJSON(object: any): _68.DVVTriplets;
                toJSON(message: _68.DVVTriplets): unknown;
                fromPartial(object: {
                    triplets?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                    }[];
                }): _68.DVVTriplets;
                fromSDK(object: _68.DVVTripletsSDKType): _68.DVVTriplets;
                toSDK(message: _68.DVVTriplets): _68.DVVTripletsSDKType;
                fromAmino(object: _68.DVVTripletsAmino): _68.DVVTriplets;
                toAmino(message: _68.DVVTriplets): _68.DVVTripletsAmino;
                fromAminoMsg(object: _68.DVVTripletsAminoMsg): _68.DVVTriplets;
                toAminoMsg(message: _68.DVVTriplets): _68.DVVTripletsAminoMsg;
                fromProtoMsg(message: _68.DVVTripletsProtoMsg): _68.DVVTriplets;
                toProto(message: _68.DVVTriplets): Uint8Array;
                toProtoMsg(message: _68.DVVTriplets): _68.DVVTripletsProtoMsg;
            };
            Delegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Delegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Delegation;
                fromJSON(object: any): _68.Delegation;
                toJSON(message: _68.Delegation): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    shares?: string;
                }): _68.Delegation;
                fromSDK(object: _68.DelegationSDKType): _68.Delegation;
                toSDK(message: _68.Delegation): _68.DelegationSDKType;
                fromAmino(object: _68.DelegationAmino): _68.Delegation;
                toAmino(message: _68.Delegation): _68.DelegationAmino;
                fromAminoMsg(object: _68.DelegationAminoMsg): _68.Delegation;
                toAminoMsg(message: _68.Delegation): _68.DelegationAminoMsg;
                fromProtoMsg(message: _68.DelegationProtoMsg): _68.Delegation;
                toProto(message: _68.Delegation): Uint8Array;
                toProtoMsg(message: _68.Delegation): _68.DelegationProtoMsg;
            };
            UnbondingDelegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.UnbondingDelegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.UnbondingDelegation;
                fromJSON(object: any): _68.UnbondingDelegation;
                toJSON(message: _68.UnbondingDelegation): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    entries?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        balance?: string;
                    }[];
                }): _68.UnbondingDelegation;
                fromSDK(object: _68.UnbondingDelegationSDKType): _68.UnbondingDelegation;
                toSDK(message: _68.UnbondingDelegation): _68.UnbondingDelegationSDKType;
                fromAmino(object: _68.UnbondingDelegationAmino): _68.UnbondingDelegation;
                toAmino(message: _68.UnbondingDelegation): _68.UnbondingDelegationAmino;
                fromAminoMsg(object: _68.UnbondingDelegationAminoMsg): _68.UnbondingDelegation;
                toAminoMsg(message: _68.UnbondingDelegation): _68.UnbondingDelegationAminoMsg;
                fromProtoMsg(message: _68.UnbondingDelegationProtoMsg): _68.UnbondingDelegation;
                toProto(message: _68.UnbondingDelegation): Uint8Array;
                toProtoMsg(message: _68.UnbondingDelegation): _68.UnbondingDelegationProtoMsg;
            };
            UnbondingDelegationEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.UnbondingDelegationEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.UnbondingDelegationEntry;
                fromJSON(object: any): _68.UnbondingDelegationEntry;
                toJSON(message: _68.UnbondingDelegationEntry): unknown;
                fromPartial(object: {
                    creationHeight?: bigint;
                    completionTime?: Date;
                    initialBalance?: string;
                    balance?: string;
                }): _68.UnbondingDelegationEntry;
                fromSDK(object: _68.UnbondingDelegationEntrySDKType): _68.UnbondingDelegationEntry;
                toSDK(message: _68.UnbondingDelegationEntry): _68.UnbondingDelegationEntrySDKType;
                fromAmino(object: _68.UnbondingDelegationEntryAmino): _68.UnbondingDelegationEntry;
                toAmino(message: _68.UnbondingDelegationEntry): _68.UnbondingDelegationEntryAmino;
                fromAminoMsg(object: _68.UnbondingDelegationEntryAminoMsg): _68.UnbondingDelegationEntry;
                toAminoMsg(message: _68.UnbondingDelegationEntry): _68.UnbondingDelegationEntryAminoMsg;
                fromProtoMsg(message: _68.UnbondingDelegationEntryProtoMsg): _68.UnbondingDelegationEntry;
                toProto(message: _68.UnbondingDelegationEntry): Uint8Array;
                toProtoMsg(message: _68.UnbondingDelegationEntry): _68.UnbondingDelegationEntryProtoMsg;
            };
            RedelegationEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.RedelegationEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.RedelegationEntry;
                fromJSON(object: any): _68.RedelegationEntry;
                toJSON(message: _68.RedelegationEntry): unknown;
                fromPartial(object: {
                    creationHeight?: bigint;
                    completionTime?: Date;
                    initialBalance?: string;
                    sharesDst?: string;
                }): _68.RedelegationEntry;
                fromSDK(object: _68.RedelegationEntrySDKType): _68.RedelegationEntry;
                toSDK(message: _68.RedelegationEntry): _68.RedelegationEntrySDKType;
                fromAmino(object: _68.RedelegationEntryAmino): _68.RedelegationEntry;
                toAmino(message: _68.RedelegationEntry): _68.RedelegationEntryAmino;
                fromAminoMsg(object: _68.RedelegationEntryAminoMsg): _68.RedelegationEntry;
                toAminoMsg(message: _68.RedelegationEntry): _68.RedelegationEntryAminoMsg;
                fromProtoMsg(message: _68.RedelegationEntryProtoMsg): _68.RedelegationEntry;
                toProto(message: _68.RedelegationEntry): Uint8Array;
                toProtoMsg(message: _68.RedelegationEntry): _68.RedelegationEntryProtoMsg;
            };
            Redelegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Redelegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Redelegation;
                fromJSON(object: any): _68.Redelegation;
                toJSON(message: _68.Redelegation): unknown;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                    entries?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        sharesDst?: string;
                    }[];
                }): _68.Redelegation;
                fromSDK(object: _68.RedelegationSDKType): _68.Redelegation;
                toSDK(message: _68.Redelegation): _68.RedelegationSDKType;
                fromAmino(object: _68.RedelegationAmino): _68.Redelegation;
                toAmino(message: _68.Redelegation): _68.RedelegationAmino;
                fromAminoMsg(object: _68.RedelegationAminoMsg): _68.Redelegation;
                toAminoMsg(message: _68.Redelegation): _68.RedelegationAminoMsg;
                fromProtoMsg(message: _68.RedelegationProtoMsg): _68.Redelegation;
                toProto(message: _68.Redelegation): Uint8Array;
                toProtoMsg(message: _68.Redelegation): _68.RedelegationProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Params;
                fromJSON(object: any): _68.Params;
                toJSON(message: _68.Params): unknown;
                fromPartial(object: {
                    unbondingTime?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    maxValidators?: number;
                    maxEntries?: number;
                    historicalEntries?: number;
                    bondDenom?: string;
                    minCommissionRate?: string;
                    minSelfDelegation?: string;
                }): _68.Params;
                fromSDK(object: _68.ParamsSDKType): _68.Params;
                toSDK(message: _68.Params): _68.ParamsSDKType;
                fromAmino(object: _68.ParamsAmino): _68.Params;
                toAmino(message: _68.Params): _68.ParamsAmino;
                fromAminoMsg(object: _68.ParamsAminoMsg): _68.Params;
                toAminoMsg(message: _68.Params): _68.ParamsAminoMsg;
                fromProtoMsg(message: _68.ParamsProtoMsg): _68.Params;
                toProto(message: _68.Params): Uint8Array;
                toProtoMsg(message: _68.Params): _68.ParamsProtoMsg;
            };
            DelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.DelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.DelegationResponse;
                fromJSON(object: any): _68.DelegationResponse;
                toJSON(message: _68.DelegationResponse): unknown;
                fromPartial(object: {
                    delegation?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        shares?: string;
                    };
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _68.DelegationResponse;
                fromSDK(object: _68.DelegationResponseSDKType): _68.DelegationResponse;
                toSDK(message: _68.DelegationResponse): _68.DelegationResponseSDKType;
                fromAmino(object: _68.DelegationResponseAmino): _68.DelegationResponse;
                toAmino(message: _68.DelegationResponse): _68.DelegationResponseAmino;
                fromAminoMsg(object: _68.DelegationResponseAminoMsg): _68.DelegationResponse;
                toAminoMsg(message: _68.DelegationResponse): _68.DelegationResponseAminoMsg;
                fromProtoMsg(message: _68.DelegationResponseProtoMsg): _68.DelegationResponse;
                toProto(message: _68.DelegationResponse): Uint8Array;
                toProtoMsg(message: _68.DelegationResponse): _68.DelegationResponseProtoMsg;
            };
            RedelegationEntryResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.RedelegationEntryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.RedelegationEntryResponse;
                fromJSON(object: any): _68.RedelegationEntryResponse;
                toJSON(message: _68.RedelegationEntryResponse): unknown;
                fromPartial(object: {
                    redelegationEntry?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        sharesDst?: string;
                    };
                    balance?: string;
                }): _68.RedelegationEntryResponse;
                fromSDK(object: _68.RedelegationEntryResponseSDKType): _68.RedelegationEntryResponse;
                toSDK(message: _68.RedelegationEntryResponse): _68.RedelegationEntryResponseSDKType;
                fromAmino(object: _68.RedelegationEntryResponseAmino): _68.RedelegationEntryResponse;
                toAmino(message: _68.RedelegationEntryResponse): _68.RedelegationEntryResponseAmino;
                fromAminoMsg(object: _68.RedelegationEntryResponseAminoMsg): _68.RedelegationEntryResponse;
                toAminoMsg(message: _68.RedelegationEntryResponse): _68.RedelegationEntryResponseAminoMsg;
                fromProtoMsg(message: _68.RedelegationEntryResponseProtoMsg): _68.RedelegationEntryResponse;
                toProto(message: _68.RedelegationEntryResponse): Uint8Array;
                toProtoMsg(message: _68.RedelegationEntryResponse): _68.RedelegationEntryResponseProtoMsg;
            };
            RedelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.RedelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.RedelegationResponse;
                fromJSON(object: any): _68.RedelegationResponse;
                toJSON(message: _68.RedelegationResponse): unknown;
                fromPartial(object: {
                    redelegation?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                        }[];
                    };
                    entries?: {
                        redelegationEntry?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                        };
                        balance?: string;
                    }[];
                }): _68.RedelegationResponse;
                fromSDK(object: _68.RedelegationResponseSDKType): _68.RedelegationResponse;
                toSDK(message: _68.RedelegationResponse): _68.RedelegationResponseSDKType;
                fromAmino(object: _68.RedelegationResponseAmino): _68.RedelegationResponse;
                toAmino(message: _68.RedelegationResponse): _68.RedelegationResponseAmino;
                fromAminoMsg(object: _68.RedelegationResponseAminoMsg): _68.RedelegationResponse;
                toAminoMsg(message: _68.RedelegationResponse): _68.RedelegationResponseAminoMsg;
                fromProtoMsg(message: _68.RedelegationResponseProtoMsg): _68.RedelegationResponse;
                toProto(message: _68.RedelegationResponse): Uint8Array;
                toProtoMsg(message: _68.RedelegationResponse): _68.RedelegationResponseProtoMsg;
            };
            Pool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _68.Pool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Pool;
                fromJSON(object: any): _68.Pool;
                toJSON(message: _68.Pool): unknown;
                fromPartial(object: {
                    notBondedTokens?: string;
                    bondedTokens?: string;
                }): _68.Pool;
                fromSDK(object: _68.PoolSDKType): _68.Pool;
                toSDK(message: _68.Pool): _68.PoolSDKType;
                fromAmino(object: _68.PoolAmino): _68.Pool;
                toAmino(message: _68.Pool): _68.PoolAmino;
                fromAminoMsg(object: _68.PoolAminoMsg): _68.Pool;
                toAminoMsg(message: _68.Pool): _68.PoolAminoMsg;
                fromProtoMsg(message: _68.PoolProtoMsg): _68.Pool;
                toProto(message: _68.Pool): Uint8Array;
                toProtoMsg(message: _68.Pool): _68.PoolProtoMsg;
            };
            QueryValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorsRequest;
                fromJSON(object: any): _67.QueryValidatorsRequest;
                toJSON(message: _67.QueryValidatorsRequest): unknown;
                fromPartial(object: {
                    status?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryValidatorsRequest;
                fromSDK(object: _67.QueryValidatorsRequestSDKType): _67.QueryValidatorsRequest;
                toSDK(message: _67.QueryValidatorsRequest): _67.QueryValidatorsRequestSDKType;
                fromAmino(object: _67.QueryValidatorsRequestAmino): _67.QueryValidatorsRequest;
                toAmino(message: _67.QueryValidatorsRequest): _67.QueryValidatorsRequestAmino;
                fromAminoMsg(object: _67.QueryValidatorsRequestAminoMsg): _67.QueryValidatorsRequest;
                toAminoMsg(message: _67.QueryValidatorsRequest): _67.QueryValidatorsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorsRequestProtoMsg): _67.QueryValidatorsRequest;
                toProto(message: _67.QueryValidatorsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorsRequest): _67.QueryValidatorsRequestProtoMsg;
            };
            QueryValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorsResponse;
                fromJSON(object: any): _67.QueryValidatorsResponse;
                toJSON(message: _67.QueryValidatorsResponse): unknown;
                fromPartial(object: {
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryValidatorsResponse;
                fromSDK(object: _67.QueryValidatorsResponseSDKType): _67.QueryValidatorsResponse;
                toSDK(message: _67.QueryValidatorsResponse): _67.QueryValidatorsResponseSDKType;
                fromAmino(object: _67.QueryValidatorsResponseAmino): _67.QueryValidatorsResponse;
                toAmino(message: _67.QueryValidatorsResponse): _67.QueryValidatorsResponseAmino;
                fromAminoMsg(object: _67.QueryValidatorsResponseAminoMsg): _67.QueryValidatorsResponse;
                toAminoMsg(message: _67.QueryValidatorsResponse): _67.QueryValidatorsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorsResponseProtoMsg): _67.QueryValidatorsResponse;
                toProto(message: _67.QueryValidatorsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorsResponse): _67.QueryValidatorsResponseProtoMsg;
            };
            QueryValidatorRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorRequest;
                fromJSON(object: any): _67.QueryValidatorRequest;
                toJSON(message: _67.QueryValidatorRequest): unknown;
                fromPartial(object: {
                    validatorAddr?: string;
                }): _67.QueryValidatorRequest;
                fromSDK(object: _67.QueryValidatorRequestSDKType): _67.QueryValidatorRequest;
                toSDK(message: _67.QueryValidatorRequest): _67.QueryValidatorRequestSDKType;
                fromAmino(object: _67.QueryValidatorRequestAmino): _67.QueryValidatorRequest;
                toAmino(message: _67.QueryValidatorRequest): _67.QueryValidatorRequestAmino;
                fromAminoMsg(object: _67.QueryValidatorRequestAminoMsg): _67.QueryValidatorRequest;
                toAminoMsg(message: _67.QueryValidatorRequest): _67.QueryValidatorRequestAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorRequestProtoMsg): _67.QueryValidatorRequest;
                toProto(message: _67.QueryValidatorRequest): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorRequest): _67.QueryValidatorRequestProtoMsg;
            };
            QueryValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorResponse;
                fromJSON(object: any): _67.QueryValidatorResponse;
                toJSON(message: _67.QueryValidatorResponse): unknown;
                fromPartial(object: {
                    validator?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    };
                }): _67.QueryValidatorResponse;
                fromSDK(object: _67.QueryValidatorResponseSDKType): _67.QueryValidatorResponse;
                toSDK(message: _67.QueryValidatorResponse): _67.QueryValidatorResponseSDKType;
                fromAmino(object: _67.QueryValidatorResponseAmino): _67.QueryValidatorResponse;
                toAmino(message: _67.QueryValidatorResponse): _67.QueryValidatorResponseAmino;
                fromAminoMsg(object: _67.QueryValidatorResponseAminoMsg): _67.QueryValidatorResponse;
                toAminoMsg(message: _67.QueryValidatorResponse): _67.QueryValidatorResponseAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorResponseProtoMsg): _67.QueryValidatorResponse;
                toProto(message: _67.QueryValidatorResponse): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorResponse): _67.QueryValidatorResponseProtoMsg;
            };
            QueryValidatorDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorDelegationsRequest;
                fromJSON(object: any): _67.QueryValidatorDelegationsRequest;
                toJSON(message: _67.QueryValidatorDelegationsRequest): unknown;
                fromPartial(object: {
                    validatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryValidatorDelegationsRequest;
                fromSDK(object: _67.QueryValidatorDelegationsRequestSDKType): _67.QueryValidatorDelegationsRequest;
                toSDK(message: _67.QueryValidatorDelegationsRequest): _67.QueryValidatorDelegationsRequestSDKType;
                fromAmino(object: _67.QueryValidatorDelegationsRequestAmino): _67.QueryValidatorDelegationsRequest;
                toAmino(message: _67.QueryValidatorDelegationsRequest): _67.QueryValidatorDelegationsRequestAmino;
                fromAminoMsg(object: _67.QueryValidatorDelegationsRequestAminoMsg): _67.QueryValidatorDelegationsRequest;
                toAminoMsg(message: _67.QueryValidatorDelegationsRequest): _67.QueryValidatorDelegationsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorDelegationsRequestProtoMsg): _67.QueryValidatorDelegationsRequest;
                toProto(message: _67.QueryValidatorDelegationsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorDelegationsRequest): _67.QueryValidatorDelegationsRequestProtoMsg;
            };
            QueryValidatorDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorDelegationsResponse;
                fromJSON(object: any): _67.QueryValidatorDelegationsResponse;
                toJSON(message: _67.QueryValidatorDelegationsResponse): unknown;
                fromPartial(object: {
                    delegationResponses?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryValidatorDelegationsResponse;
                fromSDK(object: _67.QueryValidatorDelegationsResponseSDKType): _67.QueryValidatorDelegationsResponse;
                toSDK(message: _67.QueryValidatorDelegationsResponse): _67.QueryValidatorDelegationsResponseSDKType;
                fromAmino(object: _67.QueryValidatorDelegationsResponseAmino): _67.QueryValidatorDelegationsResponse;
                toAmino(message: _67.QueryValidatorDelegationsResponse): _67.QueryValidatorDelegationsResponseAmino;
                fromAminoMsg(object: _67.QueryValidatorDelegationsResponseAminoMsg): _67.QueryValidatorDelegationsResponse;
                toAminoMsg(message: _67.QueryValidatorDelegationsResponse): _67.QueryValidatorDelegationsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorDelegationsResponseProtoMsg): _67.QueryValidatorDelegationsResponse;
                toProto(message: _67.QueryValidatorDelegationsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorDelegationsResponse): _67.QueryValidatorDelegationsResponseProtoMsg;
            };
            QueryValidatorUnbondingDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorUnbondingDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorUnbondingDelegationsRequest;
                fromJSON(object: any): _67.QueryValidatorUnbondingDelegationsRequest;
                toJSON(message: _67.QueryValidatorUnbondingDelegationsRequest): unknown;
                fromPartial(object: {
                    validatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryValidatorUnbondingDelegationsRequest;
                fromSDK(object: _67.QueryValidatorUnbondingDelegationsRequestSDKType): _67.QueryValidatorUnbondingDelegationsRequest;
                toSDK(message: _67.QueryValidatorUnbondingDelegationsRequest): _67.QueryValidatorUnbondingDelegationsRequestSDKType;
                fromAmino(object: _67.QueryValidatorUnbondingDelegationsRequestAmino): _67.QueryValidatorUnbondingDelegationsRequest;
                toAmino(message: _67.QueryValidatorUnbondingDelegationsRequest): _67.QueryValidatorUnbondingDelegationsRequestAmino;
                fromAminoMsg(object: _67.QueryValidatorUnbondingDelegationsRequestAminoMsg): _67.QueryValidatorUnbondingDelegationsRequest;
                toAminoMsg(message: _67.QueryValidatorUnbondingDelegationsRequest): _67.QueryValidatorUnbondingDelegationsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorUnbondingDelegationsRequestProtoMsg): _67.QueryValidatorUnbondingDelegationsRequest;
                toProto(message: _67.QueryValidatorUnbondingDelegationsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorUnbondingDelegationsRequest): _67.QueryValidatorUnbondingDelegationsRequestProtoMsg;
            };
            QueryValidatorUnbondingDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryValidatorUnbondingDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryValidatorUnbondingDelegationsResponse;
                fromJSON(object: any): _67.QueryValidatorUnbondingDelegationsResponse;
                toJSON(message: _67.QueryValidatorUnbondingDelegationsResponse): unknown;
                fromPartial(object: {
                    unbondingResponses?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryValidatorUnbondingDelegationsResponse;
                fromSDK(object: _67.QueryValidatorUnbondingDelegationsResponseSDKType): _67.QueryValidatorUnbondingDelegationsResponse;
                toSDK(message: _67.QueryValidatorUnbondingDelegationsResponse): _67.QueryValidatorUnbondingDelegationsResponseSDKType;
                fromAmino(object: _67.QueryValidatorUnbondingDelegationsResponseAmino): _67.QueryValidatorUnbondingDelegationsResponse;
                toAmino(message: _67.QueryValidatorUnbondingDelegationsResponse): _67.QueryValidatorUnbondingDelegationsResponseAmino;
                fromAminoMsg(object: _67.QueryValidatorUnbondingDelegationsResponseAminoMsg): _67.QueryValidatorUnbondingDelegationsResponse;
                toAminoMsg(message: _67.QueryValidatorUnbondingDelegationsResponse): _67.QueryValidatorUnbondingDelegationsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryValidatorUnbondingDelegationsResponseProtoMsg): _67.QueryValidatorUnbondingDelegationsResponse;
                toProto(message: _67.QueryValidatorUnbondingDelegationsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryValidatorUnbondingDelegationsResponse): _67.QueryValidatorUnbondingDelegationsResponseProtoMsg;
            };
            QueryDelegationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegationRequest;
                fromJSON(object: any): _67.QueryDelegationRequest;
                toJSON(message: _67.QueryDelegationRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _67.QueryDelegationRequest;
                fromSDK(object: _67.QueryDelegationRequestSDKType): _67.QueryDelegationRequest;
                toSDK(message: _67.QueryDelegationRequest): _67.QueryDelegationRequestSDKType;
                fromAmino(object: _67.QueryDelegationRequestAmino): _67.QueryDelegationRequest;
                toAmino(message: _67.QueryDelegationRequest): _67.QueryDelegationRequestAmino;
                fromAminoMsg(object: _67.QueryDelegationRequestAminoMsg): _67.QueryDelegationRequest;
                toAminoMsg(message: _67.QueryDelegationRequest): _67.QueryDelegationRequestAminoMsg;
                fromProtoMsg(message: _67.QueryDelegationRequestProtoMsg): _67.QueryDelegationRequest;
                toProto(message: _67.QueryDelegationRequest): Uint8Array;
                toProtoMsg(message: _67.QueryDelegationRequest): _67.QueryDelegationRequestProtoMsg;
            };
            QueryDelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegationResponse;
                fromJSON(object: any): _67.QueryDelegationResponse;
                toJSON(message: _67.QueryDelegationResponse): unknown;
                fromPartial(object: {
                    delegationResponse?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    };
                }): _67.QueryDelegationResponse;
                fromSDK(object: _67.QueryDelegationResponseSDKType): _67.QueryDelegationResponse;
                toSDK(message: _67.QueryDelegationResponse): _67.QueryDelegationResponseSDKType;
                fromAmino(object: _67.QueryDelegationResponseAmino): _67.QueryDelegationResponse;
                toAmino(message: _67.QueryDelegationResponse): _67.QueryDelegationResponseAmino;
                fromAminoMsg(object: _67.QueryDelegationResponseAminoMsg): _67.QueryDelegationResponse;
                toAminoMsg(message: _67.QueryDelegationResponse): _67.QueryDelegationResponseAminoMsg;
                fromProtoMsg(message: _67.QueryDelegationResponseProtoMsg): _67.QueryDelegationResponse;
                toProto(message: _67.QueryDelegationResponse): Uint8Array;
                toProtoMsg(message: _67.QueryDelegationResponse): _67.QueryDelegationResponseProtoMsg;
            };
            QueryUnbondingDelegationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryUnbondingDelegationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryUnbondingDelegationRequest;
                fromJSON(object: any): _67.QueryUnbondingDelegationRequest;
                toJSON(message: _67.QueryUnbondingDelegationRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _67.QueryUnbondingDelegationRequest;
                fromSDK(object: _67.QueryUnbondingDelegationRequestSDKType): _67.QueryUnbondingDelegationRequest;
                toSDK(message: _67.QueryUnbondingDelegationRequest): _67.QueryUnbondingDelegationRequestSDKType;
                fromAmino(object: _67.QueryUnbondingDelegationRequestAmino): _67.QueryUnbondingDelegationRequest;
                toAmino(message: _67.QueryUnbondingDelegationRequest): _67.QueryUnbondingDelegationRequestAmino;
                fromAminoMsg(object: _67.QueryUnbondingDelegationRequestAminoMsg): _67.QueryUnbondingDelegationRequest;
                toAminoMsg(message: _67.QueryUnbondingDelegationRequest): _67.QueryUnbondingDelegationRequestAminoMsg;
                fromProtoMsg(message: _67.QueryUnbondingDelegationRequestProtoMsg): _67.QueryUnbondingDelegationRequest;
                toProto(message: _67.QueryUnbondingDelegationRequest): Uint8Array;
                toProtoMsg(message: _67.QueryUnbondingDelegationRequest): _67.QueryUnbondingDelegationRequestProtoMsg;
            };
            QueryUnbondingDelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryUnbondingDelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryUnbondingDelegationResponse;
                fromJSON(object: any): _67.QueryUnbondingDelegationResponse;
                toJSON(message: _67.QueryUnbondingDelegationResponse): unknown;
                fromPartial(object: {
                    unbond?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                        }[];
                    };
                }): _67.QueryUnbondingDelegationResponse;
                fromSDK(object: _67.QueryUnbondingDelegationResponseSDKType): _67.QueryUnbondingDelegationResponse;
                toSDK(message: _67.QueryUnbondingDelegationResponse): _67.QueryUnbondingDelegationResponseSDKType;
                fromAmino(object: _67.QueryUnbondingDelegationResponseAmino): _67.QueryUnbondingDelegationResponse;
                toAmino(message: _67.QueryUnbondingDelegationResponse): _67.QueryUnbondingDelegationResponseAmino;
                fromAminoMsg(object: _67.QueryUnbondingDelegationResponseAminoMsg): _67.QueryUnbondingDelegationResponse;
                toAminoMsg(message: _67.QueryUnbondingDelegationResponse): _67.QueryUnbondingDelegationResponseAminoMsg;
                fromProtoMsg(message: _67.QueryUnbondingDelegationResponseProtoMsg): _67.QueryUnbondingDelegationResponse;
                toProto(message: _67.QueryUnbondingDelegationResponse): Uint8Array;
                toProtoMsg(message: _67.QueryUnbondingDelegationResponse): _67.QueryUnbondingDelegationResponseProtoMsg;
            };
            QueryDelegatorDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorDelegationsRequest;
                fromJSON(object: any): _67.QueryDelegatorDelegationsRequest;
                toJSON(message: _67.QueryDelegatorDelegationsRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryDelegatorDelegationsRequest;
                fromSDK(object: _67.QueryDelegatorDelegationsRequestSDKType): _67.QueryDelegatorDelegationsRequest;
                toSDK(message: _67.QueryDelegatorDelegationsRequest): _67.QueryDelegatorDelegationsRequestSDKType;
                fromAmino(object: _67.QueryDelegatorDelegationsRequestAmino): _67.QueryDelegatorDelegationsRequest;
                toAmino(message: _67.QueryDelegatorDelegationsRequest): _67.QueryDelegatorDelegationsRequestAmino;
                fromAminoMsg(object: _67.QueryDelegatorDelegationsRequestAminoMsg): _67.QueryDelegatorDelegationsRequest;
                toAminoMsg(message: _67.QueryDelegatorDelegationsRequest): _67.QueryDelegatorDelegationsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorDelegationsRequestProtoMsg): _67.QueryDelegatorDelegationsRequest;
                toProto(message: _67.QueryDelegatorDelegationsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorDelegationsRequest): _67.QueryDelegatorDelegationsRequestProtoMsg;
            };
            QueryDelegatorDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorDelegationsResponse;
                fromJSON(object: any): _67.QueryDelegatorDelegationsResponse;
                toJSON(message: _67.QueryDelegatorDelegationsResponse): unknown;
                fromPartial(object: {
                    delegationResponses?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryDelegatorDelegationsResponse;
                fromSDK(object: _67.QueryDelegatorDelegationsResponseSDKType): _67.QueryDelegatorDelegationsResponse;
                toSDK(message: _67.QueryDelegatorDelegationsResponse): _67.QueryDelegatorDelegationsResponseSDKType;
                fromAmino(object: _67.QueryDelegatorDelegationsResponseAmino): _67.QueryDelegatorDelegationsResponse;
                toAmino(message: _67.QueryDelegatorDelegationsResponse): _67.QueryDelegatorDelegationsResponseAmino;
                fromAminoMsg(object: _67.QueryDelegatorDelegationsResponseAminoMsg): _67.QueryDelegatorDelegationsResponse;
                toAminoMsg(message: _67.QueryDelegatorDelegationsResponse): _67.QueryDelegatorDelegationsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorDelegationsResponseProtoMsg): _67.QueryDelegatorDelegationsResponse;
                toProto(message: _67.QueryDelegatorDelegationsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorDelegationsResponse): _67.QueryDelegatorDelegationsResponseProtoMsg;
            };
            QueryDelegatorUnbondingDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorUnbondingDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorUnbondingDelegationsRequest;
                fromJSON(object: any): _67.QueryDelegatorUnbondingDelegationsRequest;
                toJSON(message: _67.QueryDelegatorUnbondingDelegationsRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryDelegatorUnbondingDelegationsRequest;
                fromSDK(object: _67.QueryDelegatorUnbondingDelegationsRequestSDKType): _67.QueryDelegatorUnbondingDelegationsRequest;
                toSDK(message: _67.QueryDelegatorUnbondingDelegationsRequest): _67.QueryDelegatorUnbondingDelegationsRequestSDKType;
                fromAmino(object: _67.QueryDelegatorUnbondingDelegationsRequestAmino): _67.QueryDelegatorUnbondingDelegationsRequest;
                toAmino(message: _67.QueryDelegatorUnbondingDelegationsRequest): _67.QueryDelegatorUnbondingDelegationsRequestAmino;
                fromAminoMsg(object: _67.QueryDelegatorUnbondingDelegationsRequestAminoMsg): _67.QueryDelegatorUnbondingDelegationsRequest;
                toAminoMsg(message: _67.QueryDelegatorUnbondingDelegationsRequest): _67.QueryDelegatorUnbondingDelegationsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorUnbondingDelegationsRequestProtoMsg): _67.QueryDelegatorUnbondingDelegationsRequest;
                toProto(message: _67.QueryDelegatorUnbondingDelegationsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorUnbondingDelegationsRequest): _67.QueryDelegatorUnbondingDelegationsRequestProtoMsg;
            };
            QueryDelegatorUnbondingDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorUnbondingDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorUnbondingDelegationsResponse;
                fromJSON(object: any): _67.QueryDelegatorUnbondingDelegationsResponse;
                toJSON(message: _67.QueryDelegatorUnbondingDelegationsResponse): unknown;
                fromPartial(object: {
                    unbondingResponses?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryDelegatorUnbondingDelegationsResponse;
                fromSDK(object: _67.QueryDelegatorUnbondingDelegationsResponseSDKType): _67.QueryDelegatorUnbondingDelegationsResponse;
                toSDK(message: _67.QueryDelegatorUnbondingDelegationsResponse): _67.QueryDelegatorUnbondingDelegationsResponseSDKType;
                fromAmino(object: _67.QueryDelegatorUnbondingDelegationsResponseAmino): _67.QueryDelegatorUnbondingDelegationsResponse;
                toAmino(message: _67.QueryDelegatorUnbondingDelegationsResponse): _67.QueryDelegatorUnbondingDelegationsResponseAmino;
                fromAminoMsg(object: _67.QueryDelegatorUnbondingDelegationsResponseAminoMsg): _67.QueryDelegatorUnbondingDelegationsResponse;
                toAminoMsg(message: _67.QueryDelegatorUnbondingDelegationsResponse): _67.QueryDelegatorUnbondingDelegationsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorUnbondingDelegationsResponseProtoMsg): _67.QueryDelegatorUnbondingDelegationsResponse;
                toProto(message: _67.QueryDelegatorUnbondingDelegationsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorUnbondingDelegationsResponse): _67.QueryDelegatorUnbondingDelegationsResponseProtoMsg;
            };
            QueryRedelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryRedelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryRedelegationsRequest;
                fromJSON(object: any): _67.QueryRedelegationsRequest;
                toJSON(message: _67.QueryRedelegationsRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    srcValidatorAddr?: string;
                    dstValidatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryRedelegationsRequest;
                fromSDK(object: _67.QueryRedelegationsRequestSDKType): _67.QueryRedelegationsRequest;
                toSDK(message: _67.QueryRedelegationsRequest): _67.QueryRedelegationsRequestSDKType;
                fromAmino(object: _67.QueryRedelegationsRequestAmino): _67.QueryRedelegationsRequest;
                toAmino(message: _67.QueryRedelegationsRequest): _67.QueryRedelegationsRequestAmino;
                fromAminoMsg(object: _67.QueryRedelegationsRequestAminoMsg): _67.QueryRedelegationsRequest;
                toAminoMsg(message: _67.QueryRedelegationsRequest): _67.QueryRedelegationsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryRedelegationsRequestProtoMsg): _67.QueryRedelegationsRequest;
                toProto(message: _67.QueryRedelegationsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryRedelegationsRequest): _67.QueryRedelegationsRequestProtoMsg;
            };
            QueryRedelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryRedelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryRedelegationsResponse;
                fromJSON(object: any): _67.QueryRedelegationsResponse;
                toJSON(message: _67.QueryRedelegationsResponse): unknown;
                fromPartial(object: {
                    redelegationResponses?: {
                        redelegation?: {
                            delegatorAddress?: string;
                            validatorSrcAddress?: string;
                            validatorDstAddress?: string;
                            entries?: {
                                creationHeight?: bigint;
                                completionTime?: Date;
                                initialBalance?: string;
                                sharesDst?: string;
                            }[];
                        };
                        entries?: {
                            redelegationEntry?: {
                                creationHeight?: bigint;
                                completionTime?: Date;
                                initialBalance?: string;
                                sharesDst?: string;
                            };
                            balance?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryRedelegationsResponse;
                fromSDK(object: _67.QueryRedelegationsResponseSDKType): _67.QueryRedelegationsResponse;
                toSDK(message: _67.QueryRedelegationsResponse): _67.QueryRedelegationsResponseSDKType;
                fromAmino(object: _67.QueryRedelegationsResponseAmino): _67.QueryRedelegationsResponse;
                toAmino(message: _67.QueryRedelegationsResponse): _67.QueryRedelegationsResponseAmino;
                fromAminoMsg(object: _67.QueryRedelegationsResponseAminoMsg): _67.QueryRedelegationsResponse;
                toAminoMsg(message: _67.QueryRedelegationsResponse): _67.QueryRedelegationsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryRedelegationsResponseProtoMsg): _67.QueryRedelegationsResponse;
                toProto(message: _67.QueryRedelegationsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryRedelegationsResponse): _67.QueryRedelegationsResponseProtoMsg;
            };
            QueryDelegatorValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorValidatorsRequest;
                fromJSON(object: any): _67.QueryDelegatorValidatorsRequest;
                toJSON(message: _67.QueryDelegatorValidatorsRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _67.QueryDelegatorValidatorsRequest;
                fromSDK(object: _67.QueryDelegatorValidatorsRequestSDKType): _67.QueryDelegatorValidatorsRequest;
                toSDK(message: _67.QueryDelegatorValidatorsRequest): _67.QueryDelegatorValidatorsRequestSDKType;
                fromAmino(object: _67.QueryDelegatorValidatorsRequestAmino): _67.QueryDelegatorValidatorsRequest;
                toAmino(message: _67.QueryDelegatorValidatorsRequest): _67.QueryDelegatorValidatorsRequestAmino;
                fromAminoMsg(object: _67.QueryDelegatorValidatorsRequestAminoMsg): _67.QueryDelegatorValidatorsRequest;
                toAminoMsg(message: _67.QueryDelegatorValidatorsRequest): _67.QueryDelegatorValidatorsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorValidatorsRequestProtoMsg): _67.QueryDelegatorValidatorsRequest;
                toProto(message: _67.QueryDelegatorValidatorsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorValidatorsRequest): _67.QueryDelegatorValidatorsRequestProtoMsg;
            };
            QueryDelegatorValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorValidatorsResponse;
                fromJSON(object: any): _67.QueryDelegatorValidatorsResponse;
                toJSON(message: _67.QueryDelegatorValidatorsResponse): unknown;
                fromPartial(object: {
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _67.QueryDelegatorValidatorsResponse;
                fromSDK(object: _67.QueryDelegatorValidatorsResponseSDKType): _67.QueryDelegatorValidatorsResponse;
                toSDK(message: _67.QueryDelegatorValidatorsResponse): _67.QueryDelegatorValidatorsResponseSDKType;
                fromAmino(object: _67.QueryDelegatorValidatorsResponseAmino): _67.QueryDelegatorValidatorsResponse;
                toAmino(message: _67.QueryDelegatorValidatorsResponse): _67.QueryDelegatorValidatorsResponseAmino;
                fromAminoMsg(object: _67.QueryDelegatorValidatorsResponseAminoMsg): _67.QueryDelegatorValidatorsResponse;
                toAminoMsg(message: _67.QueryDelegatorValidatorsResponse): _67.QueryDelegatorValidatorsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorValidatorsResponseProtoMsg): _67.QueryDelegatorValidatorsResponse;
                toProto(message: _67.QueryDelegatorValidatorsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorValidatorsResponse): _67.QueryDelegatorValidatorsResponseProtoMsg;
            };
            QueryDelegatorValidatorRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorValidatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorValidatorRequest;
                fromJSON(object: any): _67.QueryDelegatorValidatorRequest;
                toJSON(message: _67.QueryDelegatorValidatorRequest): unknown;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _67.QueryDelegatorValidatorRequest;
                fromSDK(object: _67.QueryDelegatorValidatorRequestSDKType): _67.QueryDelegatorValidatorRequest;
                toSDK(message: _67.QueryDelegatorValidatorRequest): _67.QueryDelegatorValidatorRequestSDKType;
                fromAmino(object: _67.QueryDelegatorValidatorRequestAmino): _67.QueryDelegatorValidatorRequest;
                toAmino(message: _67.QueryDelegatorValidatorRequest): _67.QueryDelegatorValidatorRequestAmino;
                fromAminoMsg(object: _67.QueryDelegatorValidatorRequestAminoMsg): _67.QueryDelegatorValidatorRequest;
                toAminoMsg(message: _67.QueryDelegatorValidatorRequest): _67.QueryDelegatorValidatorRequestAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorValidatorRequestProtoMsg): _67.QueryDelegatorValidatorRequest;
                toProto(message: _67.QueryDelegatorValidatorRequest): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorValidatorRequest): _67.QueryDelegatorValidatorRequestProtoMsg;
            };
            QueryDelegatorValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryDelegatorValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryDelegatorValidatorResponse;
                fromJSON(object: any): _67.QueryDelegatorValidatorResponse;
                toJSON(message: _67.QueryDelegatorValidatorResponse): unknown;
                fromPartial(object: {
                    validator?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    };
                }): _67.QueryDelegatorValidatorResponse;
                fromSDK(object: _67.QueryDelegatorValidatorResponseSDKType): _67.QueryDelegatorValidatorResponse;
                toSDK(message: _67.QueryDelegatorValidatorResponse): _67.QueryDelegatorValidatorResponseSDKType;
                fromAmino(object: _67.QueryDelegatorValidatorResponseAmino): _67.QueryDelegatorValidatorResponse;
                toAmino(message: _67.QueryDelegatorValidatorResponse): _67.QueryDelegatorValidatorResponseAmino;
                fromAminoMsg(object: _67.QueryDelegatorValidatorResponseAminoMsg): _67.QueryDelegatorValidatorResponse;
                toAminoMsg(message: _67.QueryDelegatorValidatorResponse): _67.QueryDelegatorValidatorResponseAminoMsg;
                fromProtoMsg(message: _67.QueryDelegatorValidatorResponseProtoMsg): _67.QueryDelegatorValidatorResponse;
                toProto(message: _67.QueryDelegatorValidatorResponse): Uint8Array;
                toProtoMsg(message: _67.QueryDelegatorValidatorResponse): _67.QueryDelegatorValidatorResponseProtoMsg;
            };
            QueryHistoricalInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryHistoricalInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryHistoricalInfoRequest;
                fromJSON(object: any): _67.QueryHistoricalInfoRequest;
                toJSON(message: _67.QueryHistoricalInfoRequest): unknown;
                fromPartial(object: {
                    height?: bigint;
                }): _67.QueryHistoricalInfoRequest;
                fromSDK(object: _67.QueryHistoricalInfoRequestSDKType): _67.QueryHistoricalInfoRequest;
                toSDK(message: _67.QueryHistoricalInfoRequest): _67.QueryHistoricalInfoRequestSDKType;
                fromAmino(object: _67.QueryHistoricalInfoRequestAmino): _67.QueryHistoricalInfoRequest;
                toAmino(message: _67.QueryHistoricalInfoRequest): _67.QueryHistoricalInfoRequestAmino;
                fromAminoMsg(object: _67.QueryHistoricalInfoRequestAminoMsg): _67.QueryHistoricalInfoRequest;
                toAminoMsg(message: _67.QueryHistoricalInfoRequest): _67.QueryHistoricalInfoRequestAminoMsg;
                fromProtoMsg(message: _67.QueryHistoricalInfoRequestProtoMsg): _67.QueryHistoricalInfoRequest;
                toProto(message: _67.QueryHistoricalInfoRequest): Uint8Array;
                toProtoMsg(message: _67.QueryHistoricalInfoRequest): _67.QueryHistoricalInfoRequestProtoMsg;
            };
            QueryHistoricalInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryHistoricalInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryHistoricalInfoResponse;
                fromJSON(object: any): _67.QueryHistoricalInfoResponse;
                toJSON(message: _67.QueryHistoricalInfoResponse): unknown;
                fromPartial(object: {
                    hist?: {
                        header?: {
                            version?: {
                                block?: bigint;
                                app?: bigint;
                            };
                            chainId?: string;
                            height?: bigint;
                            time?: Date;
                            lastBlockId?: {
                                hash?: Uint8Array;
                                partSetHeader?: {
                                    total?: number;
                                    hash?: Uint8Array;
                                };
                            };
                            lastCommitHash?: Uint8Array;
                            dataHash?: Uint8Array;
                            validatorsHash?: Uint8Array;
                            nextValidatorsHash?: Uint8Array;
                            consensusHash?: Uint8Array;
                            appHash?: Uint8Array;
                            lastResultsHash?: Uint8Array;
                            evidenceHash?: Uint8Array;
                            proposerAddress?: Uint8Array;
                        };
                        valset?: {
                            operatorAddress?: string;
                            consensusPubkey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            jailed?: boolean;
                            status?: _68.BondStatus;
                            tokens?: string;
                            delegatorShares?: string;
                            description?: {
                                moniker?: string;
                                identity?: string;
                                website?: string;
                                securityContact?: string;
                                details?: string;
                            };
                            unbondingHeight?: bigint;
                            unbondingTime?: Date;
                            commission?: {
                                commissionRates?: {
                                    rate?: string;
                                    maxRate?: string;
                                    maxChangeRate?: string;
                                };
                                updateTime?: Date;
                            };
                            minSelfDelegation?: string;
                        }[];
                    };
                }): _67.QueryHistoricalInfoResponse;
                fromSDK(object: _67.QueryHistoricalInfoResponseSDKType): _67.QueryHistoricalInfoResponse;
                toSDK(message: _67.QueryHistoricalInfoResponse): _67.QueryHistoricalInfoResponseSDKType;
                fromAmino(object: _67.QueryHistoricalInfoResponseAmino): _67.QueryHistoricalInfoResponse;
                toAmino(message: _67.QueryHistoricalInfoResponse): _67.QueryHistoricalInfoResponseAmino;
                fromAminoMsg(object: _67.QueryHistoricalInfoResponseAminoMsg): _67.QueryHistoricalInfoResponse;
                toAminoMsg(message: _67.QueryHistoricalInfoResponse): _67.QueryHistoricalInfoResponseAminoMsg;
                fromProtoMsg(message: _67.QueryHistoricalInfoResponseProtoMsg): _67.QueryHistoricalInfoResponse;
                toProto(message: _67.QueryHistoricalInfoResponse): Uint8Array;
                toProtoMsg(message: _67.QueryHistoricalInfoResponse): _67.QueryHistoricalInfoResponseProtoMsg;
            };
            QueryPoolRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _67.QueryPoolRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryPoolRequest;
                fromJSON(_: any): _67.QueryPoolRequest;
                toJSON(_: _67.QueryPoolRequest): unknown;
                fromPartial(_: {}): _67.QueryPoolRequest;
                fromSDK(_: _67.QueryPoolRequestSDKType): _67.QueryPoolRequest;
                toSDK(_: _67.QueryPoolRequest): _67.QueryPoolRequestSDKType;
                fromAmino(_: _67.QueryPoolRequestAmino): _67.QueryPoolRequest;
                toAmino(_: _67.QueryPoolRequest): _67.QueryPoolRequestAmino;
                fromAminoMsg(object: _67.QueryPoolRequestAminoMsg): _67.QueryPoolRequest;
                toAminoMsg(message: _67.QueryPoolRequest): _67.QueryPoolRequestAminoMsg;
                fromProtoMsg(message: _67.QueryPoolRequestProtoMsg): _67.QueryPoolRequest;
                toProto(message: _67.QueryPoolRequest): Uint8Array;
                toProtoMsg(message: _67.QueryPoolRequest): _67.QueryPoolRequestProtoMsg;
            };
            QueryPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryPoolResponse;
                fromJSON(object: any): _67.QueryPoolResponse;
                toJSON(message: _67.QueryPoolResponse): unknown;
                fromPartial(object: {
                    pool?: {
                        notBondedTokens?: string;
                        bondedTokens?: string;
                    };
                }): _67.QueryPoolResponse;
                fromSDK(object: _67.QueryPoolResponseSDKType): _67.QueryPoolResponse;
                toSDK(message: _67.QueryPoolResponse): _67.QueryPoolResponseSDKType;
                fromAmino(object: _67.QueryPoolResponseAmino): _67.QueryPoolResponse;
                toAmino(message: _67.QueryPoolResponse): _67.QueryPoolResponseAmino;
                fromAminoMsg(object: _67.QueryPoolResponseAminoMsg): _67.QueryPoolResponse;
                toAminoMsg(message: _67.QueryPoolResponse): _67.QueryPoolResponseAminoMsg;
                fromProtoMsg(message: _67.QueryPoolResponseProtoMsg): _67.QueryPoolResponse;
                toProto(message: _67.QueryPoolResponse): Uint8Array;
                toProtoMsg(message: _67.QueryPoolResponse): _67.QueryPoolResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _67.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryParamsRequest;
                fromJSON(_: any): _67.QueryParamsRequest;
                toJSON(_: _67.QueryParamsRequest): unknown;
                fromPartial(_: {}): _67.QueryParamsRequest;
                fromSDK(_: _67.QueryParamsRequestSDKType): _67.QueryParamsRequest;
                toSDK(_: _67.QueryParamsRequest): _67.QueryParamsRequestSDKType;
                fromAmino(_: _67.QueryParamsRequestAmino): _67.QueryParamsRequest;
                toAmino(_: _67.QueryParamsRequest): _67.QueryParamsRequestAmino;
                fromAminoMsg(object: _67.QueryParamsRequestAminoMsg): _67.QueryParamsRequest;
                toAminoMsg(message: _67.QueryParamsRequest): _67.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _67.QueryParamsRequestProtoMsg): _67.QueryParamsRequest;
                toProto(message: _67.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _67.QueryParamsRequest): _67.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.QueryParamsResponse;
                fromJSON(object: any): _67.QueryParamsResponse;
                toJSON(message: _67.QueryParamsResponse): unknown;
                fromPartial(object: {
                    params?: {
                        unbondingTime?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxValidators?: number;
                        maxEntries?: number;
                        historicalEntries?: number;
                        bondDenom?: string;
                        minCommissionRate?: string;
                        minSelfDelegation?: string;
                    };
                }): _67.QueryParamsResponse;
                fromSDK(object: _67.QueryParamsResponseSDKType): _67.QueryParamsResponse;
                toSDK(message: _67.QueryParamsResponse): _67.QueryParamsResponseSDKType;
                fromAmino(object: _67.QueryParamsResponseAmino): _67.QueryParamsResponse;
                toAmino(message: _67.QueryParamsResponse): _67.QueryParamsResponseAmino;
                fromAminoMsg(object: _67.QueryParamsResponseAminoMsg): _67.QueryParamsResponse;
                toAminoMsg(message: _67.QueryParamsResponse): _67.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _67.QueryParamsResponseProtoMsg): _67.QueryParamsResponse;
                toProto(message: _67.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _67.QueryParamsResponse): _67.QueryParamsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.GenesisState;
                fromJSON(object: any): _66.GenesisState;
                toJSON(message: _66.GenesisState): unknown;
                fromPartial(object: {
                    params?: {
                        unbondingTime?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxValidators?: number;
                        maxEntries?: number;
                        historicalEntries?: number;
                        bondDenom?: string;
                        minCommissionRate?: string;
                        minSelfDelegation?: string;
                    };
                    lastTotalPower?: Uint8Array;
                    lastValidatorPowers?: {
                        address?: string;
                        power?: bigint;
                    }[];
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _68.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                    }[];
                    delegations?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        shares?: string;
                    }[];
                    unbondingDelegations?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                        }[];
                    }[];
                    redelegations?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                        }[];
                    }[];
                    exported?: boolean;
                }): _66.GenesisState;
                fromSDK(object: _66.GenesisStateSDKType): _66.GenesisState;
                toSDK(message: _66.GenesisState): _66.GenesisStateSDKType;
                fromAmino(object: _66.GenesisStateAmino): _66.GenesisState;
                toAmino(message: _66.GenesisState): _66.GenesisStateAmino;
                fromAminoMsg(object: _66.GenesisStateAminoMsg): _66.GenesisState;
                toAminoMsg(message: _66.GenesisState): _66.GenesisStateAminoMsg;
                fromProtoMsg(message: _66.GenesisStateProtoMsg): _66.GenesisState;
                toProto(message: _66.GenesisState): Uint8Array;
                toProtoMsg(message: _66.GenesisState): _66.GenesisStateProtoMsg;
            };
            LastValidatorPower: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.LastValidatorPower, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.LastValidatorPower;
                fromJSON(object: any): _66.LastValidatorPower;
                toJSON(message: _66.LastValidatorPower): unknown;
                fromPartial(object: {
                    address?: string;
                    power?: bigint;
                }): _66.LastValidatorPower;
                fromSDK(object: _66.LastValidatorPowerSDKType): _66.LastValidatorPower;
                toSDK(message: _66.LastValidatorPower): _66.LastValidatorPowerSDKType;
                fromAmino(object: _66.LastValidatorPowerAmino): _66.LastValidatorPower;
                toAmino(message: _66.LastValidatorPower): _66.LastValidatorPowerAmino;
                fromAminoMsg(object: _66.LastValidatorPowerAminoMsg): _66.LastValidatorPower;
                toAminoMsg(message: _66.LastValidatorPower): _66.LastValidatorPowerAminoMsg;
                fromProtoMsg(message: _66.LastValidatorPowerProtoMsg): _66.LastValidatorPower;
                toProto(message: _66.LastValidatorPower): Uint8Array;
                toProtoMsg(message: _66.LastValidatorPower): _66.LastValidatorPowerProtoMsg;
            };
            authorizationTypeFromJSON(object: any): _65.AuthorizationType;
            authorizationTypeToJSON(object: _65.AuthorizationType): string;
            AuthorizationType: typeof _65.AuthorizationType;
            AuthorizationTypeSDKType: typeof _65.AuthorizationType;
            AuthorizationTypeAmino: typeof _65.AuthorizationType;
            StakeAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.StakeAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.StakeAuthorization;
                fromJSON(object: any): _65.StakeAuthorization;
                toJSON(message: _65.StakeAuthorization): unknown;
                fromPartial(object: {
                    maxTokens?: {
                        denom?: string;
                        amount?: string;
                    };
                    allowList?: {
                        address?: string[];
                    };
                    denyList?: {
                        address?: string[];
                    };
                    authorizationType?: _65.AuthorizationType;
                }): _65.StakeAuthorization;
                fromSDK(object: _65.StakeAuthorizationSDKType): _65.StakeAuthorization;
                toSDK(message: _65.StakeAuthorization): _65.StakeAuthorizationSDKType;
                fromAmino(object: _65.StakeAuthorizationAmino): _65.StakeAuthorization;
                toAmino(message: _65.StakeAuthorization): _65.StakeAuthorizationAmino;
                fromAminoMsg(object: _65.StakeAuthorizationAminoMsg): _65.StakeAuthorization;
                toAminoMsg(message: _65.StakeAuthorization): _65.StakeAuthorizationAminoMsg;
                fromProtoMsg(message: _65.StakeAuthorizationProtoMsg): _65.StakeAuthorization;
                toProto(message: _65.StakeAuthorization): Uint8Array;
                toProtoMsg(message: _65.StakeAuthorization): _65.StakeAuthorizationProtoMsg;
            };
            StakeAuthorization_Validators: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.StakeAuthorization_Validators, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.StakeAuthorization_Validators;
                fromJSON(object: any): _65.StakeAuthorization_Validators;
                toJSON(message: _65.StakeAuthorization_Validators): unknown;
                fromPartial(object: {
                    address?: string[];
                }): _65.StakeAuthorization_Validators;
                fromSDK(object: _65.StakeAuthorization_ValidatorsSDKType): _65.StakeAuthorization_Validators;
                toSDK(message: _65.StakeAuthorization_Validators): _65.StakeAuthorization_ValidatorsSDKType;
                fromAmino(object: _65.StakeAuthorization_ValidatorsAmino): _65.StakeAuthorization_Validators;
                toAmino(message: _65.StakeAuthorization_Validators): _65.StakeAuthorization_ValidatorsAmino;
                fromAminoMsg(object: _65.StakeAuthorization_ValidatorsAminoMsg): _65.StakeAuthorization_Validators;
                toAminoMsg(message: _65.StakeAuthorization_Validators): _65.StakeAuthorization_ValidatorsAminoMsg;
                fromProtoMsg(message: _65.StakeAuthorization_ValidatorsProtoMsg): _65.StakeAuthorization_Validators;
                toProto(message: _65.StakeAuthorization_Validators): Uint8Array;
                toProtoMsg(message: _65.StakeAuthorization_Validators): _65.StakeAuthorization_ValidatorsProtoMsg;
            };
        };
    }
    namespace tx {
        namespace signing {
            const v1beta1: {
                signModeFromJSON(object: any): _70.SignMode;
                signModeToJSON(object: _70.SignMode): string;
                SignMode: typeof _70.SignMode;
                SignModeSDKType: typeof _70.SignMode;
                SignModeAmino: typeof _70.SignMode;
                SignatureDescriptors: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _70.SignatureDescriptors, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.SignatureDescriptors;
                    fromJSON(object: any): _70.SignatureDescriptors;
                    toJSON(message: _70.SignatureDescriptors): unknown;
                    fromPartial(object: {
                        signatures?: {
                            publicKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            data?: {
                                single?: {
                                    mode?: _70.SignMode;
                                    signature?: Uint8Array;
                                };
                                multi?: {
                                    bitarray?: {
                                        extraBitsStored?: number;
                                        elems?: Uint8Array;
                                    };
                                    signatures?: any[];
                                };
                            };
                            sequence?: bigint;
                        }[];
                    }): _70.SignatureDescriptors;
                    fromSDK(object: _70.SignatureDescriptorsSDKType): _70.SignatureDescriptors;
                    toSDK(message: _70.SignatureDescriptors): _70.SignatureDescriptorsSDKType;
                    fromAmino(object: _70.SignatureDescriptorsAmino): _70.SignatureDescriptors;
                    toAmino(message: _70.SignatureDescriptors): _70.SignatureDescriptorsAmino;
                    fromAminoMsg(object: _70.SignatureDescriptorsAminoMsg): _70.SignatureDescriptors;
                    toAminoMsg(message: _70.SignatureDescriptors): _70.SignatureDescriptorsAminoMsg;
                    fromProtoMsg(message: _70.SignatureDescriptorsProtoMsg): _70.SignatureDescriptors;
                    toProto(message: _70.SignatureDescriptors): Uint8Array;
                    toProtoMsg(message: _70.SignatureDescriptors): _70.SignatureDescriptorsProtoMsg;
                };
                SignatureDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _70.SignatureDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.SignatureDescriptor;
                    fromJSON(object: any): _70.SignatureDescriptor;
                    toJSON(message: _70.SignatureDescriptor): unknown;
                    fromPartial(object: {
                        publicKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        data?: {
                            single?: {
                                mode?: _70.SignMode;
                                signature?: Uint8Array;
                            };
                            multi?: {
                                bitarray?: {
                                    extraBitsStored?: number;
                                    elems?: Uint8Array;
                                };
                                signatures?: any[];
                            };
                        };
                        sequence?: bigint;
                    }): _70.SignatureDescriptor;
                    fromSDK(object: _70.SignatureDescriptorSDKType): _70.SignatureDescriptor;
                    toSDK(message: _70.SignatureDescriptor): _70.SignatureDescriptorSDKType;
                    fromAmino(object: _70.SignatureDescriptorAmino): _70.SignatureDescriptor;
                    toAmino(message: _70.SignatureDescriptor): _70.SignatureDescriptorAmino;
                    fromAminoMsg(object: _70.SignatureDescriptorAminoMsg): _70.SignatureDescriptor;
                    toAminoMsg(message: _70.SignatureDescriptor): _70.SignatureDescriptorAminoMsg;
                    fromProtoMsg(message: _70.SignatureDescriptorProtoMsg): _70.SignatureDescriptor;
                    toProto(message: _70.SignatureDescriptor): Uint8Array;
                    toProtoMsg(message: _70.SignatureDescriptor): _70.SignatureDescriptorProtoMsg;
                };
                SignatureDescriptor_Data: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _70.SignatureDescriptor_Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.SignatureDescriptor_Data;
                    fromJSON(object: any): _70.SignatureDescriptor_Data;
                    toJSON(message: _70.SignatureDescriptor_Data): unknown;
                    fromPartial(object: {
                        single?: {
                            mode?: _70.SignMode;
                            signature?: Uint8Array;
                        };
                        multi?: {
                            bitarray?: {
                                extraBitsStored?: number;
                                elems?: Uint8Array;
                            };
                            signatures?: any[];
                        };
                    }): _70.SignatureDescriptor_Data;
                    fromSDK(object: _70.SignatureDescriptor_DataSDKType): _70.SignatureDescriptor_Data;
                    toSDK(message: _70.SignatureDescriptor_Data): _70.SignatureDescriptor_DataSDKType;
                    fromAmino(object: _70.SignatureDescriptor_DataAmino): _70.SignatureDescriptor_Data;
                    toAmino(message: _70.SignatureDescriptor_Data): _70.SignatureDescriptor_DataAmino;
                    fromAminoMsg(object: _70.SignatureDescriptor_DataAminoMsg): _70.SignatureDescriptor_Data;
                    toAminoMsg(message: _70.SignatureDescriptor_Data): _70.SignatureDescriptor_DataAminoMsg;
                    fromProtoMsg(message: _70.SignatureDescriptor_DataProtoMsg): _70.SignatureDescriptor_Data;
                    toProto(message: _70.SignatureDescriptor_Data): Uint8Array;
                    toProtoMsg(message: _70.SignatureDescriptor_Data): _70.SignatureDescriptor_DataProtoMsg;
                };
                SignatureDescriptor_Data_Single: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _70.SignatureDescriptor_Data_Single, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.SignatureDescriptor_Data_Single;
                    fromJSON(object: any): _70.SignatureDescriptor_Data_Single;
                    toJSON(message: _70.SignatureDescriptor_Data_Single): unknown;
                    fromPartial(object: {
                        mode?: _70.SignMode;
                        signature?: Uint8Array;
                    }): _70.SignatureDescriptor_Data_Single;
                    fromSDK(object: _70.SignatureDescriptor_Data_SingleSDKType): _70.SignatureDescriptor_Data_Single;
                    toSDK(message: _70.SignatureDescriptor_Data_Single): _70.SignatureDescriptor_Data_SingleSDKType;
                    fromAmino(object: _70.SignatureDescriptor_Data_SingleAmino): _70.SignatureDescriptor_Data_Single;
                    toAmino(message: _70.SignatureDescriptor_Data_Single): _70.SignatureDescriptor_Data_SingleAmino;
                    fromAminoMsg(object: _70.SignatureDescriptor_Data_SingleAminoMsg): _70.SignatureDescriptor_Data_Single;
                    toAminoMsg(message: _70.SignatureDescriptor_Data_Single): _70.SignatureDescriptor_Data_SingleAminoMsg;
                    fromProtoMsg(message: _70.SignatureDescriptor_Data_SingleProtoMsg): _70.SignatureDescriptor_Data_Single;
                    toProto(message: _70.SignatureDescriptor_Data_Single): Uint8Array;
                    toProtoMsg(message: _70.SignatureDescriptor_Data_Single): _70.SignatureDescriptor_Data_SingleProtoMsg;
                };
                SignatureDescriptor_Data_Multi: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _70.SignatureDescriptor_Data_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.SignatureDescriptor_Data_Multi;
                    fromJSON(object: any): _70.SignatureDescriptor_Data_Multi;
                    toJSON(message: _70.SignatureDescriptor_Data_Multi): unknown;
                    fromPartial(object: {
                        bitarray?: {
                            extraBitsStored?: number;
                            elems?: Uint8Array;
                        };
                        signatures?: {
                            single?: {
                                mode?: _70.SignMode;
                                signature?: Uint8Array;
                            };
                            multi?: any;
                        }[];
                    }): _70.SignatureDescriptor_Data_Multi;
                    fromSDK(object: _70.SignatureDescriptor_Data_MultiSDKType): _70.SignatureDescriptor_Data_Multi;
                    toSDK(message: _70.SignatureDescriptor_Data_Multi): _70.SignatureDescriptor_Data_MultiSDKType;
                    fromAmino(object: _70.SignatureDescriptor_Data_MultiAmino): _70.SignatureDescriptor_Data_Multi;
                    toAmino(message: _70.SignatureDescriptor_Data_Multi): _70.SignatureDescriptor_Data_MultiAmino;
                    fromAminoMsg(object: _70.SignatureDescriptor_Data_MultiAminoMsg): _70.SignatureDescriptor_Data_Multi;
                    toAminoMsg(message: _70.SignatureDescriptor_Data_Multi): _70.SignatureDescriptor_Data_MultiAminoMsg;
                    fromProtoMsg(message: _70.SignatureDescriptor_Data_MultiProtoMsg): _70.SignatureDescriptor_Data_Multi;
                    toProto(message: _70.SignatureDescriptor_Data_Multi): Uint8Array;
                    toProtoMsg(message: _70.SignatureDescriptor_Data_Multi): _70.SignatureDescriptor_Data_MultiProtoMsg;
                };
            };
        }
        const v1beta1: {
            ServiceClientImpl: typeof _206.ServiceClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                simulate(request: _71.SimulateRequest): Promise<_71.SimulateResponse>;
                getTx(request: _71.GetTxRequest): Promise<_71.GetTxResponse>;
                broadcastTx(request: _71.BroadcastTxRequest): Promise<_71.BroadcastTxResponse>;
                getTxsEvent(request: _71.GetTxsEventRequest): Promise<_71.GetTxsEventResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useSimulate: <TData = _71.SimulateResponse>({ request, options }: _206.UseSimulateQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useGetTx: <TData_1 = _71.GetTxResponse>({ request, options }: _206.UseGetTxQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useBroadcastTx: <TData_2 = _71.BroadcastTxResponse>({ request, options }: _206.UseBroadcastTxQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useGetTxsEvent: <TData_3 = _71.GetTxsEventResponse>({ request, options }: _206.UseGetTxsEventQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
            };
            Tx: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.Tx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.Tx;
                fromJSON(object: any): _72.Tx;
                toJSON(message: _72.Tx): unknown;
                fromPartial(object: {
                    body?: {
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        memo?: string;
                        timeoutHeight?: bigint;
                        extensionOptions?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        nonCriticalExtensionOptions?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    };
                    authInfo?: {
                        signerInfos?: {
                            publicKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            modeInfo?: {
                                single?: {
                                    mode?: _70.SignMode;
                                };
                                multi?: {
                                    bitarray?: {
                                        extraBitsStored?: number;
                                        elems?: Uint8Array;
                                    };
                                    modeInfos?: any[];
                                };
                            };
                            sequence?: bigint;
                        }[];
                        fee?: {
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            gasLimit?: bigint;
                            payer?: string;
                            granter?: string;
                        };
                    };
                    signatures?: Uint8Array[];
                }): _72.Tx;
                fromSDK(object: _72.TxSDKType): _72.Tx;
                toSDK(message: _72.Tx): _72.TxSDKType;
                fromAmino(object: _72.TxAmino): _72.Tx;
                toAmino(message: _72.Tx): _72.TxAmino;
                fromAminoMsg(object: _72.TxAminoMsg): _72.Tx;
                toAminoMsg(message: _72.Tx): _72.TxAminoMsg;
                fromProtoMsg(message: _72.TxProtoMsg): _72.Tx;
                toProto(message: _72.Tx): Uint8Array;
                toProtoMsg(message: _72.Tx): _72.TxProtoMsg;
            };
            TxRaw: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.TxRaw, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.TxRaw;
                fromJSON(object: any): _72.TxRaw;
                toJSON(message: _72.TxRaw): unknown;
                fromPartial(object: {
                    bodyBytes?: Uint8Array;
                    authInfoBytes?: Uint8Array;
                    signatures?: Uint8Array[];
                }): _72.TxRaw;
                fromSDK(object: _72.TxRawSDKType): _72.TxRaw;
                toSDK(message: _72.TxRaw): _72.TxRawSDKType;
                fromAmino(object: _72.TxRawAmino): _72.TxRaw;
                toAmino(message: _72.TxRaw): _72.TxRawAmino;
                fromAminoMsg(object: _72.TxRawAminoMsg): _72.TxRaw;
                toAminoMsg(message: _72.TxRaw): _72.TxRawAminoMsg;
                fromProtoMsg(message: _72.TxRawProtoMsg): _72.TxRaw;
                toProto(message: _72.TxRaw): Uint8Array;
                toProtoMsg(message: _72.TxRaw): _72.TxRawProtoMsg;
            };
            SignDoc: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.SignDoc, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.SignDoc;
                fromJSON(object: any): _72.SignDoc;
                toJSON(message: _72.SignDoc): unknown;
                fromPartial(object: {
                    bodyBytes?: Uint8Array;
                    authInfoBytes?: Uint8Array;
                    chainId?: string;
                    accountNumber?: bigint;
                }): _72.SignDoc;
                fromSDK(object: _72.SignDocSDKType): _72.SignDoc;
                toSDK(message: _72.SignDoc): _72.SignDocSDKType;
                fromAmino(object: _72.SignDocAmino): _72.SignDoc;
                toAmino(message: _72.SignDoc): _72.SignDocAmino;
                fromAminoMsg(object: _72.SignDocAminoMsg): _72.SignDoc;
                toAminoMsg(message: _72.SignDoc): _72.SignDocAminoMsg;
                fromProtoMsg(message: _72.SignDocProtoMsg): _72.SignDoc;
                toProto(message: _72.SignDoc): Uint8Array;
                toProtoMsg(message: _72.SignDoc): _72.SignDocProtoMsg;
            };
            TxBody: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.TxBody, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.TxBody;
                fromJSON(object: any): _72.TxBody;
                toJSON(message: _72.TxBody): unknown;
                fromPartial(object: {
                    messages?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    memo?: string;
                    timeoutHeight?: bigint;
                    extensionOptions?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    nonCriticalExtensionOptions?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _72.TxBody;
                fromSDK(object: _72.TxBodySDKType): _72.TxBody;
                toSDK(message: _72.TxBody): _72.TxBodySDKType;
                fromAmino(object: _72.TxBodyAmino): _72.TxBody;
                toAmino(message: _72.TxBody): _72.TxBodyAmino;
                fromAminoMsg(object: _72.TxBodyAminoMsg): _72.TxBody;
                toAminoMsg(message: _72.TxBody): _72.TxBodyAminoMsg;
                fromProtoMsg(message: _72.TxBodyProtoMsg): _72.TxBody;
                toProto(message: _72.TxBody): Uint8Array;
                toProtoMsg(message: _72.TxBody): _72.TxBodyProtoMsg;
            };
            AuthInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.AuthInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.AuthInfo;
                fromJSON(object: any): _72.AuthInfo;
                toJSON(message: _72.AuthInfo): unknown;
                fromPartial(object: {
                    signerInfos?: {
                        publicKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        modeInfo?: {
                            single?: {
                                mode?: _70.SignMode;
                            };
                            multi?: {
                                bitarray?: {
                                    extraBitsStored?: number;
                                    elems?: Uint8Array;
                                };
                                modeInfos?: any[];
                            };
                        };
                        sequence?: bigint;
                    }[];
                    fee?: {
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        gasLimit?: bigint;
                        payer?: string;
                        granter?: string;
                    };
                }): _72.AuthInfo;
                fromSDK(object: _72.AuthInfoSDKType): _72.AuthInfo;
                toSDK(message: _72.AuthInfo): _72.AuthInfoSDKType;
                fromAmino(object: _72.AuthInfoAmino): _72.AuthInfo;
                toAmino(message: _72.AuthInfo): _72.AuthInfoAmino;
                fromAminoMsg(object: _72.AuthInfoAminoMsg): _72.AuthInfo;
                toAminoMsg(message: _72.AuthInfo): _72.AuthInfoAminoMsg;
                fromProtoMsg(message: _72.AuthInfoProtoMsg): _72.AuthInfo;
                toProto(message: _72.AuthInfo): Uint8Array;
                toProtoMsg(message: _72.AuthInfo): _72.AuthInfoProtoMsg;
            };
            SignerInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.SignerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.SignerInfo;
                fromJSON(object: any): _72.SignerInfo;
                toJSON(message: _72.SignerInfo): unknown;
                fromPartial(object: {
                    publicKey?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    modeInfo?: {
                        single?: {
                            mode?: _70.SignMode;
                        };
                        multi?: {
                            bitarray?: {
                                extraBitsStored?: number;
                                elems?: Uint8Array;
                            };
                            modeInfos?: any[];
                        };
                    };
                    sequence?: bigint;
                }): _72.SignerInfo;
                fromSDK(object: _72.SignerInfoSDKType): _72.SignerInfo;
                toSDK(message: _72.SignerInfo): _72.SignerInfoSDKType;
                fromAmino(object: _72.SignerInfoAmino): _72.SignerInfo;
                toAmino(message: _72.SignerInfo): _72.SignerInfoAmino;
                fromAminoMsg(object: _72.SignerInfoAminoMsg): _72.SignerInfo;
                toAminoMsg(message: _72.SignerInfo): _72.SignerInfoAminoMsg;
                fromProtoMsg(message: _72.SignerInfoProtoMsg): _72.SignerInfo;
                toProto(message: _72.SignerInfo): Uint8Array;
                toProtoMsg(message: _72.SignerInfo): _72.SignerInfoProtoMsg;
            };
            ModeInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.ModeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.ModeInfo;
                fromJSON(object: any): _72.ModeInfo;
                toJSON(message: _72.ModeInfo): unknown;
                fromPartial(object: {
                    single?: {
                        mode?: _70.SignMode;
                    };
                    multi?: {
                        bitarray?: {
                            extraBitsStored?: number;
                            elems?: Uint8Array;
                        };
                        modeInfos?: any[];
                    };
                }): _72.ModeInfo;
                fromSDK(object: _72.ModeInfoSDKType): _72.ModeInfo;
                toSDK(message: _72.ModeInfo): _72.ModeInfoSDKType;
                fromAmino(object: _72.ModeInfoAmino): _72.ModeInfo;
                toAmino(message: _72.ModeInfo): _72.ModeInfoAmino;
                fromAminoMsg(object: _72.ModeInfoAminoMsg): _72.ModeInfo;
                toAminoMsg(message: _72.ModeInfo): _72.ModeInfoAminoMsg;
                fromProtoMsg(message: _72.ModeInfoProtoMsg): _72.ModeInfo;
                toProto(message: _72.ModeInfo): Uint8Array;
                toProtoMsg(message: _72.ModeInfo): _72.ModeInfoProtoMsg;
            };
            ModeInfo_Single: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.ModeInfo_Single, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.ModeInfo_Single;
                fromJSON(object: any): _72.ModeInfo_Single;
                toJSON(message: _72.ModeInfo_Single): unknown;
                fromPartial(object: {
                    mode?: _70.SignMode;
                }): _72.ModeInfo_Single;
                fromSDK(object: _72.ModeInfo_SingleSDKType): _72.ModeInfo_Single;
                toSDK(message: _72.ModeInfo_Single): _72.ModeInfo_SingleSDKType;
                fromAmino(object: _72.ModeInfo_SingleAmino): _72.ModeInfo_Single;
                toAmino(message: _72.ModeInfo_Single): _72.ModeInfo_SingleAmino;
                fromAminoMsg(object: _72.ModeInfo_SingleAminoMsg): _72.ModeInfo_Single;
                toAminoMsg(message: _72.ModeInfo_Single): _72.ModeInfo_SingleAminoMsg;
                fromProtoMsg(message: _72.ModeInfo_SingleProtoMsg): _72.ModeInfo_Single;
                toProto(message: _72.ModeInfo_Single): Uint8Array;
                toProtoMsg(message: _72.ModeInfo_Single): _72.ModeInfo_SingleProtoMsg;
            };
            ModeInfo_Multi: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.ModeInfo_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.ModeInfo_Multi;
                fromJSON(object: any): _72.ModeInfo_Multi;
                toJSON(message: _72.ModeInfo_Multi): unknown;
                fromPartial(object: {
                    bitarray?: {
                        extraBitsStored?: number;
                        elems?: Uint8Array;
                    };
                    modeInfos?: {
                        single?: {
                            mode?: _70.SignMode;
                        };
                        multi?: any;
                    }[];
                }): _72.ModeInfo_Multi;
                fromSDK(object: _72.ModeInfo_MultiSDKType): _72.ModeInfo_Multi;
                toSDK(message: _72.ModeInfo_Multi): _72.ModeInfo_MultiSDKType;
                fromAmino(object: _72.ModeInfo_MultiAmino): _72.ModeInfo_Multi;
                toAmino(message: _72.ModeInfo_Multi): _72.ModeInfo_MultiAmino;
                fromAminoMsg(object: _72.ModeInfo_MultiAminoMsg): _72.ModeInfo_Multi;
                toAminoMsg(message: _72.ModeInfo_Multi): _72.ModeInfo_MultiAminoMsg;
                fromProtoMsg(message: _72.ModeInfo_MultiProtoMsg): _72.ModeInfo_Multi;
                toProto(message: _72.ModeInfo_Multi): Uint8Array;
                toProtoMsg(message: _72.ModeInfo_Multi): _72.ModeInfo_MultiProtoMsg;
            };
            Fee: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.Fee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.Fee;
                fromJSON(object: any): _72.Fee;
                toJSON(message: _72.Fee): unknown;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    gasLimit?: bigint;
                    payer?: string;
                    granter?: string;
                }): _72.Fee;
                fromSDK(object: _72.FeeSDKType): _72.Fee;
                toSDK(message: _72.Fee): _72.FeeSDKType;
                fromAmino(object: _72.FeeAmino): _72.Fee;
                toAmino(message: _72.Fee): _72.FeeAmino;
                fromAminoMsg(object: _72.FeeAminoMsg): _72.Fee;
                toAminoMsg(message: _72.Fee): _72.FeeAminoMsg;
                fromProtoMsg(message: _72.FeeProtoMsg): _72.Fee;
                toProto(message: _72.Fee): Uint8Array;
                toProtoMsg(message: _72.Fee): _72.FeeProtoMsg;
            };
            orderByFromJSON(object: any): _71.OrderBy;
            orderByToJSON(object: _71.OrderBy): string;
            broadcastModeFromJSON(object: any): _71.BroadcastMode;
            broadcastModeToJSON(object: _71.BroadcastMode): string;
            OrderBy: typeof _71.OrderBy;
            OrderBySDKType: typeof _71.OrderBy;
            OrderByAmino: typeof _71.OrderBy;
            BroadcastMode: typeof _71.BroadcastMode;
            BroadcastModeSDKType: typeof _71.BroadcastMode;
            BroadcastModeAmino: typeof _71.BroadcastMode;
            GetTxsEventRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.GetTxsEventRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GetTxsEventRequest;
                fromJSON(object: any): _71.GetTxsEventRequest;
                toJSON(message: _71.GetTxsEventRequest): unknown;
                fromPartial(object: {
                    events?: string[];
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                    orderBy?: _71.OrderBy;
                }): _71.GetTxsEventRequest;
                fromSDK(object: _71.GetTxsEventRequestSDKType): _71.GetTxsEventRequest;
                toSDK(message: _71.GetTxsEventRequest): _71.GetTxsEventRequestSDKType;
                fromAmino(object: _71.GetTxsEventRequestAmino): _71.GetTxsEventRequest;
                toAmino(message: _71.GetTxsEventRequest): _71.GetTxsEventRequestAmino;
                fromAminoMsg(object: _71.GetTxsEventRequestAminoMsg): _71.GetTxsEventRequest;
                toAminoMsg(message: _71.GetTxsEventRequest): _71.GetTxsEventRequestAminoMsg;
                fromProtoMsg(message: _71.GetTxsEventRequestProtoMsg): _71.GetTxsEventRequest;
                toProto(message: _71.GetTxsEventRequest): Uint8Array;
                toProtoMsg(message: _71.GetTxsEventRequest): _71.GetTxsEventRequestProtoMsg;
            };
            GetTxsEventResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.GetTxsEventResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GetTxsEventResponse;
                fromJSON(object: any): _71.GetTxsEventResponse;
                toJSON(message: _71.GetTxsEventResponse): unknown;
                fromPartial(object: {
                    txs?: {
                        body?: {
                            messages?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _70.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    }[];
                    txResponses?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _71.GetTxsEventResponse;
                fromSDK(object: _71.GetTxsEventResponseSDKType): _71.GetTxsEventResponse;
                toSDK(message: _71.GetTxsEventResponse): _71.GetTxsEventResponseSDKType;
                fromAmino(object: _71.GetTxsEventResponseAmino): _71.GetTxsEventResponse;
                toAmino(message: _71.GetTxsEventResponse): _71.GetTxsEventResponseAmino;
                fromAminoMsg(object: _71.GetTxsEventResponseAminoMsg): _71.GetTxsEventResponse;
                toAminoMsg(message: _71.GetTxsEventResponse): _71.GetTxsEventResponseAminoMsg;
                fromProtoMsg(message: _71.GetTxsEventResponseProtoMsg): _71.GetTxsEventResponse;
                toProto(message: _71.GetTxsEventResponse): Uint8Array;
                toProtoMsg(message: _71.GetTxsEventResponse): _71.GetTxsEventResponseProtoMsg;
            };
            BroadcastTxRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.BroadcastTxRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.BroadcastTxRequest;
                fromJSON(object: any): _71.BroadcastTxRequest;
                toJSON(message: _71.BroadcastTxRequest): unknown;
                fromPartial(object: {
                    txBytes?: Uint8Array;
                    mode?: _71.BroadcastMode;
                }): _71.BroadcastTxRequest;
                fromSDK(object: _71.BroadcastTxRequestSDKType): _71.BroadcastTxRequest;
                toSDK(message: _71.BroadcastTxRequest): _71.BroadcastTxRequestSDKType;
                fromAmino(object: _71.BroadcastTxRequestAmino): _71.BroadcastTxRequest;
                toAmino(message: _71.BroadcastTxRequest): _71.BroadcastTxRequestAmino;
                fromAminoMsg(object: _71.BroadcastTxRequestAminoMsg): _71.BroadcastTxRequest;
                toAminoMsg(message: _71.BroadcastTxRequest): _71.BroadcastTxRequestAminoMsg;
                fromProtoMsg(message: _71.BroadcastTxRequestProtoMsg): _71.BroadcastTxRequest;
                toProto(message: _71.BroadcastTxRequest): Uint8Array;
                toProtoMsg(message: _71.BroadcastTxRequest): _71.BroadcastTxRequestProtoMsg;
            };
            BroadcastTxResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.BroadcastTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.BroadcastTxResponse;
                fromJSON(object: any): _71.BroadcastTxResponse;
                toJSON(message: _71.BroadcastTxResponse): unknown;
                fromPartial(object: {
                    txResponse?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    };
                }): _71.BroadcastTxResponse;
                fromSDK(object: _71.BroadcastTxResponseSDKType): _71.BroadcastTxResponse;
                toSDK(message: _71.BroadcastTxResponse): _71.BroadcastTxResponseSDKType;
                fromAmino(object: _71.BroadcastTxResponseAmino): _71.BroadcastTxResponse;
                toAmino(message: _71.BroadcastTxResponse): _71.BroadcastTxResponseAmino;
                fromAminoMsg(object: _71.BroadcastTxResponseAminoMsg): _71.BroadcastTxResponse;
                toAminoMsg(message: _71.BroadcastTxResponse): _71.BroadcastTxResponseAminoMsg;
                fromProtoMsg(message: _71.BroadcastTxResponseProtoMsg): _71.BroadcastTxResponse;
                toProto(message: _71.BroadcastTxResponse): Uint8Array;
                toProtoMsg(message: _71.BroadcastTxResponse): _71.BroadcastTxResponseProtoMsg;
            };
            SimulateRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.SimulateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.SimulateRequest;
                fromJSON(object: any): _71.SimulateRequest;
                toJSON(message: _71.SimulateRequest): unknown;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _70.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                    txBytes?: Uint8Array;
                }): _71.SimulateRequest;
                fromSDK(object: _71.SimulateRequestSDKType): _71.SimulateRequest;
                toSDK(message: _71.SimulateRequest): _71.SimulateRequestSDKType;
                fromAmino(object: _71.SimulateRequestAmino): _71.SimulateRequest;
                toAmino(message: _71.SimulateRequest): _71.SimulateRequestAmino;
                fromAminoMsg(object: _71.SimulateRequestAminoMsg): _71.SimulateRequest;
                toAminoMsg(message: _71.SimulateRequest): _71.SimulateRequestAminoMsg;
                fromProtoMsg(message: _71.SimulateRequestProtoMsg): _71.SimulateRequest;
                toProto(message: _71.SimulateRequest): Uint8Array;
                toProtoMsg(message: _71.SimulateRequest): _71.SimulateRequestProtoMsg;
            };
            SimulateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.SimulateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.SimulateResponse;
                fromJSON(object: any): _71.SimulateResponse;
                toJSON(message: _71.SimulateResponse): unknown;
                fromPartial(object: {
                    gasInfo?: {
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                    };
                    result?: {
                        data?: Uint8Array;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    };
                }): _71.SimulateResponse;
                fromSDK(object: _71.SimulateResponseSDKType): _71.SimulateResponse;
                toSDK(message: _71.SimulateResponse): _71.SimulateResponseSDKType;
                fromAmino(object: _71.SimulateResponseAmino): _71.SimulateResponse;
                toAmino(message: _71.SimulateResponse): _71.SimulateResponseAmino;
                fromAminoMsg(object: _71.SimulateResponseAminoMsg): _71.SimulateResponse;
                toAminoMsg(message: _71.SimulateResponse): _71.SimulateResponseAminoMsg;
                fromProtoMsg(message: _71.SimulateResponseProtoMsg): _71.SimulateResponse;
                toProto(message: _71.SimulateResponse): Uint8Array;
                toProtoMsg(message: _71.SimulateResponse): _71.SimulateResponseProtoMsg;
            };
            GetTxRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.GetTxRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GetTxRequest;
                fromJSON(object: any): _71.GetTxRequest;
                toJSON(message: _71.GetTxRequest): unknown;
                fromPartial(object: {
                    hash?: string;
                }): _71.GetTxRequest;
                fromSDK(object: _71.GetTxRequestSDKType): _71.GetTxRequest;
                toSDK(message: _71.GetTxRequest): _71.GetTxRequestSDKType;
                fromAmino(object: _71.GetTxRequestAmino): _71.GetTxRequest;
                toAmino(message: _71.GetTxRequest): _71.GetTxRequestAmino;
                fromAminoMsg(object: _71.GetTxRequestAminoMsg): _71.GetTxRequest;
                toAminoMsg(message: _71.GetTxRequest): _71.GetTxRequestAminoMsg;
                fromProtoMsg(message: _71.GetTxRequestProtoMsg): _71.GetTxRequest;
                toProto(message: _71.GetTxRequest): Uint8Array;
                toProtoMsg(message: _71.GetTxRequest): _71.GetTxRequestProtoMsg;
            };
            GetTxResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.GetTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.GetTxResponse;
                fromJSON(object: any): _71.GetTxResponse;
                toJSON(message: _71.GetTxResponse): unknown;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _70.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                    txResponse?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    };
                }): _71.GetTxResponse;
                fromSDK(object: _71.GetTxResponseSDKType): _71.GetTxResponse;
                toSDK(message: _71.GetTxResponse): _71.GetTxResponseSDKType;
                fromAmino(object: _71.GetTxResponseAmino): _71.GetTxResponse;
                toAmino(message: _71.GetTxResponse): _71.GetTxResponseAmino;
                fromAminoMsg(object: _71.GetTxResponseAminoMsg): _71.GetTxResponse;
                toAminoMsg(message: _71.GetTxResponse): _71.GetTxResponseAminoMsg;
                fromProtoMsg(message: _71.GetTxResponseProtoMsg): _71.GetTxResponse;
                toProto(message: _71.GetTxResponse): Uint8Array;
                toProtoMsg(message: _71.GetTxResponse): _71.GetTxResponseProtoMsg;
            };
        };
    }
    namespace upgrade {
        const v1beta1: {
            MsgClientImpl: typeof _225.MsgClientImpl;
            QueryClientImpl: typeof _207.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                currentPlan(request?: _73.QueryCurrentPlanRequest): Promise<_73.QueryCurrentPlanResponse>;
                appliedPlan(request: _73.QueryAppliedPlanRequest): Promise<_73.QueryAppliedPlanResponse>;
                upgradedConsensusState(request: _73.QueryUpgradedConsensusStateRequest): Promise<_73.QueryUpgradedConsensusStateResponse>;
                moduleVersions(request: _73.QueryModuleVersionsRequest): Promise<_73.QueryModuleVersionsResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useCurrentPlan: <TData = _73.QueryCurrentPlanResponse>({ request, options }: _207.UseCurrentPlanQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useAppliedPlan: <TData_1 = _73.QueryAppliedPlanResponse>({ request, options }: _207.UseAppliedPlanQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useUpgradedConsensusState: <TData_2 = _73.QueryUpgradedConsensusStateResponse>({ request, options }: _207.UseUpgradedConsensusStateQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useModuleVersions: <TData_3 = _73.QueryModuleVersionsResponse>({ request, options }: _207.UseModuleVersionsQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    softwareUpgrade(value: _75.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    cancelUpgrade(value: _75.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    softwareUpgrade(value: _75.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: _75.MsgSoftwareUpgrade;
                    };
                    cancelUpgrade(value: _75.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: _75.MsgCancelUpgrade;
                    };
                };
                toJSON: {
                    softwareUpgrade(value: _75.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: unknown;
                    };
                    cancelUpgrade(value: _75.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    softwareUpgrade(value: any): {
                        typeUrl: string;
                        value: _75.MsgSoftwareUpgrade;
                    };
                    cancelUpgrade(value: any): {
                        typeUrl: string;
                        value: _75.MsgCancelUpgrade;
                    };
                };
                fromPartial: {
                    softwareUpgrade(value: _75.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: _75.MsgSoftwareUpgrade;
                    };
                    cancelUpgrade(value: _75.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: _75.MsgCancelUpgrade;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade": {
                    aminoType: string;
                    toAmino: (message: _75.MsgSoftwareUpgrade) => _75.MsgSoftwareUpgradeAmino;
                    fromAmino: (object: _75.MsgSoftwareUpgradeAmino) => _75.MsgSoftwareUpgrade;
                };
                "/cosmos.upgrade.v1beta1.MsgCancelUpgrade": {
                    aminoType: string;
                    toAmino: (message: _75.MsgCancelUpgrade) => _75.MsgCancelUpgradeAmino;
                    fromAmino: (object: _75.MsgCancelUpgradeAmino) => _75.MsgCancelUpgrade;
                };
            };
            MsgSoftwareUpgrade: {
                typeUrl: string;
                aminoType: string;
                encode(message: _75.MsgSoftwareUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.MsgSoftwareUpgrade;
                fromJSON(object: any): _75.MsgSoftwareUpgrade;
                toJSON(message: _75.MsgSoftwareUpgrade): unknown;
                fromPartial(object: {
                    authority?: string;
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _75.MsgSoftwareUpgrade;
                fromSDK(object: _75.MsgSoftwareUpgradeSDKType): _75.MsgSoftwareUpgrade;
                toSDK(message: _75.MsgSoftwareUpgrade): _75.MsgSoftwareUpgradeSDKType;
                fromAmino(object: _75.MsgSoftwareUpgradeAmino): _75.MsgSoftwareUpgrade;
                toAmino(message: _75.MsgSoftwareUpgrade): _75.MsgSoftwareUpgradeAmino;
                fromAminoMsg(object: _75.MsgSoftwareUpgradeAminoMsg): _75.MsgSoftwareUpgrade;
                toAminoMsg(message: _75.MsgSoftwareUpgrade): _75.MsgSoftwareUpgradeAminoMsg;
                fromProtoMsg(message: _75.MsgSoftwareUpgradeProtoMsg): _75.MsgSoftwareUpgrade;
                toProto(message: _75.MsgSoftwareUpgrade): Uint8Array;
                toProtoMsg(message: _75.MsgSoftwareUpgrade): _75.MsgSoftwareUpgradeProtoMsg;
            };
            MsgSoftwareUpgradeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _75.MsgSoftwareUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.MsgSoftwareUpgradeResponse;
                fromJSON(_: any): _75.MsgSoftwareUpgradeResponse;
                toJSON(_: _75.MsgSoftwareUpgradeResponse): unknown;
                fromPartial(_: {}): _75.MsgSoftwareUpgradeResponse;
                fromSDK(_: _75.MsgSoftwareUpgradeResponseSDKType): _75.MsgSoftwareUpgradeResponse;
                toSDK(_: _75.MsgSoftwareUpgradeResponse): _75.MsgSoftwareUpgradeResponseSDKType;
                fromAmino(_: _75.MsgSoftwareUpgradeResponseAmino): _75.MsgSoftwareUpgradeResponse;
                toAmino(_: _75.MsgSoftwareUpgradeResponse): _75.MsgSoftwareUpgradeResponseAmino;
                fromAminoMsg(object: _75.MsgSoftwareUpgradeResponseAminoMsg): _75.MsgSoftwareUpgradeResponse;
                toAminoMsg(message: _75.MsgSoftwareUpgradeResponse): _75.MsgSoftwareUpgradeResponseAminoMsg;
                fromProtoMsg(message: _75.MsgSoftwareUpgradeResponseProtoMsg): _75.MsgSoftwareUpgradeResponse;
                toProto(message: _75.MsgSoftwareUpgradeResponse): Uint8Array;
                toProtoMsg(message: _75.MsgSoftwareUpgradeResponse): _75.MsgSoftwareUpgradeResponseProtoMsg;
            };
            MsgCancelUpgrade: {
                typeUrl: string;
                aminoType: string;
                encode(message: _75.MsgCancelUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.MsgCancelUpgrade;
                fromJSON(object: any): _75.MsgCancelUpgrade;
                toJSON(message: _75.MsgCancelUpgrade): unknown;
                fromPartial(object: {
                    authority?: string;
                }): _75.MsgCancelUpgrade;
                fromSDK(object: _75.MsgCancelUpgradeSDKType): _75.MsgCancelUpgrade;
                toSDK(message: _75.MsgCancelUpgrade): _75.MsgCancelUpgradeSDKType;
                fromAmino(object: _75.MsgCancelUpgradeAmino): _75.MsgCancelUpgrade;
                toAmino(message: _75.MsgCancelUpgrade): _75.MsgCancelUpgradeAmino;
                fromAminoMsg(object: _75.MsgCancelUpgradeAminoMsg): _75.MsgCancelUpgrade;
                toAminoMsg(message: _75.MsgCancelUpgrade): _75.MsgCancelUpgradeAminoMsg;
                fromProtoMsg(message: _75.MsgCancelUpgradeProtoMsg): _75.MsgCancelUpgrade;
                toProto(message: _75.MsgCancelUpgrade): Uint8Array;
                toProtoMsg(message: _75.MsgCancelUpgrade): _75.MsgCancelUpgradeProtoMsg;
            };
            MsgCancelUpgradeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _75.MsgCancelUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.MsgCancelUpgradeResponse;
                fromJSON(_: any): _75.MsgCancelUpgradeResponse;
                toJSON(_: _75.MsgCancelUpgradeResponse): unknown;
                fromPartial(_: {}): _75.MsgCancelUpgradeResponse;
                fromSDK(_: _75.MsgCancelUpgradeResponseSDKType): _75.MsgCancelUpgradeResponse;
                toSDK(_: _75.MsgCancelUpgradeResponse): _75.MsgCancelUpgradeResponseSDKType;
                fromAmino(_: _75.MsgCancelUpgradeResponseAmino): _75.MsgCancelUpgradeResponse;
                toAmino(_: _75.MsgCancelUpgradeResponse): _75.MsgCancelUpgradeResponseAmino;
                fromAminoMsg(object: _75.MsgCancelUpgradeResponseAminoMsg): _75.MsgCancelUpgradeResponse;
                toAminoMsg(message: _75.MsgCancelUpgradeResponse): _75.MsgCancelUpgradeResponseAminoMsg;
                fromProtoMsg(message: _75.MsgCancelUpgradeResponseProtoMsg): _75.MsgCancelUpgradeResponse;
                toProto(message: _75.MsgCancelUpgradeResponse): Uint8Array;
                toProtoMsg(message: _75.MsgCancelUpgradeResponse): _75.MsgCancelUpgradeResponseProtoMsg;
            };
            Plan: {
                typeUrl: string;
                aminoType: string;
                encode(message: _74.Plan, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.Plan;
                fromJSON(object: any): _74.Plan;
                toJSON(message: _74.Plan): unknown;
                fromPartial(object: {
                    name?: string;
                    time?: Date;
                    height?: bigint;
                    info?: string;
                    upgradedClientState?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _74.Plan;
                fromSDK(object: _74.PlanSDKType): _74.Plan;
                toSDK(message: _74.Plan): _74.PlanSDKType;
                fromAmino(object: _74.PlanAmino): _74.Plan;
                toAmino(message: _74.Plan): _74.PlanAmino;
                fromAminoMsg(object: _74.PlanAminoMsg): _74.Plan;
                toAminoMsg(message: _74.Plan): _74.PlanAminoMsg;
                fromProtoMsg(message: _74.PlanProtoMsg): _74.Plan;
                toProto(message: _74.Plan): Uint8Array;
                toProtoMsg(message: _74.Plan): _74.PlanProtoMsg;
            };
            SoftwareUpgradeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _74.SoftwareUpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.SoftwareUpgradeProposal;
                fromJSON(object: any): _74.SoftwareUpgradeProposal;
                toJSON(message: _74.SoftwareUpgradeProposal): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _74.SoftwareUpgradeProposal;
                fromSDK(object: _74.SoftwareUpgradeProposalSDKType): _74.SoftwareUpgradeProposal;
                toSDK(message: _74.SoftwareUpgradeProposal): _74.SoftwareUpgradeProposalSDKType;
                fromAmino(object: _74.SoftwareUpgradeProposalAmino): _74.SoftwareUpgradeProposal;
                toAmino(message: _74.SoftwareUpgradeProposal): _74.SoftwareUpgradeProposalAmino;
                fromAminoMsg(object: _74.SoftwareUpgradeProposalAminoMsg): _74.SoftwareUpgradeProposal;
                toAminoMsg(message: _74.SoftwareUpgradeProposal): _74.SoftwareUpgradeProposalAminoMsg;
                fromProtoMsg(message: _74.SoftwareUpgradeProposalProtoMsg): _74.SoftwareUpgradeProposal;
                toProto(message: _74.SoftwareUpgradeProposal): Uint8Array;
                toProtoMsg(message: _74.SoftwareUpgradeProposal): _74.SoftwareUpgradeProposalProtoMsg;
            };
            CancelSoftwareUpgradeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _74.CancelSoftwareUpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.CancelSoftwareUpgradeProposal;
                fromJSON(object: any): _74.CancelSoftwareUpgradeProposal;
                toJSON(message: _74.CancelSoftwareUpgradeProposal): unknown;
                fromPartial(object: {
                    title?: string;
                    description?: string;
                }): _74.CancelSoftwareUpgradeProposal;
                fromSDK(object: _74.CancelSoftwareUpgradeProposalSDKType): _74.CancelSoftwareUpgradeProposal;
                toSDK(message: _74.CancelSoftwareUpgradeProposal): _74.CancelSoftwareUpgradeProposalSDKType;
                fromAmino(object: _74.CancelSoftwareUpgradeProposalAmino): _74.CancelSoftwareUpgradeProposal;
                toAmino(message: _74.CancelSoftwareUpgradeProposal): _74.CancelSoftwareUpgradeProposalAmino;
                fromAminoMsg(object: _74.CancelSoftwareUpgradeProposalAminoMsg): _74.CancelSoftwareUpgradeProposal;
                toAminoMsg(message: _74.CancelSoftwareUpgradeProposal): _74.CancelSoftwareUpgradeProposalAminoMsg;
                fromProtoMsg(message: _74.CancelSoftwareUpgradeProposalProtoMsg): _74.CancelSoftwareUpgradeProposal;
                toProto(message: _74.CancelSoftwareUpgradeProposal): Uint8Array;
                toProtoMsg(message: _74.CancelSoftwareUpgradeProposal): _74.CancelSoftwareUpgradeProposalProtoMsg;
            };
            ModuleVersion: {
                typeUrl: string;
                aminoType: string;
                encode(message: _74.ModuleVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.ModuleVersion;
                fromJSON(object: any): _74.ModuleVersion;
                toJSON(message: _74.ModuleVersion): unknown;
                fromPartial(object: {
                    name?: string;
                    version?: bigint;
                }): _74.ModuleVersion;
                fromSDK(object: _74.ModuleVersionSDKType): _74.ModuleVersion;
                toSDK(message: _74.ModuleVersion): _74.ModuleVersionSDKType;
                fromAmino(object: _74.ModuleVersionAmino): _74.ModuleVersion;
                toAmino(message: _74.ModuleVersion): _74.ModuleVersionAmino;
                fromAminoMsg(object: _74.ModuleVersionAminoMsg): _74.ModuleVersion;
                toAminoMsg(message: _74.ModuleVersion): _74.ModuleVersionAminoMsg;
                fromProtoMsg(message: _74.ModuleVersionProtoMsg): _74.ModuleVersion;
                toProto(message: _74.ModuleVersion): Uint8Array;
                toProtoMsg(message: _74.ModuleVersion): _74.ModuleVersionProtoMsg;
            };
            QueryCurrentPlanRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _73.QueryCurrentPlanRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryCurrentPlanRequest;
                fromJSON(_: any): _73.QueryCurrentPlanRequest;
                toJSON(_: _73.QueryCurrentPlanRequest): unknown;
                fromPartial(_: {}): _73.QueryCurrentPlanRequest;
                fromSDK(_: _73.QueryCurrentPlanRequestSDKType): _73.QueryCurrentPlanRequest;
                toSDK(_: _73.QueryCurrentPlanRequest): _73.QueryCurrentPlanRequestSDKType;
                fromAmino(_: _73.QueryCurrentPlanRequestAmino): _73.QueryCurrentPlanRequest;
                toAmino(_: _73.QueryCurrentPlanRequest): _73.QueryCurrentPlanRequestAmino;
                fromAminoMsg(object: _73.QueryCurrentPlanRequestAminoMsg): _73.QueryCurrentPlanRequest;
                toAminoMsg(message: _73.QueryCurrentPlanRequest): _73.QueryCurrentPlanRequestAminoMsg;
                fromProtoMsg(message: _73.QueryCurrentPlanRequestProtoMsg): _73.QueryCurrentPlanRequest;
                toProto(message: _73.QueryCurrentPlanRequest): Uint8Array;
                toProtoMsg(message: _73.QueryCurrentPlanRequest): _73.QueryCurrentPlanRequestProtoMsg;
            };
            QueryCurrentPlanResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryCurrentPlanResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryCurrentPlanResponse;
                fromJSON(object: any): _73.QueryCurrentPlanResponse;
                toJSON(message: _73.QueryCurrentPlanResponse): unknown;
                fromPartial(object: {
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _73.QueryCurrentPlanResponse;
                fromSDK(object: _73.QueryCurrentPlanResponseSDKType): _73.QueryCurrentPlanResponse;
                toSDK(message: _73.QueryCurrentPlanResponse): _73.QueryCurrentPlanResponseSDKType;
                fromAmino(object: _73.QueryCurrentPlanResponseAmino): _73.QueryCurrentPlanResponse;
                toAmino(message: _73.QueryCurrentPlanResponse): _73.QueryCurrentPlanResponseAmino;
                fromAminoMsg(object: _73.QueryCurrentPlanResponseAminoMsg): _73.QueryCurrentPlanResponse;
                toAminoMsg(message: _73.QueryCurrentPlanResponse): _73.QueryCurrentPlanResponseAminoMsg;
                fromProtoMsg(message: _73.QueryCurrentPlanResponseProtoMsg): _73.QueryCurrentPlanResponse;
                toProto(message: _73.QueryCurrentPlanResponse): Uint8Array;
                toProtoMsg(message: _73.QueryCurrentPlanResponse): _73.QueryCurrentPlanResponseProtoMsg;
            };
            QueryAppliedPlanRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryAppliedPlanRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryAppliedPlanRequest;
                fromJSON(object: any): _73.QueryAppliedPlanRequest;
                toJSON(message: _73.QueryAppliedPlanRequest): unknown;
                fromPartial(object: {
                    name?: string;
                }): _73.QueryAppliedPlanRequest;
                fromSDK(object: _73.QueryAppliedPlanRequestSDKType): _73.QueryAppliedPlanRequest;
                toSDK(message: _73.QueryAppliedPlanRequest): _73.QueryAppliedPlanRequestSDKType;
                fromAmino(object: _73.QueryAppliedPlanRequestAmino): _73.QueryAppliedPlanRequest;
                toAmino(message: _73.QueryAppliedPlanRequest): _73.QueryAppliedPlanRequestAmino;
                fromAminoMsg(object: _73.QueryAppliedPlanRequestAminoMsg): _73.QueryAppliedPlanRequest;
                toAminoMsg(message: _73.QueryAppliedPlanRequest): _73.QueryAppliedPlanRequestAminoMsg;
                fromProtoMsg(message: _73.QueryAppliedPlanRequestProtoMsg): _73.QueryAppliedPlanRequest;
                toProto(message: _73.QueryAppliedPlanRequest): Uint8Array;
                toProtoMsg(message: _73.QueryAppliedPlanRequest): _73.QueryAppliedPlanRequestProtoMsg;
            };
            QueryAppliedPlanResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryAppliedPlanResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryAppliedPlanResponse;
                fromJSON(object: any): _73.QueryAppliedPlanResponse;
                toJSON(message: _73.QueryAppliedPlanResponse): unknown;
                fromPartial(object: {
                    height?: bigint;
                }): _73.QueryAppliedPlanResponse;
                fromSDK(object: _73.QueryAppliedPlanResponseSDKType): _73.QueryAppliedPlanResponse;
                toSDK(message: _73.QueryAppliedPlanResponse): _73.QueryAppliedPlanResponseSDKType;
                fromAmino(object: _73.QueryAppliedPlanResponseAmino): _73.QueryAppliedPlanResponse;
                toAmino(message: _73.QueryAppliedPlanResponse): _73.QueryAppliedPlanResponseAmino;
                fromAminoMsg(object: _73.QueryAppliedPlanResponseAminoMsg): _73.QueryAppliedPlanResponse;
                toAminoMsg(message: _73.QueryAppliedPlanResponse): _73.QueryAppliedPlanResponseAminoMsg;
                fromProtoMsg(message: _73.QueryAppliedPlanResponseProtoMsg): _73.QueryAppliedPlanResponse;
                toProto(message: _73.QueryAppliedPlanResponse): Uint8Array;
                toProtoMsg(message: _73.QueryAppliedPlanResponse): _73.QueryAppliedPlanResponseProtoMsg;
            };
            QueryUpgradedConsensusStateRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryUpgradedConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryUpgradedConsensusStateRequest;
                fromJSON(object: any): _73.QueryUpgradedConsensusStateRequest;
                toJSON(message: _73.QueryUpgradedConsensusStateRequest): unknown;
                fromPartial(object: {
                    lastHeight?: bigint;
                }): _73.QueryUpgradedConsensusStateRequest;
                fromSDK(object: _73.QueryUpgradedConsensusStateRequestSDKType): _73.QueryUpgradedConsensusStateRequest;
                toSDK(message: _73.QueryUpgradedConsensusStateRequest): _73.QueryUpgradedConsensusStateRequestSDKType;
                fromAmino(object: _73.QueryUpgradedConsensusStateRequestAmino): _73.QueryUpgradedConsensusStateRequest;
                toAmino(message: _73.QueryUpgradedConsensusStateRequest): _73.QueryUpgradedConsensusStateRequestAmino;
                fromAminoMsg(object: _73.QueryUpgradedConsensusStateRequestAminoMsg): _73.QueryUpgradedConsensusStateRequest;
                toAminoMsg(message: _73.QueryUpgradedConsensusStateRequest): _73.QueryUpgradedConsensusStateRequestAminoMsg;
                fromProtoMsg(message: _73.QueryUpgradedConsensusStateRequestProtoMsg): _73.QueryUpgradedConsensusStateRequest;
                toProto(message: _73.QueryUpgradedConsensusStateRequest): Uint8Array;
                toProtoMsg(message: _73.QueryUpgradedConsensusStateRequest): _73.QueryUpgradedConsensusStateRequestProtoMsg;
            };
            QueryUpgradedConsensusStateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryUpgradedConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryUpgradedConsensusStateResponse;
                fromJSON(object: any): _73.QueryUpgradedConsensusStateResponse;
                toJSON(message: _73.QueryUpgradedConsensusStateResponse): unknown;
                fromPartial(object: {
                    upgradedConsensusState?: Uint8Array;
                }): _73.QueryUpgradedConsensusStateResponse;
                fromSDK(object: _73.QueryUpgradedConsensusStateResponseSDKType): _73.QueryUpgradedConsensusStateResponse;
                toSDK(message: _73.QueryUpgradedConsensusStateResponse): _73.QueryUpgradedConsensusStateResponseSDKType;
                fromAmino(object: _73.QueryUpgradedConsensusStateResponseAmino): _73.QueryUpgradedConsensusStateResponse;
                toAmino(message: _73.QueryUpgradedConsensusStateResponse): _73.QueryUpgradedConsensusStateResponseAmino;
                fromAminoMsg(object: _73.QueryUpgradedConsensusStateResponseAminoMsg): _73.QueryUpgradedConsensusStateResponse;
                toAminoMsg(message: _73.QueryUpgradedConsensusStateResponse): _73.QueryUpgradedConsensusStateResponseAminoMsg;
                fromProtoMsg(message: _73.QueryUpgradedConsensusStateResponseProtoMsg): _73.QueryUpgradedConsensusStateResponse;
                toProto(message: _73.QueryUpgradedConsensusStateResponse): Uint8Array;
                toProtoMsg(message: _73.QueryUpgradedConsensusStateResponse): _73.QueryUpgradedConsensusStateResponseProtoMsg;
            };
            QueryModuleVersionsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryModuleVersionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryModuleVersionsRequest;
                fromJSON(object: any): _73.QueryModuleVersionsRequest;
                toJSON(message: _73.QueryModuleVersionsRequest): unknown;
                fromPartial(object: {
                    moduleName?: string;
                }): _73.QueryModuleVersionsRequest;
                fromSDK(object: _73.QueryModuleVersionsRequestSDKType): _73.QueryModuleVersionsRequest;
                toSDK(message: _73.QueryModuleVersionsRequest): _73.QueryModuleVersionsRequestSDKType;
                fromAmino(object: _73.QueryModuleVersionsRequestAmino): _73.QueryModuleVersionsRequest;
                toAmino(message: _73.QueryModuleVersionsRequest): _73.QueryModuleVersionsRequestAmino;
                fromAminoMsg(object: _73.QueryModuleVersionsRequestAminoMsg): _73.QueryModuleVersionsRequest;
                toAminoMsg(message: _73.QueryModuleVersionsRequest): _73.QueryModuleVersionsRequestAminoMsg;
                fromProtoMsg(message: _73.QueryModuleVersionsRequestProtoMsg): _73.QueryModuleVersionsRequest;
                toProto(message: _73.QueryModuleVersionsRequest): Uint8Array;
                toProtoMsg(message: _73.QueryModuleVersionsRequest): _73.QueryModuleVersionsRequestProtoMsg;
            };
            QueryModuleVersionsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _73.QueryModuleVersionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.QueryModuleVersionsResponse;
                fromJSON(object: any): _73.QueryModuleVersionsResponse;
                toJSON(message: _73.QueryModuleVersionsResponse): unknown;
                fromPartial(object: {
                    moduleVersions?: {
                        name?: string;
                        version?: bigint;
                    }[];
                }): _73.QueryModuleVersionsResponse;
                fromSDK(object: _73.QueryModuleVersionsResponseSDKType): _73.QueryModuleVersionsResponse;
                toSDK(message: _73.QueryModuleVersionsResponse): _73.QueryModuleVersionsResponseSDKType;
                fromAmino(object: _73.QueryModuleVersionsResponseAmino): _73.QueryModuleVersionsResponse;
                toAmino(message: _73.QueryModuleVersionsResponse): _73.QueryModuleVersionsResponseAmino;
                fromAminoMsg(object: _73.QueryModuleVersionsResponseAminoMsg): _73.QueryModuleVersionsResponse;
                toAminoMsg(message: _73.QueryModuleVersionsResponse): _73.QueryModuleVersionsResponseAminoMsg;
                fromProtoMsg(message: _73.QueryModuleVersionsResponseProtoMsg): _73.QueryModuleVersionsResponse;
                toProto(message: _73.QueryModuleVersionsResponse): Uint8Array;
                toProtoMsg(message: _73.QueryModuleVersionsResponse): _73.QueryModuleVersionsResponseProtoMsg;
            };
        };
    }
    namespace vesting {
        const v1beta1: {
            MsgClientImpl: typeof _221.MsgClientImpl;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createVestingAccount(value: _76.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createClawbackVestingAccount(value: _76.MsgCreateClawbackVestingAccount): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    clawback(value: _76.MsgClawback): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createVestingAccount(value: _76.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: _76.MsgCreateVestingAccount;
                    };
                    createClawbackVestingAccount(value: _76.MsgCreateClawbackVestingAccount): {
                        typeUrl: string;
                        value: _76.MsgCreateClawbackVestingAccount;
                    };
                    clawback(value: _76.MsgClawback): {
                        typeUrl: string;
                        value: _76.MsgClawback;
                    };
                };
                toJSON: {
                    createVestingAccount(value: _76.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: unknown;
                    };
                    createClawbackVestingAccount(value: _76.MsgCreateClawbackVestingAccount): {
                        typeUrl: string;
                        value: unknown;
                    };
                    clawback(value: _76.MsgClawback): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    createVestingAccount(value: any): {
                        typeUrl: string;
                        value: _76.MsgCreateVestingAccount;
                    };
                    createClawbackVestingAccount(value: any): {
                        typeUrl: string;
                        value: _76.MsgCreateClawbackVestingAccount;
                    };
                    clawback(value: any): {
                        typeUrl: string;
                        value: _76.MsgClawback;
                    };
                };
                fromPartial: {
                    createVestingAccount(value: _76.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: _76.MsgCreateVestingAccount;
                    };
                    createClawbackVestingAccount(value: _76.MsgCreateClawbackVestingAccount): {
                        typeUrl: string;
                        value: _76.MsgCreateClawbackVestingAccount;
                    };
                    clawback(value: _76.MsgClawback): {
                        typeUrl: string;
                        value: _76.MsgClawback;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.vesting.v1beta1.MsgCreateVestingAccount": {
                    aminoType: string;
                    toAmino: (message: _76.MsgCreateVestingAccount) => _76.MsgCreateVestingAccountAmino;
                    fromAmino: (object: _76.MsgCreateVestingAccountAmino) => _76.MsgCreateVestingAccount;
                };
                "/cosmos.vesting.v1beta1.MsgCreateClawbackVestingAccount": {
                    aminoType: string;
                    toAmino: (message: _76.MsgCreateClawbackVestingAccount) => _76.MsgCreateClawbackVestingAccountAmino;
                    fromAmino: (object: _76.MsgCreateClawbackVestingAccountAmino) => _76.MsgCreateClawbackVestingAccount;
                };
                "/cosmos.vesting.v1beta1.MsgClawback": {
                    aminoType: string;
                    toAmino: (message: _76.MsgClawback) => _76.MsgClawbackAmino;
                    fromAmino: (object: _76.MsgClawbackAmino) => _76.MsgClawback;
                };
            };
            BaseVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.BaseVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.BaseVestingAccount;
                fromJSON(object: any): _77.BaseVestingAccount;
                toJSON(message: _77.BaseVestingAccount): unknown;
                fromPartial(object: {
                    baseAccount?: {
                        address?: string;
                        pubKey?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                    originalVesting?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    delegatedFree?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    delegatedVesting?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    endTime?: bigint;
                }): _77.BaseVestingAccount;
                fromSDK(object: _77.BaseVestingAccountSDKType): _77.BaseVestingAccount;
                toSDK(message: _77.BaseVestingAccount): _77.BaseVestingAccountSDKType;
                fromAmino(object: _77.BaseVestingAccountAmino): _77.BaseVestingAccount;
                toAmino(message: _77.BaseVestingAccount): _77.BaseVestingAccountAmino;
                fromAminoMsg(object: _77.BaseVestingAccountAminoMsg): _77.BaseVestingAccount;
                toAminoMsg(message: _77.BaseVestingAccount): _77.BaseVestingAccountAminoMsg;
                fromProtoMsg(message: _77.BaseVestingAccountProtoMsg): _77.BaseVestingAccount;
                toProto(message: _77.BaseVestingAccount): Uint8Array;
                toProtoMsg(message: _77.BaseVestingAccount): _77.BaseVestingAccountProtoMsg;
            };
            ContinuousVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.ContinuousVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.ContinuousVestingAccount;
                fromJSON(object: any): _77.ContinuousVestingAccount;
                toJSON(message: _77.ContinuousVestingAccount): unknown;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                    startTime?: bigint;
                }): _77.ContinuousVestingAccount;
                fromSDK(object: _77.ContinuousVestingAccountSDKType): _77.ContinuousVestingAccount;
                toSDK(message: _77.ContinuousVestingAccount): _77.ContinuousVestingAccountSDKType;
                fromAmino(object: _77.ContinuousVestingAccountAmino): _77.ContinuousVestingAccount;
                toAmino(message: _77.ContinuousVestingAccount): _77.ContinuousVestingAccountAmino;
                fromAminoMsg(object: _77.ContinuousVestingAccountAminoMsg): _77.ContinuousVestingAccount;
                toAminoMsg(message: _77.ContinuousVestingAccount): _77.ContinuousVestingAccountAminoMsg;
                fromProtoMsg(message: _77.ContinuousVestingAccountProtoMsg): _77.ContinuousVestingAccount;
                toProto(message: _77.ContinuousVestingAccount): Uint8Array;
                toProtoMsg(message: _77.ContinuousVestingAccount): _77.ContinuousVestingAccountProtoMsg;
            };
            DelayedVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.DelayedVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.DelayedVestingAccount;
                fromJSON(object: any): _77.DelayedVestingAccount;
                toJSON(message: _77.DelayedVestingAccount): unknown;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                }): _77.DelayedVestingAccount;
                fromSDK(object: _77.DelayedVestingAccountSDKType): _77.DelayedVestingAccount;
                toSDK(message: _77.DelayedVestingAccount): _77.DelayedVestingAccountSDKType;
                fromAmino(object: _77.DelayedVestingAccountAmino): _77.DelayedVestingAccount;
                toAmino(message: _77.DelayedVestingAccount): _77.DelayedVestingAccountAmino;
                fromAminoMsg(object: _77.DelayedVestingAccountAminoMsg): _77.DelayedVestingAccount;
                toAminoMsg(message: _77.DelayedVestingAccount): _77.DelayedVestingAccountAminoMsg;
                fromProtoMsg(message: _77.DelayedVestingAccountProtoMsg): _77.DelayedVestingAccount;
                toProto(message: _77.DelayedVestingAccount): Uint8Array;
                toProtoMsg(message: _77.DelayedVestingAccount): _77.DelayedVestingAccountProtoMsg;
            };
            Period: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.Period, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.Period;
                fromJSON(object: any): _77.Period;
                toJSON(message: _77.Period): unknown;
                fromPartial(object: {
                    length?: bigint;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _77.Period;
                fromSDK(object: _77.PeriodSDKType): _77.Period;
                toSDK(message: _77.Period): _77.PeriodSDKType;
                fromAmino(object: _77.PeriodAmino): _77.Period;
                toAmino(message: _77.Period): _77.PeriodAmino;
                fromAminoMsg(object: _77.PeriodAminoMsg): _77.Period;
                toAminoMsg(message: _77.Period): _77.PeriodAminoMsg;
                fromProtoMsg(message: _77.PeriodProtoMsg): _77.Period;
                toProto(message: _77.Period): Uint8Array;
                toProtoMsg(message: _77.Period): _77.PeriodProtoMsg;
            };
            PeriodicVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.PeriodicVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.PeriodicVestingAccount;
                fromJSON(object: any): _77.PeriodicVestingAccount;
                toJSON(message: _77.PeriodicVestingAccount): unknown;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                    startTime?: bigint;
                    vestingPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _77.PeriodicVestingAccount;
                fromSDK(object: _77.PeriodicVestingAccountSDKType): _77.PeriodicVestingAccount;
                toSDK(message: _77.PeriodicVestingAccount): _77.PeriodicVestingAccountSDKType;
                fromAmino(object: _77.PeriodicVestingAccountAmino): _77.PeriodicVestingAccount;
                toAmino(message: _77.PeriodicVestingAccount): _77.PeriodicVestingAccountAmino;
                fromAminoMsg(object: _77.PeriodicVestingAccountAminoMsg): _77.PeriodicVestingAccount;
                toAminoMsg(message: _77.PeriodicVestingAccount): _77.PeriodicVestingAccountAminoMsg;
                fromProtoMsg(message: _77.PeriodicVestingAccountProtoMsg): _77.PeriodicVestingAccount;
                toProto(message: _77.PeriodicVestingAccount): Uint8Array;
                toProtoMsg(message: _77.PeriodicVestingAccount): _77.PeriodicVestingAccountProtoMsg;
            };
            PermanentLockedAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.PermanentLockedAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.PermanentLockedAccount;
                fromJSON(object: any): _77.PermanentLockedAccount;
                toJSON(message: _77.PermanentLockedAccount): unknown;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                }): _77.PermanentLockedAccount;
                fromSDK(object: _77.PermanentLockedAccountSDKType): _77.PermanentLockedAccount;
                toSDK(message: _77.PermanentLockedAccount): _77.PermanentLockedAccountSDKType;
                fromAmino(object: _77.PermanentLockedAccountAmino): _77.PermanentLockedAccount;
                toAmino(message: _77.PermanentLockedAccount): _77.PermanentLockedAccountAmino;
                fromAminoMsg(object: _77.PermanentLockedAccountAminoMsg): _77.PermanentLockedAccount;
                toAminoMsg(message: _77.PermanentLockedAccount): _77.PermanentLockedAccountAminoMsg;
                fromProtoMsg(message: _77.PermanentLockedAccountProtoMsg): _77.PermanentLockedAccount;
                toProto(message: _77.PermanentLockedAccount): Uint8Array;
                toProtoMsg(message: _77.PermanentLockedAccount): _77.PermanentLockedAccountProtoMsg;
            };
            ClawbackVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _77.ClawbackVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.ClawbackVestingAccount;
                fromJSON(object: any): _77.ClawbackVestingAccount;
                toJSON(message: _77.ClawbackVestingAccount): unknown;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            address?: string;
                            pubKey?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                    funderAddress?: string;
                    startTime?: bigint;
                    lockupPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    vestingPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _77.ClawbackVestingAccount;
                fromSDK(object: _77.ClawbackVestingAccountSDKType): _77.ClawbackVestingAccount;
                toSDK(message: _77.ClawbackVestingAccount): _77.ClawbackVestingAccountSDKType;
                fromAmino(object: _77.ClawbackVestingAccountAmino): _77.ClawbackVestingAccount;
                toAmino(message: _77.ClawbackVestingAccount): _77.ClawbackVestingAccountAmino;
                fromAminoMsg(object: _77.ClawbackVestingAccountAminoMsg): _77.ClawbackVestingAccount;
                toAminoMsg(message: _77.ClawbackVestingAccount): _77.ClawbackVestingAccountAminoMsg;
                fromProtoMsg(message: _77.ClawbackVestingAccountProtoMsg): _77.ClawbackVestingAccount;
                toProto(message: _77.ClawbackVestingAccount): Uint8Array;
                toProtoMsg(message: _77.ClawbackVestingAccount): _77.ClawbackVestingAccountProtoMsg;
            };
            MsgCreateVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _76.MsgCreateVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgCreateVestingAccount;
                fromJSON(object: any): _76.MsgCreateVestingAccount;
                toJSON(message: _76.MsgCreateVestingAccount): unknown;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    endTime?: bigint;
                    delayed?: boolean;
                }): _76.MsgCreateVestingAccount;
                fromSDK(object: _76.MsgCreateVestingAccountSDKType): _76.MsgCreateVestingAccount;
                toSDK(message: _76.MsgCreateVestingAccount): _76.MsgCreateVestingAccountSDKType;
                fromAmino(object: _76.MsgCreateVestingAccountAmino): _76.MsgCreateVestingAccount;
                toAmino(message: _76.MsgCreateVestingAccount): _76.MsgCreateVestingAccountAmino;
                fromAminoMsg(object: _76.MsgCreateVestingAccountAminoMsg): _76.MsgCreateVestingAccount;
                toAminoMsg(message: _76.MsgCreateVestingAccount): _76.MsgCreateVestingAccountAminoMsg;
                fromProtoMsg(message: _76.MsgCreateVestingAccountProtoMsg): _76.MsgCreateVestingAccount;
                toProto(message: _76.MsgCreateVestingAccount): Uint8Array;
                toProtoMsg(message: _76.MsgCreateVestingAccount): _76.MsgCreateVestingAccountProtoMsg;
            };
            MsgCreateVestingAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _76.MsgCreateVestingAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgCreateVestingAccountResponse;
                fromJSON(_: any): _76.MsgCreateVestingAccountResponse;
                toJSON(_: _76.MsgCreateVestingAccountResponse): unknown;
                fromPartial(_: {}): _76.MsgCreateVestingAccountResponse;
                fromSDK(_: _76.MsgCreateVestingAccountResponseSDKType): _76.MsgCreateVestingAccountResponse;
                toSDK(_: _76.MsgCreateVestingAccountResponse): _76.MsgCreateVestingAccountResponseSDKType;
                fromAmino(_: _76.MsgCreateVestingAccountResponseAmino): _76.MsgCreateVestingAccountResponse;
                toAmino(_: _76.MsgCreateVestingAccountResponse): _76.MsgCreateVestingAccountResponseAmino;
                fromAminoMsg(object: _76.MsgCreateVestingAccountResponseAminoMsg): _76.MsgCreateVestingAccountResponse;
                toAminoMsg(message: _76.MsgCreateVestingAccountResponse): _76.MsgCreateVestingAccountResponseAminoMsg;
                fromProtoMsg(message: _76.MsgCreateVestingAccountResponseProtoMsg): _76.MsgCreateVestingAccountResponse;
                toProto(message: _76.MsgCreateVestingAccountResponse): Uint8Array;
                toProtoMsg(message: _76.MsgCreateVestingAccountResponse): _76.MsgCreateVestingAccountResponseProtoMsg;
            };
            MsgCreateClawbackVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _76.MsgCreateClawbackVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgCreateClawbackVestingAccount;
                fromJSON(object: any): _76.MsgCreateClawbackVestingAccount;
                toJSON(message: _76.MsgCreateClawbackVestingAccount): unknown;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    startTime?: bigint;
                    lockupPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    vestingPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    merge?: boolean;
                }): _76.MsgCreateClawbackVestingAccount;
                fromSDK(object: _76.MsgCreateClawbackVestingAccountSDKType): _76.MsgCreateClawbackVestingAccount;
                toSDK(message: _76.MsgCreateClawbackVestingAccount): _76.MsgCreateClawbackVestingAccountSDKType;
                fromAmino(object: _76.MsgCreateClawbackVestingAccountAmino): _76.MsgCreateClawbackVestingAccount;
                toAmino(message: _76.MsgCreateClawbackVestingAccount): _76.MsgCreateClawbackVestingAccountAmino;
                fromAminoMsg(object: _76.MsgCreateClawbackVestingAccountAminoMsg): _76.MsgCreateClawbackVestingAccount;
                toAminoMsg(message: _76.MsgCreateClawbackVestingAccount): _76.MsgCreateClawbackVestingAccountAminoMsg;
                fromProtoMsg(message: _76.MsgCreateClawbackVestingAccountProtoMsg): _76.MsgCreateClawbackVestingAccount;
                toProto(message: _76.MsgCreateClawbackVestingAccount): Uint8Array;
                toProtoMsg(message: _76.MsgCreateClawbackVestingAccount): _76.MsgCreateClawbackVestingAccountProtoMsg;
            };
            MsgCreateClawbackVestingAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _76.MsgCreateClawbackVestingAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgCreateClawbackVestingAccountResponse;
                fromJSON(_: any): _76.MsgCreateClawbackVestingAccountResponse;
                toJSON(_: _76.MsgCreateClawbackVestingAccountResponse): unknown;
                fromPartial(_: {}): _76.MsgCreateClawbackVestingAccountResponse;
                fromSDK(_: _76.MsgCreateClawbackVestingAccountResponseSDKType): _76.MsgCreateClawbackVestingAccountResponse;
                toSDK(_: _76.MsgCreateClawbackVestingAccountResponse): _76.MsgCreateClawbackVestingAccountResponseSDKType;
                fromAmino(_: _76.MsgCreateClawbackVestingAccountResponseAmino): _76.MsgCreateClawbackVestingAccountResponse;
                toAmino(_: _76.MsgCreateClawbackVestingAccountResponse): _76.MsgCreateClawbackVestingAccountResponseAmino;
                fromAminoMsg(object: _76.MsgCreateClawbackVestingAccountResponseAminoMsg): _76.MsgCreateClawbackVestingAccountResponse;
                toAminoMsg(message: _76.MsgCreateClawbackVestingAccountResponse): _76.MsgCreateClawbackVestingAccountResponseAminoMsg;
                fromProtoMsg(message: _76.MsgCreateClawbackVestingAccountResponseProtoMsg): _76.MsgCreateClawbackVestingAccountResponse;
                toProto(message: _76.MsgCreateClawbackVestingAccountResponse): Uint8Array;
                toProtoMsg(message: _76.MsgCreateClawbackVestingAccountResponse): _76.MsgCreateClawbackVestingAccountResponseProtoMsg;
            };
            MsgClawback: {
                typeUrl: string;
                aminoType: string;
                encode(message: _76.MsgClawback, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgClawback;
                fromJSON(object: any): _76.MsgClawback;
                toJSON(message: _76.MsgClawback): unknown;
                fromPartial(object: {
                    funderAddress?: string;
                    address?: string;
                    destAddress?: string;
                }): _76.MsgClawback;
                fromSDK(object: _76.MsgClawbackSDKType): _76.MsgClawback;
                toSDK(message: _76.MsgClawback): _76.MsgClawbackSDKType;
                fromAmino(object: _76.MsgClawbackAmino): _76.MsgClawback;
                toAmino(message: _76.MsgClawback): _76.MsgClawbackAmino;
                fromAminoMsg(object: _76.MsgClawbackAminoMsg): _76.MsgClawback;
                toAminoMsg(message: _76.MsgClawback): _76.MsgClawbackAminoMsg;
                fromProtoMsg(message: _76.MsgClawbackProtoMsg): _76.MsgClawback;
                toProto(message: _76.MsgClawback): Uint8Array;
                toProtoMsg(message: _76.MsgClawback): _76.MsgClawbackProtoMsg;
            };
            MsgClawbackResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _76.MsgClawbackResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.MsgClawbackResponse;
                fromJSON(_: any): _76.MsgClawbackResponse;
                toJSON(_: _76.MsgClawbackResponse): unknown;
                fromPartial(_: {}): _76.MsgClawbackResponse;
                fromSDK(_: _76.MsgClawbackResponseSDKType): _76.MsgClawbackResponse;
                toSDK(_: _76.MsgClawbackResponse): _76.MsgClawbackResponseSDKType;
                fromAmino(_: _76.MsgClawbackResponseAmino): _76.MsgClawbackResponse;
                toAmino(_: _76.MsgClawbackResponse): _76.MsgClawbackResponseAmino;
                fromAminoMsg(object: _76.MsgClawbackResponseAminoMsg): _76.MsgClawbackResponse;
                toAminoMsg(message: _76.MsgClawbackResponse): _76.MsgClawbackResponseAminoMsg;
                fromProtoMsg(message: _76.MsgClawbackResponseProtoMsg): _76.MsgClawbackResponse;
                toProto(message: _76.MsgClawbackResponse): Uint8Array;
                toProtoMsg(message: _76.MsgClawbackResponse): _76.MsgClawbackResponseProtoMsg;
            };
        };
    }
    namespace app {
        const v1alpha1: {
            QueryClientImpl: typeof _208.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                config(request?: _80.QueryConfigRequest): Promise<_80.QueryConfigResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useConfig: <TData = _80.QueryConfigResponse>({ request, options }: _208.UseConfigQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
            };
            QueryConfigRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _80.QueryConfigRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.QueryConfigRequest;
                fromJSON(_: any): _80.QueryConfigRequest;
                toJSON(_: _80.QueryConfigRequest): unknown;
                fromPartial(_: {}): _80.QueryConfigRequest;
                fromSDK(_: _80.QueryConfigRequestSDKType): _80.QueryConfigRequest;
                toSDK(_: _80.QueryConfigRequest): _80.QueryConfigRequestSDKType;
                fromAmino(_: _80.QueryConfigRequestAmino): _80.QueryConfigRequest;
                toAmino(_: _80.QueryConfigRequest): _80.QueryConfigRequestAmino;
                fromAminoMsg(object: _80.QueryConfigRequestAminoMsg): _80.QueryConfigRequest;
                toAminoMsg(message: _80.QueryConfigRequest): _80.QueryConfigRequestAminoMsg;
                fromProtoMsg(message: _80.QueryConfigRequestProtoMsg): _80.QueryConfigRequest;
                toProto(message: _80.QueryConfigRequest): Uint8Array;
                toProtoMsg(message: _80.QueryConfigRequest): _80.QueryConfigRequestProtoMsg;
            };
            QueryConfigResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _80.QueryConfigResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.QueryConfigResponse;
                fromJSON(object: any): _80.QueryConfigResponse;
                toJSON(message: _80.QueryConfigResponse): unknown;
                fromPartial(object: {
                    config?: {
                        modules?: {
                            name?: string;
                            config?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        }[];
                    };
                }): _80.QueryConfigResponse;
                fromSDK(object: _80.QueryConfigResponseSDKType): _80.QueryConfigResponse;
                toSDK(message: _80.QueryConfigResponse): _80.QueryConfigResponseSDKType;
                fromAmino(object: _80.QueryConfigResponseAmino): _80.QueryConfigResponse;
                toAmino(message: _80.QueryConfigResponse): _80.QueryConfigResponseAmino;
                fromAminoMsg(object: _80.QueryConfigResponseAminoMsg): _80.QueryConfigResponse;
                toAminoMsg(message: _80.QueryConfigResponse): _80.QueryConfigResponseAminoMsg;
                fromProtoMsg(message: _80.QueryConfigResponseProtoMsg): _80.QueryConfigResponse;
                toProto(message: _80.QueryConfigResponse): Uint8Array;
                toProtoMsg(message: _80.QueryConfigResponse): _80.QueryConfigResponseProtoMsg;
            };
            ModuleDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.ModuleDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.ModuleDescriptor;
                fromJSON(object: any): _79.ModuleDescriptor;
                toJSON(message: _79.ModuleDescriptor): unknown;
                fromPartial(object: {
                    goImport?: string;
                    usePackage?: {
                        name?: string;
                        revision?: number;
                    }[];
                    canMigrateFrom?: {
                        module?: string;
                    }[];
                }): _79.ModuleDescriptor;
                fromSDK(object: _79.ModuleDescriptorSDKType): _79.ModuleDescriptor;
                toSDK(message: _79.ModuleDescriptor): _79.ModuleDescriptorSDKType;
                fromAmino(object: _79.ModuleDescriptorAmino): _79.ModuleDescriptor;
                toAmino(message: _79.ModuleDescriptor): _79.ModuleDescriptorAmino;
                fromAminoMsg(object: _79.ModuleDescriptorAminoMsg): _79.ModuleDescriptor;
                toAminoMsg(message: _79.ModuleDescriptor): _79.ModuleDescriptorAminoMsg;
                fromProtoMsg(message: _79.ModuleDescriptorProtoMsg): _79.ModuleDescriptor;
                toProto(message: _79.ModuleDescriptor): Uint8Array;
                toProtoMsg(message: _79.ModuleDescriptor): _79.ModuleDescriptorProtoMsg;
            };
            PackageReference: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.PackageReference, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.PackageReference;
                fromJSON(object: any): _79.PackageReference;
                toJSON(message: _79.PackageReference): unknown;
                fromPartial(object: {
                    name?: string;
                    revision?: number;
                }): _79.PackageReference;
                fromSDK(object: _79.PackageReferenceSDKType): _79.PackageReference;
                toSDK(message: _79.PackageReference): _79.PackageReferenceSDKType;
                fromAmino(object: _79.PackageReferenceAmino): _79.PackageReference;
                toAmino(message: _79.PackageReference): _79.PackageReferenceAmino;
                fromAminoMsg(object: _79.PackageReferenceAminoMsg): _79.PackageReference;
                toAminoMsg(message: _79.PackageReference): _79.PackageReferenceAminoMsg;
                fromProtoMsg(message: _79.PackageReferenceProtoMsg): _79.PackageReference;
                toProto(message: _79.PackageReference): Uint8Array;
                toProtoMsg(message: _79.PackageReference): _79.PackageReferenceProtoMsg;
            };
            MigrateFromInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.MigrateFromInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MigrateFromInfo;
                fromJSON(object: any): _79.MigrateFromInfo;
                toJSON(message: _79.MigrateFromInfo): unknown;
                fromPartial(object: {
                    module?: string;
                }): _79.MigrateFromInfo;
                fromSDK(object: _79.MigrateFromInfoSDKType): _79.MigrateFromInfo;
                toSDK(message: _79.MigrateFromInfo): _79.MigrateFromInfoSDKType;
                fromAmino(object: _79.MigrateFromInfoAmino): _79.MigrateFromInfo;
                toAmino(message: _79.MigrateFromInfo): _79.MigrateFromInfoAmino;
                fromAminoMsg(object: _79.MigrateFromInfoAminoMsg): _79.MigrateFromInfo;
                toAminoMsg(message: _79.MigrateFromInfo): _79.MigrateFromInfoAminoMsg;
                fromProtoMsg(message: _79.MigrateFromInfoProtoMsg): _79.MigrateFromInfo;
                toProto(message: _79.MigrateFromInfo): Uint8Array;
                toProtoMsg(message: _79.MigrateFromInfo): _79.MigrateFromInfoProtoMsg;
            };
            Config: {
                typeUrl: string;
                aminoType: string;
                encode(message: _78.Config, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.Config;
                fromJSON(object: any): _78.Config;
                toJSON(message: _78.Config): unknown;
                fromPartial(object: {
                    modules?: {
                        name?: string;
                        config?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                }): _78.Config;
                fromSDK(object: _78.ConfigSDKType): _78.Config;
                toSDK(message: _78.Config): _78.ConfigSDKType;
                fromAmino(object: _78.ConfigAmino): _78.Config;
                toAmino(message: _78.Config): _78.ConfigAmino;
                fromAminoMsg(object: _78.ConfigAminoMsg): _78.Config;
                toAminoMsg(message: _78.Config): _78.ConfigAminoMsg;
                fromProtoMsg(message: _78.ConfigProtoMsg): _78.Config;
                toProto(message: _78.Config): Uint8Array;
                toProtoMsg(message: _78.Config): _78.ConfigProtoMsg;
            };
            ModuleConfig: {
                typeUrl: string;
                aminoType: string;
                encode(message: _78.ModuleConfig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.ModuleConfig;
                fromJSON(object: any): _78.ModuleConfig;
                toJSON(message: _78.ModuleConfig): unknown;
                fromPartial(object: {
                    name?: string;
                    config?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _78.ModuleConfig;
                fromSDK(object: _78.ModuleConfigSDKType): _78.ModuleConfig;
                toSDK(message: _78.ModuleConfig): _78.ModuleConfigSDKType;
                fromAmino(object: _78.ModuleConfigAmino): _78.ModuleConfig;
                toAmino(message: _78.ModuleConfig): _78.ModuleConfigAmino;
                fromAminoMsg(object: _78.ModuleConfigAminoMsg): _78.ModuleConfig;
                toAminoMsg(message: _78.ModuleConfig): _78.ModuleConfigAminoMsg;
                fromProtoMsg(message: _78.ModuleConfigProtoMsg): _78.ModuleConfig;
                toProto(message: _78.ModuleConfig): Uint8Array;
                toProtoMsg(message: _78.ModuleConfig): _78.ModuleConfigProtoMsg;
            };
        };
    }
    namespace group {
        const v1: {
            MsgClientImpl: typeof _223.MsgClientImpl;
            QueryClientImpl: typeof _210.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                groupInfo(request: _83.QueryGroupInfoRequest): Promise<_83.QueryGroupInfoResponse>;
                groupPolicyInfo(request: _83.QueryGroupPolicyInfoRequest): Promise<_83.QueryGroupPolicyInfoResponse>;
                groupMembers(request: _83.QueryGroupMembersRequest): Promise<_83.QueryGroupMembersResponse>;
                groupsByAdmin(request: _83.QueryGroupsByAdminRequest): Promise<_83.QueryGroupsByAdminResponse>;
                groupPoliciesByGroup(request: _83.QueryGroupPoliciesByGroupRequest): Promise<_83.QueryGroupPoliciesByGroupResponse>;
                groupPoliciesByAdmin(request: _83.QueryGroupPoliciesByAdminRequest): Promise<_83.QueryGroupPoliciesByAdminResponse>;
                proposal(request: _83.QueryProposalRequest): Promise<_83.QueryProposalResponse>;
                proposalsByGroupPolicy(request: _83.QueryProposalsByGroupPolicyRequest): Promise<_83.QueryProposalsByGroupPolicyResponse>;
                voteByProposalVoter(request: _83.QueryVoteByProposalVoterRequest): Promise<_83.QueryVoteByProposalVoterResponse>;
                votesByProposal(request: _83.QueryVotesByProposalRequest): Promise<_83.QueryVotesByProposalResponse>;
                votesByVoter(request: _83.QueryVotesByVoterRequest): Promise<_83.QueryVotesByVoterResponse>;
                groupsByMember(request: _83.QueryGroupsByMemberRequest): Promise<_83.QueryGroupsByMemberResponse>;
                tallyResult(request: _83.QueryTallyResultRequest): Promise<_83.QueryTallyResultResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useGroupInfo: <TData = _83.QueryGroupInfoResponse>({ request, options }: _210.UseGroupInfoQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useGroupPolicyInfo: <TData_1 = _83.QueryGroupPolicyInfoResponse>({ request, options }: _210.UseGroupPolicyInfoQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useGroupMembers: <TData_2 = _83.QueryGroupMembersResponse>({ request, options }: _210.UseGroupMembersQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useGroupsByAdmin: <TData_3 = _83.QueryGroupsByAdminResponse>({ request, options }: _210.UseGroupsByAdminQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useGroupPoliciesByGroup: <TData_4 = _83.QueryGroupPoliciesByGroupResponse>({ request, options }: _210.UseGroupPoliciesByGroupQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useGroupPoliciesByAdmin: <TData_5 = _83.QueryGroupPoliciesByAdminResponse>({ request, options }: _210.UseGroupPoliciesByAdminQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useProposal: <TData_6 = _83.QueryProposalResponse>({ request, options }: _210.UseProposalQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
                useProposalsByGroupPolicy: <TData_7 = _83.QueryProposalsByGroupPolicyResponse>({ request, options }: _210.UseProposalsByGroupPolicyQuery<TData_7>) => import("@tanstack/react-query").UseQueryResult<TData_7, Error>;
                useVoteByProposalVoter: <TData_8 = _83.QueryVoteByProposalVoterResponse>({ request, options }: _210.UseVoteByProposalVoterQuery<TData_8>) => import("@tanstack/react-query").UseQueryResult<TData_8, Error>;
                useVotesByProposal: <TData_9 = _83.QueryVotesByProposalResponse>({ request, options }: _210.UseVotesByProposalQuery<TData_9>) => import("@tanstack/react-query").UseQueryResult<TData_9, Error>;
                useVotesByVoter: <TData_10 = _83.QueryVotesByVoterResponse>({ request, options }: _210.UseVotesByVoterQuery<TData_10>) => import("@tanstack/react-query").UseQueryResult<TData_10, Error>;
                useGroupsByMember: <TData_11 = _83.QueryGroupsByMemberResponse>({ request, options }: _210.UseGroupsByMemberQuery<TData_11>) => import("@tanstack/react-query").UseQueryResult<TData_11, Error>;
                useTallyResult: <TData_12 = _83.QueryTallyResultResponse>({ request, options }: _210.UseTallyResultQuery<TData_12>) => import("@tanstack/react-query").UseQueryResult<TData_12, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createGroup(value: _84.MsgCreateGroup): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupMembers(value: _84.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupAdmin(value: _84.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupMetadata(value: _84.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createGroupPolicy(value: _84.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createGroupWithPolicy(value: _84.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyAdmin(value: _84.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyDecisionPolicy(value: _84.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyMetadata(value: _84.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    submitProposal(value: _84.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawProposal(value: _84.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _84.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    exec(value: _84.MsgExec): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    leaveGroup(value: _84.MsgLeaveGroup): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createGroup(value: _84.MsgCreateGroup): {
                        typeUrl: string;
                        value: _84.MsgCreateGroup;
                    };
                    updateGroupMembers(value: _84.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMembers;
                    };
                    updateGroupAdmin(value: _84.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupAdmin;
                    };
                    updateGroupMetadata(value: _84.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMetadata;
                    };
                    createGroupPolicy(value: _84.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupPolicy;
                    };
                    createGroupWithPolicy(value: _84.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupWithPolicy;
                    };
                    updateGroupPolicyAdmin(value: _84.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyAdmin;
                    };
                    updateGroupPolicyDecisionPolicy(value: _84.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyDecisionPolicy;
                    };
                    updateGroupPolicyMetadata(value: _84.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyMetadata;
                    };
                    submitProposal(value: _84.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _84.MsgSubmitProposal;
                    };
                    withdrawProposal(value: _84.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: _84.MsgWithdrawProposal;
                    };
                    vote(value: _84.MsgVote): {
                        typeUrl: string;
                        value: _84.MsgVote;
                    };
                    exec(value: _84.MsgExec): {
                        typeUrl: string;
                        value: _84.MsgExec;
                    };
                    leaveGroup(value: _84.MsgLeaveGroup): {
                        typeUrl: string;
                        value: _84.MsgLeaveGroup;
                    };
                };
                toJSON: {
                    createGroup(value: _84.MsgCreateGroup): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupMembers(value: _84.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupAdmin(value: _84.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupMetadata(value: _84.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: unknown;
                    };
                    createGroupPolicy(value: _84.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: unknown;
                    };
                    createGroupWithPolicy(value: _84.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupPolicyAdmin(value: _84.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupPolicyDecisionPolicy(value: _84.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateGroupPolicyMetadata(value: _84.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: unknown;
                    };
                    submitProposal(value: _84.MsgSubmitProposal): {
                        typeUrl: string;
                        value: unknown;
                    };
                    withdrawProposal(value: _84.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: unknown;
                    };
                    vote(value: _84.MsgVote): {
                        typeUrl: string;
                        value: unknown;
                    };
                    exec(value: _84.MsgExec): {
                        typeUrl: string;
                        value: unknown;
                    };
                    leaveGroup(value: _84.MsgLeaveGroup): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    createGroup(value: any): {
                        typeUrl: string;
                        value: _84.MsgCreateGroup;
                    };
                    updateGroupMembers(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMembers;
                    };
                    updateGroupAdmin(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupAdmin;
                    };
                    updateGroupMetadata(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMetadata;
                    };
                    createGroupPolicy(value: any): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupPolicy;
                    };
                    createGroupWithPolicy(value: any): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupWithPolicy;
                    };
                    updateGroupPolicyAdmin(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyAdmin;
                    };
                    updateGroupPolicyDecisionPolicy(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyDecisionPolicy;
                    };
                    updateGroupPolicyMetadata(value: any): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyMetadata;
                    };
                    submitProposal(value: any): {
                        typeUrl: string;
                        value: _84.MsgSubmitProposal;
                    };
                    withdrawProposal(value: any): {
                        typeUrl: string;
                        value: _84.MsgWithdrawProposal;
                    };
                    vote(value: any): {
                        typeUrl: string;
                        value: _84.MsgVote;
                    };
                    exec(value: any): {
                        typeUrl: string;
                        value: _84.MsgExec;
                    };
                    leaveGroup(value: any): {
                        typeUrl: string;
                        value: _84.MsgLeaveGroup;
                    };
                };
                fromPartial: {
                    createGroup(value: _84.MsgCreateGroup): {
                        typeUrl: string;
                        value: _84.MsgCreateGroup;
                    };
                    updateGroupMembers(value: _84.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMembers;
                    };
                    updateGroupAdmin(value: _84.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupAdmin;
                    };
                    updateGroupMetadata(value: _84.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupMetadata;
                    };
                    createGroupPolicy(value: _84.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupPolicy;
                    };
                    createGroupWithPolicy(value: _84.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: _84.MsgCreateGroupWithPolicy;
                    };
                    updateGroupPolicyAdmin(value: _84.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyAdmin;
                    };
                    updateGroupPolicyDecisionPolicy(value: _84.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyDecisionPolicy;
                    };
                    updateGroupPolicyMetadata(value: _84.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: _84.MsgUpdateGroupPolicyMetadata;
                    };
                    submitProposal(value: _84.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _84.MsgSubmitProposal;
                    };
                    withdrawProposal(value: _84.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: _84.MsgWithdrawProposal;
                    };
                    vote(value: _84.MsgVote): {
                        typeUrl: string;
                        value: _84.MsgVote;
                    };
                    exec(value: _84.MsgExec): {
                        typeUrl: string;
                        value: _84.MsgExec;
                    };
                    leaveGroup(value: _84.MsgLeaveGroup): {
                        typeUrl: string;
                        value: _84.MsgLeaveGroup;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.group.v1.MsgCreateGroup": {
                    aminoType: string;
                    toAmino: (message: _84.MsgCreateGroup) => _84.MsgCreateGroupAmino;
                    fromAmino: (object: _84.MsgCreateGroupAmino) => _84.MsgCreateGroup;
                };
                "/cosmos.group.v1.MsgUpdateGroupMembers": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupMembers) => _84.MsgUpdateGroupMembersAmino;
                    fromAmino: (object: _84.MsgUpdateGroupMembersAmino) => _84.MsgUpdateGroupMembers;
                };
                "/cosmos.group.v1.MsgUpdateGroupAdmin": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupAdmin) => _84.MsgUpdateGroupAdminAmino;
                    fromAmino: (object: _84.MsgUpdateGroupAdminAmino) => _84.MsgUpdateGroupAdmin;
                };
                "/cosmos.group.v1.MsgUpdateGroupMetadata": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupMetadata) => _84.MsgUpdateGroupMetadataAmino;
                    fromAmino: (object: _84.MsgUpdateGroupMetadataAmino) => _84.MsgUpdateGroupMetadata;
                };
                "/cosmos.group.v1.MsgCreateGroupPolicy": {
                    aminoType: string;
                    toAmino: (message: _84.MsgCreateGroupPolicy) => _84.MsgCreateGroupPolicyAmino;
                    fromAmino: (object: _84.MsgCreateGroupPolicyAmino) => _84.MsgCreateGroupPolicy;
                };
                "/cosmos.group.v1.MsgCreateGroupWithPolicy": {
                    aminoType: string;
                    toAmino: (message: _84.MsgCreateGroupWithPolicy) => _84.MsgCreateGroupWithPolicyAmino;
                    fromAmino: (object: _84.MsgCreateGroupWithPolicyAmino) => _84.MsgCreateGroupWithPolicy;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupPolicyAdmin) => _84.MsgUpdateGroupPolicyAdminAmino;
                    fromAmino: (object: _84.MsgUpdateGroupPolicyAdminAmino) => _84.MsgUpdateGroupPolicyAdmin;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupPolicyDecisionPolicy) => _84.MsgUpdateGroupPolicyDecisionPolicyAmino;
                    fromAmino: (object: _84.MsgUpdateGroupPolicyDecisionPolicyAmino) => _84.MsgUpdateGroupPolicyDecisionPolicy;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata": {
                    aminoType: string;
                    toAmino: (message: _84.MsgUpdateGroupPolicyMetadata) => _84.MsgUpdateGroupPolicyMetadataAmino;
                    fromAmino: (object: _84.MsgUpdateGroupPolicyMetadataAmino) => _84.MsgUpdateGroupPolicyMetadata;
                };
                "/cosmos.group.v1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _84.MsgSubmitProposal) => _84.MsgSubmitProposalAmino;
                    fromAmino: (object: _84.MsgSubmitProposalAmino) => _84.MsgSubmitProposal;
                };
                "/cosmos.group.v1.MsgWithdrawProposal": {
                    aminoType: string;
                    toAmino: (message: _84.MsgWithdrawProposal) => _84.MsgWithdrawProposalAmino;
                    fromAmino: (object: _84.MsgWithdrawProposalAmino) => _84.MsgWithdrawProposal;
                };
                "/cosmos.group.v1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _84.MsgVote) => _84.MsgVoteAmino;
                    fromAmino: (object: _84.MsgVoteAmino) => _84.MsgVote;
                };
                "/cosmos.group.v1.MsgExec": {
                    aminoType: string;
                    toAmino: (message: _84.MsgExec) => _84.MsgExecAmino;
                    fromAmino: (object: _84.MsgExecAmino) => _84.MsgExec;
                };
                "/cosmos.group.v1.MsgLeaveGroup": {
                    aminoType: string;
                    toAmino: (message: _84.MsgLeaveGroup) => _84.MsgLeaveGroupAmino;
                    fromAmino: (object: _84.MsgLeaveGroupAmino) => _84.MsgLeaveGroup;
                };
            };
            voteOptionFromJSON(object: any): _85.VoteOption;
            voteOptionToJSON(object: _85.VoteOption): string;
            proposalStatusFromJSON(object: any): _85.ProposalStatus;
            proposalStatusToJSON(object: _85.ProposalStatus): string;
            proposalResultFromJSON(object: any): _85.ProposalResult;
            proposalResultToJSON(object: _85.ProposalResult): string;
            proposalExecutorResultFromJSON(object: any): _85.ProposalExecutorResult;
            proposalExecutorResultToJSON(object: _85.ProposalExecutorResult): string;
            VoteOption: typeof _85.VoteOption;
            VoteOptionSDKType: typeof _85.VoteOption;
            VoteOptionAmino: typeof _85.VoteOption;
            ProposalStatus: typeof _85.ProposalStatus;
            ProposalStatusSDKType: typeof _85.ProposalStatus;
            ProposalStatusAmino: typeof _85.ProposalStatus;
            ProposalResult: typeof _85.ProposalResult;
            ProposalResultSDKType: typeof _85.ProposalResult;
            ProposalResultAmino: typeof _85.ProposalResult;
            ProposalExecutorResult: typeof _85.ProposalExecutorResult;
            ProposalExecutorResultSDKType: typeof _85.ProposalExecutorResult;
            ProposalExecutorResultAmino: typeof _85.ProposalExecutorResult;
            Member: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.Member, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.Member;
                fromJSON(object: any): _85.Member;
                toJSON(message: _85.Member): unknown;
                fromPartial(object: {
                    address?: string;
                    weight?: string;
                    metadata?: string;
                    addedAt?: Date;
                }): _85.Member;
                fromSDK(object: _85.MemberSDKType): _85.Member;
                toSDK(message: _85.Member): _85.MemberSDKType;
                fromAmino(object: _85.MemberAmino): _85.Member;
                toAmino(message: _85.Member): _85.MemberAmino;
                fromAminoMsg(object: _85.MemberAminoMsg): _85.Member;
                toAminoMsg(message: _85.Member): _85.MemberAminoMsg;
                fromProtoMsg(message: _85.MemberProtoMsg): _85.Member;
                toProto(message: _85.Member): Uint8Array;
                toProtoMsg(message: _85.Member): _85.MemberProtoMsg;
            };
            Members: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.Members, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.Members;
                fromJSON(object: any): _85.Members;
                toJSON(message: _85.Members): unknown;
                fromPartial(object: {
                    members?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    }[];
                }): _85.Members;
                fromSDK(object: _85.MembersSDKType): _85.Members;
                toSDK(message: _85.Members): _85.MembersSDKType;
                fromAmino(object: _85.MembersAmino): _85.Members;
                toAmino(message: _85.Members): _85.MembersAmino;
                fromAminoMsg(object: _85.MembersAminoMsg): _85.Members;
                toAminoMsg(message: _85.Members): _85.MembersAminoMsg;
                fromProtoMsg(message: _85.MembersProtoMsg): _85.Members;
                toProto(message: _85.Members): Uint8Array;
                toProtoMsg(message: _85.Members): _85.MembersProtoMsg;
            };
            ThresholdDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.ThresholdDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.ThresholdDecisionPolicy;
                fromJSON(object: any): _85.ThresholdDecisionPolicy;
                toJSON(message: _85.ThresholdDecisionPolicy): unknown;
                fromPartial(object: {
                    threshold?: string;
                    windows?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExecutionPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                }): _85.ThresholdDecisionPolicy;
                fromSDK(object: _85.ThresholdDecisionPolicySDKType): _85.ThresholdDecisionPolicy;
                toSDK(message: _85.ThresholdDecisionPolicy): _85.ThresholdDecisionPolicySDKType;
                fromAmino(object: _85.ThresholdDecisionPolicyAmino): _85.ThresholdDecisionPolicy;
                toAmino(message: _85.ThresholdDecisionPolicy): _85.ThresholdDecisionPolicyAmino;
                fromAminoMsg(object: _85.ThresholdDecisionPolicyAminoMsg): _85.ThresholdDecisionPolicy;
                toAminoMsg(message: _85.ThresholdDecisionPolicy): _85.ThresholdDecisionPolicyAminoMsg;
                fromProtoMsg(message: _85.ThresholdDecisionPolicyProtoMsg): _85.ThresholdDecisionPolicy;
                toProto(message: _85.ThresholdDecisionPolicy): Uint8Array;
                toProtoMsg(message: _85.ThresholdDecisionPolicy): _85.ThresholdDecisionPolicyProtoMsg;
            };
            PercentageDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.PercentageDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.PercentageDecisionPolicy;
                fromJSON(object: any): _85.PercentageDecisionPolicy;
                toJSON(message: _85.PercentageDecisionPolicy): unknown;
                fromPartial(object: {
                    percentage?: string;
                    windows?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExecutionPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                }): _85.PercentageDecisionPolicy;
                fromSDK(object: _85.PercentageDecisionPolicySDKType): _85.PercentageDecisionPolicy;
                toSDK(message: _85.PercentageDecisionPolicy): _85.PercentageDecisionPolicySDKType;
                fromAmino(object: _85.PercentageDecisionPolicyAmino): _85.PercentageDecisionPolicy;
                toAmino(message: _85.PercentageDecisionPolicy): _85.PercentageDecisionPolicyAmino;
                fromAminoMsg(object: _85.PercentageDecisionPolicyAminoMsg): _85.PercentageDecisionPolicy;
                toAminoMsg(message: _85.PercentageDecisionPolicy): _85.PercentageDecisionPolicyAminoMsg;
                fromProtoMsg(message: _85.PercentageDecisionPolicyProtoMsg): _85.PercentageDecisionPolicy;
                toProto(message: _85.PercentageDecisionPolicy): Uint8Array;
                toProtoMsg(message: _85.PercentageDecisionPolicy): _85.PercentageDecisionPolicyProtoMsg;
            };
            DecisionPolicyWindows: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.DecisionPolicyWindows, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.DecisionPolicyWindows;
                fromJSON(object: any): _85.DecisionPolicyWindows;
                toJSON(message: _85.DecisionPolicyWindows): unknown;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    minExecutionPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _85.DecisionPolicyWindows;
                fromSDK(object: _85.DecisionPolicyWindowsSDKType): _85.DecisionPolicyWindows;
                toSDK(message: _85.DecisionPolicyWindows): _85.DecisionPolicyWindowsSDKType;
                fromAmino(object: _85.DecisionPolicyWindowsAmino): _85.DecisionPolicyWindows;
                toAmino(message: _85.DecisionPolicyWindows): _85.DecisionPolicyWindowsAmino;
                fromAminoMsg(object: _85.DecisionPolicyWindowsAminoMsg): _85.DecisionPolicyWindows;
                toAminoMsg(message: _85.DecisionPolicyWindows): _85.DecisionPolicyWindowsAminoMsg;
                fromProtoMsg(message: _85.DecisionPolicyWindowsProtoMsg): _85.DecisionPolicyWindows;
                toProto(message: _85.DecisionPolicyWindows): Uint8Array;
                toProtoMsg(message: _85.DecisionPolicyWindows): _85.DecisionPolicyWindowsProtoMsg;
            };
            GroupInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.GroupInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.GroupInfo;
                fromJSON(object: any): _85.GroupInfo;
                toJSON(message: _85.GroupInfo): unknown;
                fromPartial(object: {
                    id?: bigint;
                    admin?: string;
                    metadata?: string;
                    version?: bigint;
                    totalWeight?: string;
                    createdAt?: Date;
                }): _85.GroupInfo;
                fromSDK(object: _85.GroupInfoSDKType): _85.GroupInfo;
                toSDK(message: _85.GroupInfo): _85.GroupInfoSDKType;
                fromAmino(object: _85.GroupInfoAmino): _85.GroupInfo;
                toAmino(message: _85.GroupInfo): _85.GroupInfoAmino;
                fromAminoMsg(object: _85.GroupInfoAminoMsg): _85.GroupInfo;
                toAminoMsg(message: _85.GroupInfo): _85.GroupInfoAminoMsg;
                fromProtoMsg(message: _85.GroupInfoProtoMsg): _85.GroupInfo;
                toProto(message: _85.GroupInfo): Uint8Array;
                toProtoMsg(message: _85.GroupInfo): _85.GroupInfoProtoMsg;
            };
            GroupMember: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.GroupMember, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.GroupMember;
                fromJSON(object: any): _85.GroupMember;
                toJSON(message: _85.GroupMember): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                    member?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    };
                }): _85.GroupMember;
                fromSDK(object: _85.GroupMemberSDKType): _85.GroupMember;
                toSDK(message: _85.GroupMember): _85.GroupMemberSDKType;
                fromAmino(object: _85.GroupMemberAmino): _85.GroupMember;
                toAmino(message: _85.GroupMember): _85.GroupMemberAmino;
                fromAminoMsg(object: _85.GroupMemberAminoMsg): _85.GroupMember;
                toAminoMsg(message: _85.GroupMember): _85.GroupMemberAminoMsg;
                fromProtoMsg(message: _85.GroupMemberProtoMsg): _85.GroupMember;
                toProto(message: _85.GroupMember): Uint8Array;
                toProtoMsg(message: _85.GroupMember): _85.GroupMemberProtoMsg;
            };
            GroupPolicyInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.GroupPolicyInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.GroupPolicyInfo;
                fromJSON(object: any): _85.GroupPolicyInfo;
                toJSON(message: _85.GroupPolicyInfo): unknown;
                fromPartial(object: {
                    address?: string;
                    groupId?: bigint;
                    admin?: string;
                    metadata?: string;
                    version?: bigint;
                    decisionPolicy?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    createdAt?: Date;
                }): _85.GroupPolicyInfo;
                fromSDK(object: _85.GroupPolicyInfoSDKType): _85.GroupPolicyInfo;
                toSDK(message: _85.GroupPolicyInfo): _85.GroupPolicyInfoSDKType;
                fromAmino(object: _85.GroupPolicyInfoAmino): _85.GroupPolicyInfo;
                toAmino(message: _85.GroupPolicyInfo): _85.GroupPolicyInfoAmino;
                fromAminoMsg(object: _85.GroupPolicyInfoAminoMsg): _85.GroupPolicyInfo;
                toAminoMsg(message: _85.GroupPolicyInfo): _85.GroupPolicyInfoAminoMsg;
                fromProtoMsg(message: _85.GroupPolicyInfoProtoMsg): _85.GroupPolicyInfo;
                toProto(message: _85.GroupPolicyInfo): Uint8Array;
                toProtoMsg(message: _85.GroupPolicyInfo): _85.GroupPolicyInfoProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.Proposal;
                fromJSON(object: any): _85.Proposal;
                toJSON(message: _85.Proposal): unknown;
                fromPartial(object: {
                    id?: bigint;
                    address?: string;
                    metadata?: string;
                    proposers?: string[];
                    submitTime?: Date;
                    groupVersion?: bigint;
                    groupPolicyVersion?: bigint;
                    status?: _85.ProposalStatus;
                    result?: _85.ProposalResult;
                    finalTallyResult?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                    votingPeriodEnd?: Date;
                    executorResult?: _85.ProposalExecutorResult;
                    messages?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _85.Proposal;
                fromSDK(object: _85.ProposalSDKType): _85.Proposal;
                toSDK(message: _85.Proposal): _85.ProposalSDKType;
                fromAmino(object: _85.ProposalAmino): _85.Proposal;
                toAmino(message: _85.Proposal): _85.ProposalAmino;
                fromAminoMsg(object: _85.ProposalAminoMsg): _85.Proposal;
                toAminoMsg(message: _85.Proposal): _85.ProposalAminoMsg;
                fromProtoMsg(message: _85.ProposalProtoMsg): _85.Proposal;
                toProto(message: _85.Proposal): Uint8Array;
                toProtoMsg(message: _85.Proposal): _85.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.TallyResult;
                fromJSON(object: any): _85.TallyResult;
                toJSON(message: _85.TallyResult): unknown;
                fromPartial(object: {
                    yesCount?: string;
                    abstainCount?: string;
                    noCount?: string;
                    noWithVetoCount?: string;
                }): _85.TallyResult;
                fromSDK(object: _85.TallyResultSDKType): _85.TallyResult;
                toSDK(message: _85.TallyResult): _85.TallyResultSDKType;
                fromAmino(object: _85.TallyResultAmino): _85.TallyResult;
                toAmino(message: _85.TallyResult): _85.TallyResultAmino;
                fromAminoMsg(object: _85.TallyResultAminoMsg): _85.TallyResult;
                toAminoMsg(message: _85.TallyResult): _85.TallyResultAminoMsg;
                fromProtoMsg(message: _85.TallyResultProtoMsg): _85.TallyResult;
                toProto(message: _85.TallyResult): Uint8Array;
                toProtoMsg(message: _85.TallyResult): _85.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.Vote;
                fromJSON(object: any): _85.Vote;
                toJSON(message: _85.Vote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _85.VoteOption;
                    metadata?: string;
                    submitTime?: Date;
                }): _85.Vote;
                fromSDK(object: _85.VoteSDKType): _85.Vote;
                toSDK(message: _85.Vote): _85.VoteSDKType;
                fromAmino(object: _85.VoteAmino): _85.Vote;
                toAmino(message: _85.Vote): _85.VoteAmino;
                fromAminoMsg(object: _85.VoteAminoMsg): _85.Vote;
                toAminoMsg(message: _85.Vote): _85.VoteAminoMsg;
                fromProtoMsg(message: _85.VoteProtoMsg): _85.Vote;
                toProto(message: _85.Vote): Uint8Array;
                toProtoMsg(message: _85.Vote): _85.VoteProtoMsg;
            };
            execFromJSON(object: any): _84.Exec;
            execToJSON(object: _84.Exec): string;
            Exec: typeof _84.Exec;
            ExecSDKType: typeof _84.Exec;
            ExecAmino: typeof _84.Exec;
            MsgCreateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroup;
                fromJSON(object: any): _84.MsgCreateGroup;
                toJSON(message: _84.MsgCreateGroup): unknown;
                fromPartial(object: {
                    admin?: string;
                    members?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    }[];
                    metadata?: string;
                }): _84.MsgCreateGroup;
                fromSDK(object: _84.MsgCreateGroupSDKType): _84.MsgCreateGroup;
                toSDK(message: _84.MsgCreateGroup): _84.MsgCreateGroupSDKType;
                fromAmino(object: _84.MsgCreateGroupAmino): _84.MsgCreateGroup;
                toAmino(message: _84.MsgCreateGroup): _84.MsgCreateGroupAmino;
                fromAminoMsg(object: _84.MsgCreateGroupAminoMsg): _84.MsgCreateGroup;
                toAminoMsg(message: _84.MsgCreateGroup): _84.MsgCreateGroupAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupProtoMsg): _84.MsgCreateGroup;
                toProto(message: _84.MsgCreateGroup): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroup): _84.MsgCreateGroupProtoMsg;
            };
            MsgCreateGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroupResponse;
                fromJSON(object: any): _84.MsgCreateGroupResponse;
                toJSON(message: _84.MsgCreateGroupResponse): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                }): _84.MsgCreateGroupResponse;
                fromSDK(object: _84.MsgCreateGroupResponseSDKType): _84.MsgCreateGroupResponse;
                toSDK(message: _84.MsgCreateGroupResponse): _84.MsgCreateGroupResponseSDKType;
                fromAmino(object: _84.MsgCreateGroupResponseAmino): _84.MsgCreateGroupResponse;
                toAmino(message: _84.MsgCreateGroupResponse): _84.MsgCreateGroupResponseAmino;
                fromAminoMsg(object: _84.MsgCreateGroupResponseAminoMsg): _84.MsgCreateGroupResponse;
                toAminoMsg(message: _84.MsgCreateGroupResponse): _84.MsgCreateGroupResponseAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupResponseProtoMsg): _84.MsgCreateGroupResponse;
                toProto(message: _84.MsgCreateGroupResponse): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroupResponse): _84.MsgCreateGroupResponseProtoMsg;
            };
            MsgUpdateGroupMembers: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupMembers, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupMembers;
                fromJSON(object: any): _84.MsgUpdateGroupMembers;
                toJSON(message: _84.MsgUpdateGroupMembers): unknown;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    memberUpdates?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    }[];
                }): _84.MsgUpdateGroupMembers;
                fromSDK(object: _84.MsgUpdateGroupMembersSDKType): _84.MsgUpdateGroupMembers;
                toSDK(message: _84.MsgUpdateGroupMembers): _84.MsgUpdateGroupMembersSDKType;
                fromAmino(object: _84.MsgUpdateGroupMembersAmino): _84.MsgUpdateGroupMembers;
                toAmino(message: _84.MsgUpdateGroupMembers): _84.MsgUpdateGroupMembersAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupMembersAminoMsg): _84.MsgUpdateGroupMembers;
                toAminoMsg(message: _84.MsgUpdateGroupMembers): _84.MsgUpdateGroupMembersAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupMembersProtoMsg): _84.MsgUpdateGroupMembers;
                toProto(message: _84.MsgUpdateGroupMembers): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupMembers): _84.MsgUpdateGroupMembersProtoMsg;
            };
            MsgUpdateGroupMembersResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupMembersResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupMembersResponse;
                fromJSON(_: any): _84.MsgUpdateGroupMembersResponse;
                toJSON(_: _84.MsgUpdateGroupMembersResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupMembersResponse;
                fromSDK(_: _84.MsgUpdateGroupMembersResponseSDKType): _84.MsgUpdateGroupMembersResponse;
                toSDK(_: _84.MsgUpdateGroupMembersResponse): _84.MsgUpdateGroupMembersResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupMembersResponseAmino): _84.MsgUpdateGroupMembersResponse;
                toAmino(_: _84.MsgUpdateGroupMembersResponse): _84.MsgUpdateGroupMembersResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupMembersResponseAminoMsg): _84.MsgUpdateGroupMembersResponse;
                toAminoMsg(message: _84.MsgUpdateGroupMembersResponse): _84.MsgUpdateGroupMembersResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupMembersResponseProtoMsg): _84.MsgUpdateGroupMembersResponse;
                toProto(message: _84.MsgUpdateGroupMembersResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupMembersResponse): _84.MsgUpdateGroupMembersResponseProtoMsg;
            };
            MsgUpdateGroupAdmin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupAdmin;
                fromJSON(object: any): _84.MsgUpdateGroupAdmin;
                toJSON(message: _84.MsgUpdateGroupAdmin): unknown;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    newAdmin?: string;
                }): _84.MsgUpdateGroupAdmin;
                fromSDK(object: _84.MsgUpdateGroupAdminSDKType): _84.MsgUpdateGroupAdmin;
                toSDK(message: _84.MsgUpdateGroupAdmin): _84.MsgUpdateGroupAdminSDKType;
                fromAmino(object: _84.MsgUpdateGroupAdminAmino): _84.MsgUpdateGroupAdmin;
                toAmino(message: _84.MsgUpdateGroupAdmin): _84.MsgUpdateGroupAdminAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupAdminAminoMsg): _84.MsgUpdateGroupAdmin;
                toAminoMsg(message: _84.MsgUpdateGroupAdmin): _84.MsgUpdateGroupAdminAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupAdminProtoMsg): _84.MsgUpdateGroupAdmin;
                toProto(message: _84.MsgUpdateGroupAdmin): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupAdmin): _84.MsgUpdateGroupAdminProtoMsg;
            };
            MsgUpdateGroupAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupAdminResponse;
                fromJSON(_: any): _84.MsgUpdateGroupAdminResponse;
                toJSON(_: _84.MsgUpdateGroupAdminResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupAdminResponse;
                fromSDK(_: _84.MsgUpdateGroupAdminResponseSDKType): _84.MsgUpdateGroupAdminResponse;
                toSDK(_: _84.MsgUpdateGroupAdminResponse): _84.MsgUpdateGroupAdminResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupAdminResponseAmino): _84.MsgUpdateGroupAdminResponse;
                toAmino(_: _84.MsgUpdateGroupAdminResponse): _84.MsgUpdateGroupAdminResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupAdminResponseAminoMsg): _84.MsgUpdateGroupAdminResponse;
                toAminoMsg(message: _84.MsgUpdateGroupAdminResponse): _84.MsgUpdateGroupAdminResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupAdminResponseProtoMsg): _84.MsgUpdateGroupAdminResponse;
                toProto(message: _84.MsgUpdateGroupAdminResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupAdminResponse): _84.MsgUpdateGroupAdminResponseProtoMsg;
            };
            MsgUpdateGroupMetadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupMetadata;
                fromJSON(object: any): _84.MsgUpdateGroupMetadata;
                toJSON(message: _84.MsgUpdateGroupMetadata): unknown;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    metadata?: string;
                }): _84.MsgUpdateGroupMetadata;
                fromSDK(object: _84.MsgUpdateGroupMetadataSDKType): _84.MsgUpdateGroupMetadata;
                toSDK(message: _84.MsgUpdateGroupMetadata): _84.MsgUpdateGroupMetadataSDKType;
                fromAmino(object: _84.MsgUpdateGroupMetadataAmino): _84.MsgUpdateGroupMetadata;
                toAmino(message: _84.MsgUpdateGroupMetadata): _84.MsgUpdateGroupMetadataAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupMetadataAminoMsg): _84.MsgUpdateGroupMetadata;
                toAminoMsg(message: _84.MsgUpdateGroupMetadata): _84.MsgUpdateGroupMetadataAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupMetadataProtoMsg): _84.MsgUpdateGroupMetadata;
                toProto(message: _84.MsgUpdateGroupMetadata): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupMetadata): _84.MsgUpdateGroupMetadataProtoMsg;
            };
            MsgUpdateGroupMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupMetadataResponse;
                fromJSON(_: any): _84.MsgUpdateGroupMetadataResponse;
                toJSON(_: _84.MsgUpdateGroupMetadataResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupMetadataResponse;
                fromSDK(_: _84.MsgUpdateGroupMetadataResponseSDKType): _84.MsgUpdateGroupMetadataResponse;
                toSDK(_: _84.MsgUpdateGroupMetadataResponse): _84.MsgUpdateGroupMetadataResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupMetadataResponseAmino): _84.MsgUpdateGroupMetadataResponse;
                toAmino(_: _84.MsgUpdateGroupMetadataResponse): _84.MsgUpdateGroupMetadataResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupMetadataResponseAminoMsg): _84.MsgUpdateGroupMetadataResponse;
                toAminoMsg(message: _84.MsgUpdateGroupMetadataResponse): _84.MsgUpdateGroupMetadataResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupMetadataResponseProtoMsg): _84.MsgUpdateGroupMetadataResponse;
                toProto(message: _84.MsgUpdateGroupMetadataResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupMetadataResponse): _84.MsgUpdateGroupMetadataResponseProtoMsg;
            };
            MsgCreateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroupPolicy;
                fromJSON(object: any): _84.MsgCreateGroupPolicy;
                toJSON(message: _84.MsgCreateGroupPolicy): unknown;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    metadata?: string;
                    decisionPolicy?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _84.MsgCreateGroupPolicy;
                fromSDK(object: _84.MsgCreateGroupPolicySDKType): _84.MsgCreateGroupPolicy;
                toSDK(message: _84.MsgCreateGroupPolicy): _84.MsgCreateGroupPolicySDKType;
                fromAmino(object: _84.MsgCreateGroupPolicyAmino): _84.MsgCreateGroupPolicy;
                toAmino(message: _84.MsgCreateGroupPolicy): _84.MsgCreateGroupPolicyAmino;
                fromAminoMsg(object: _84.MsgCreateGroupPolicyAminoMsg): _84.MsgCreateGroupPolicy;
                toAminoMsg(message: _84.MsgCreateGroupPolicy): _84.MsgCreateGroupPolicyAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupPolicyProtoMsg): _84.MsgCreateGroupPolicy;
                toProto(message: _84.MsgCreateGroupPolicy): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroupPolicy): _84.MsgCreateGroupPolicyProtoMsg;
            };
            MsgCreateGroupPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroupPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroupPolicyResponse;
                fromJSON(object: any): _84.MsgCreateGroupPolicyResponse;
                toJSON(message: _84.MsgCreateGroupPolicyResponse): unknown;
                fromPartial(object: {
                    address?: string;
                }): _84.MsgCreateGroupPolicyResponse;
                fromSDK(object: _84.MsgCreateGroupPolicyResponseSDKType): _84.MsgCreateGroupPolicyResponse;
                toSDK(message: _84.MsgCreateGroupPolicyResponse): _84.MsgCreateGroupPolicyResponseSDKType;
                fromAmino(object: _84.MsgCreateGroupPolicyResponseAmino): _84.MsgCreateGroupPolicyResponse;
                toAmino(message: _84.MsgCreateGroupPolicyResponse): _84.MsgCreateGroupPolicyResponseAmino;
                fromAminoMsg(object: _84.MsgCreateGroupPolicyResponseAminoMsg): _84.MsgCreateGroupPolicyResponse;
                toAminoMsg(message: _84.MsgCreateGroupPolicyResponse): _84.MsgCreateGroupPolicyResponseAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupPolicyResponseProtoMsg): _84.MsgCreateGroupPolicyResponse;
                toProto(message: _84.MsgCreateGroupPolicyResponse): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroupPolicyResponse): _84.MsgCreateGroupPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyAdmin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupPolicyAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyAdmin;
                fromJSON(object: any): _84.MsgUpdateGroupPolicyAdmin;
                toJSON(message: _84.MsgUpdateGroupPolicyAdmin): unknown;
                fromPartial(object: {
                    admin?: string;
                    address?: string;
                    newAdmin?: string;
                }): _84.MsgUpdateGroupPolicyAdmin;
                fromSDK(object: _84.MsgUpdateGroupPolicyAdminSDKType): _84.MsgUpdateGroupPolicyAdmin;
                toSDK(message: _84.MsgUpdateGroupPolicyAdmin): _84.MsgUpdateGroupPolicyAdminSDKType;
                fromAmino(object: _84.MsgUpdateGroupPolicyAdminAmino): _84.MsgUpdateGroupPolicyAdmin;
                toAmino(message: _84.MsgUpdateGroupPolicyAdmin): _84.MsgUpdateGroupPolicyAdminAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyAdminAminoMsg): _84.MsgUpdateGroupPolicyAdmin;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyAdmin): _84.MsgUpdateGroupPolicyAdminAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyAdminProtoMsg): _84.MsgUpdateGroupPolicyAdmin;
                toProto(message: _84.MsgUpdateGroupPolicyAdmin): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyAdmin): _84.MsgUpdateGroupPolicyAdminProtoMsg;
            };
            MsgCreateGroupWithPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroupWithPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroupWithPolicy;
                fromJSON(object: any): _84.MsgCreateGroupWithPolicy;
                toJSON(message: _84.MsgCreateGroupWithPolicy): unknown;
                fromPartial(object: {
                    admin?: string;
                    members?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    }[];
                    groupMetadata?: string;
                    groupPolicyMetadata?: string;
                    groupPolicyAsAdmin?: boolean;
                    decisionPolicy?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _84.MsgCreateGroupWithPolicy;
                fromSDK(object: _84.MsgCreateGroupWithPolicySDKType): _84.MsgCreateGroupWithPolicy;
                toSDK(message: _84.MsgCreateGroupWithPolicy): _84.MsgCreateGroupWithPolicySDKType;
                fromAmino(object: _84.MsgCreateGroupWithPolicyAmino): _84.MsgCreateGroupWithPolicy;
                toAmino(message: _84.MsgCreateGroupWithPolicy): _84.MsgCreateGroupWithPolicyAmino;
                fromAminoMsg(object: _84.MsgCreateGroupWithPolicyAminoMsg): _84.MsgCreateGroupWithPolicy;
                toAminoMsg(message: _84.MsgCreateGroupWithPolicy): _84.MsgCreateGroupWithPolicyAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupWithPolicyProtoMsg): _84.MsgCreateGroupWithPolicy;
                toProto(message: _84.MsgCreateGroupWithPolicy): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroupWithPolicy): _84.MsgCreateGroupWithPolicyProtoMsg;
            };
            MsgCreateGroupWithPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgCreateGroupWithPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgCreateGroupWithPolicyResponse;
                fromJSON(object: any): _84.MsgCreateGroupWithPolicyResponse;
                toJSON(message: _84.MsgCreateGroupWithPolicyResponse): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                    groupPolicyAddress?: string;
                }): _84.MsgCreateGroupWithPolicyResponse;
                fromSDK(object: _84.MsgCreateGroupWithPolicyResponseSDKType): _84.MsgCreateGroupWithPolicyResponse;
                toSDK(message: _84.MsgCreateGroupWithPolicyResponse): _84.MsgCreateGroupWithPolicyResponseSDKType;
                fromAmino(object: _84.MsgCreateGroupWithPolicyResponseAmino): _84.MsgCreateGroupWithPolicyResponse;
                toAmino(message: _84.MsgCreateGroupWithPolicyResponse): _84.MsgCreateGroupWithPolicyResponseAmino;
                fromAminoMsg(object: _84.MsgCreateGroupWithPolicyResponseAminoMsg): _84.MsgCreateGroupWithPolicyResponse;
                toAminoMsg(message: _84.MsgCreateGroupWithPolicyResponse): _84.MsgCreateGroupWithPolicyResponseAminoMsg;
                fromProtoMsg(message: _84.MsgCreateGroupWithPolicyResponseProtoMsg): _84.MsgCreateGroupWithPolicyResponse;
                toProto(message: _84.MsgCreateGroupWithPolicyResponse): Uint8Array;
                toProtoMsg(message: _84.MsgCreateGroupWithPolicyResponse): _84.MsgCreateGroupWithPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupPolicyAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyAdminResponse;
                fromJSON(_: any): _84.MsgUpdateGroupPolicyAdminResponse;
                toJSON(_: _84.MsgUpdateGroupPolicyAdminResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupPolicyAdminResponse;
                fromSDK(_: _84.MsgUpdateGroupPolicyAdminResponseSDKType): _84.MsgUpdateGroupPolicyAdminResponse;
                toSDK(_: _84.MsgUpdateGroupPolicyAdminResponse): _84.MsgUpdateGroupPolicyAdminResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupPolicyAdminResponseAmino): _84.MsgUpdateGroupPolicyAdminResponse;
                toAmino(_: _84.MsgUpdateGroupPolicyAdminResponse): _84.MsgUpdateGroupPolicyAdminResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyAdminResponseAminoMsg): _84.MsgUpdateGroupPolicyAdminResponse;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyAdminResponse): _84.MsgUpdateGroupPolicyAdminResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyAdminResponseProtoMsg): _84.MsgUpdateGroupPolicyAdminResponse;
                toProto(message: _84.MsgUpdateGroupPolicyAdminResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyAdminResponse): _84.MsgUpdateGroupPolicyAdminResponseProtoMsg;
            };
            MsgUpdateGroupPolicyDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupPolicyDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyDecisionPolicy;
                fromJSON(object: any): _84.MsgUpdateGroupPolicyDecisionPolicy;
                toJSON(message: _84.MsgUpdateGroupPolicyDecisionPolicy): unknown;
                fromPartial(object: {
                    admin?: string;
                    address?: string;
                    decisionPolicy?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _84.MsgUpdateGroupPolicyDecisionPolicy;
                fromSDK(object: _84.MsgUpdateGroupPolicyDecisionPolicySDKType): _84.MsgUpdateGroupPolicyDecisionPolicy;
                toSDK(message: _84.MsgUpdateGroupPolicyDecisionPolicy): _84.MsgUpdateGroupPolicyDecisionPolicySDKType;
                fromAmino(object: _84.MsgUpdateGroupPolicyDecisionPolicyAmino): _84.MsgUpdateGroupPolicyDecisionPolicy;
                toAmino(message: _84.MsgUpdateGroupPolicyDecisionPolicy): _84.MsgUpdateGroupPolicyDecisionPolicyAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyDecisionPolicyAminoMsg): _84.MsgUpdateGroupPolicyDecisionPolicy;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicy): _84.MsgUpdateGroupPolicyDecisionPolicyAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicyProtoMsg): _84.MsgUpdateGroupPolicyDecisionPolicy;
                toProto(message: _84.MsgUpdateGroupPolicyDecisionPolicy): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicy): _84.MsgUpdateGroupPolicyDecisionPolicyProtoMsg;
            };
            MsgUpdateGroupPolicyDecisionPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                fromJSON(_: any): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toJSON(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                fromSDK(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponseSDKType): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toSDK(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): _84.MsgUpdateGroupPolicyDecisionPolicyResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponseAmino): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toAmino(_: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): _84.MsgUpdateGroupPolicyDecisionPolicyResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyDecisionPolicyResponseAminoMsg): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): _84.MsgUpdateGroupPolicyDecisionPolicyResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicyResponseProtoMsg): _84.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toProto(message: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyDecisionPolicyResponse): _84.MsgUpdateGroupPolicyDecisionPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyMetadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgUpdateGroupPolicyMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyMetadata;
                fromJSON(object: any): _84.MsgUpdateGroupPolicyMetadata;
                toJSON(message: _84.MsgUpdateGroupPolicyMetadata): unknown;
                fromPartial(object: {
                    admin?: string;
                    address?: string;
                    metadata?: string;
                }): _84.MsgUpdateGroupPolicyMetadata;
                fromSDK(object: _84.MsgUpdateGroupPolicyMetadataSDKType): _84.MsgUpdateGroupPolicyMetadata;
                toSDK(message: _84.MsgUpdateGroupPolicyMetadata): _84.MsgUpdateGroupPolicyMetadataSDKType;
                fromAmino(object: _84.MsgUpdateGroupPolicyMetadataAmino): _84.MsgUpdateGroupPolicyMetadata;
                toAmino(message: _84.MsgUpdateGroupPolicyMetadata): _84.MsgUpdateGroupPolicyMetadataAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyMetadataAminoMsg): _84.MsgUpdateGroupPolicyMetadata;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyMetadata): _84.MsgUpdateGroupPolicyMetadataAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyMetadataProtoMsg): _84.MsgUpdateGroupPolicyMetadata;
                toProto(message: _84.MsgUpdateGroupPolicyMetadata): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyMetadata): _84.MsgUpdateGroupPolicyMetadataProtoMsg;
            };
            MsgUpdateGroupPolicyMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgUpdateGroupPolicyMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgUpdateGroupPolicyMetadataResponse;
                fromJSON(_: any): _84.MsgUpdateGroupPolicyMetadataResponse;
                toJSON(_: _84.MsgUpdateGroupPolicyMetadataResponse): unknown;
                fromPartial(_: {}): _84.MsgUpdateGroupPolicyMetadataResponse;
                fromSDK(_: _84.MsgUpdateGroupPolicyMetadataResponseSDKType): _84.MsgUpdateGroupPolicyMetadataResponse;
                toSDK(_: _84.MsgUpdateGroupPolicyMetadataResponse): _84.MsgUpdateGroupPolicyMetadataResponseSDKType;
                fromAmino(_: _84.MsgUpdateGroupPolicyMetadataResponseAmino): _84.MsgUpdateGroupPolicyMetadataResponse;
                toAmino(_: _84.MsgUpdateGroupPolicyMetadataResponse): _84.MsgUpdateGroupPolicyMetadataResponseAmino;
                fromAminoMsg(object: _84.MsgUpdateGroupPolicyMetadataResponseAminoMsg): _84.MsgUpdateGroupPolicyMetadataResponse;
                toAminoMsg(message: _84.MsgUpdateGroupPolicyMetadataResponse): _84.MsgUpdateGroupPolicyMetadataResponseAminoMsg;
                fromProtoMsg(message: _84.MsgUpdateGroupPolicyMetadataResponseProtoMsg): _84.MsgUpdateGroupPolicyMetadataResponse;
                toProto(message: _84.MsgUpdateGroupPolicyMetadataResponse): Uint8Array;
                toProtoMsg(message: _84.MsgUpdateGroupPolicyMetadataResponse): _84.MsgUpdateGroupPolicyMetadataResponseProtoMsg;
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgSubmitProposal;
                fromJSON(object: any): _84.MsgSubmitProposal;
                toJSON(message: _84.MsgSubmitProposal): unknown;
                fromPartial(object: {
                    address?: string;
                    proposers?: string[];
                    metadata?: string;
                    messages?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    exec?: _84.Exec;
                }): _84.MsgSubmitProposal;
                fromSDK(object: _84.MsgSubmitProposalSDKType): _84.MsgSubmitProposal;
                toSDK(message: _84.MsgSubmitProposal): _84.MsgSubmitProposalSDKType;
                fromAmino(object: _84.MsgSubmitProposalAmino): _84.MsgSubmitProposal;
                toAmino(message: _84.MsgSubmitProposal): _84.MsgSubmitProposalAmino;
                fromAminoMsg(object: _84.MsgSubmitProposalAminoMsg): _84.MsgSubmitProposal;
                toAminoMsg(message: _84.MsgSubmitProposal): _84.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _84.MsgSubmitProposalProtoMsg): _84.MsgSubmitProposal;
                toProto(message: _84.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _84.MsgSubmitProposal): _84.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgSubmitProposalResponse;
                fromJSON(object: any): _84.MsgSubmitProposalResponse;
                toJSON(message: _84.MsgSubmitProposalResponse): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _84.MsgSubmitProposalResponse;
                fromSDK(object: _84.MsgSubmitProposalResponseSDKType): _84.MsgSubmitProposalResponse;
                toSDK(message: _84.MsgSubmitProposalResponse): _84.MsgSubmitProposalResponseSDKType;
                fromAmino(object: _84.MsgSubmitProposalResponseAmino): _84.MsgSubmitProposalResponse;
                toAmino(message: _84.MsgSubmitProposalResponse): _84.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _84.MsgSubmitProposalResponseAminoMsg): _84.MsgSubmitProposalResponse;
                toAminoMsg(message: _84.MsgSubmitProposalResponse): _84.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _84.MsgSubmitProposalResponseProtoMsg): _84.MsgSubmitProposalResponse;
                toProto(message: _84.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _84.MsgSubmitProposalResponse): _84.MsgSubmitProposalResponseProtoMsg;
            };
            MsgWithdrawProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgWithdrawProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgWithdrawProposal;
                fromJSON(object: any): _84.MsgWithdrawProposal;
                toJSON(message: _84.MsgWithdrawProposal): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    address?: string;
                }): _84.MsgWithdrawProposal;
                fromSDK(object: _84.MsgWithdrawProposalSDKType): _84.MsgWithdrawProposal;
                toSDK(message: _84.MsgWithdrawProposal): _84.MsgWithdrawProposalSDKType;
                fromAmino(object: _84.MsgWithdrawProposalAmino): _84.MsgWithdrawProposal;
                toAmino(message: _84.MsgWithdrawProposal): _84.MsgWithdrawProposalAmino;
                fromAminoMsg(object: _84.MsgWithdrawProposalAminoMsg): _84.MsgWithdrawProposal;
                toAminoMsg(message: _84.MsgWithdrawProposal): _84.MsgWithdrawProposalAminoMsg;
                fromProtoMsg(message: _84.MsgWithdrawProposalProtoMsg): _84.MsgWithdrawProposal;
                toProto(message: _84.MsgWithdrawProposal): Uint8Array;
                toProtoMsg(message: _84.MsgWithdrawProposal): _84.MsgWithdrawProposalProtoMsg;
            };
            MsgWithdrawProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgWithdrawProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgWithdrawProposalResponse;
                fromJSON(_: any): _84.MsgWithdrawProposalResponse;
                toJSON(_: _84.MsgWithdrawProposalResponse): unknown;
                fromPartial(_: {}): _84.MsgWithdrawProposalResponse;
                fromSDK(_: _84.MsgWithdrawProposalResponseSDKType): _84.MsgWithdrawProposalResponse;
                toSDK(_: _84.MsgWithdrawProposalResponse): _84.MsgWithdrawProposalResponseSDKType;
                fromAmino(_: _84.MsgWithdrawProposalResponseAmino): _84.MsgWithdrawProposalResponse;
                toAmino(_: _84.MsgWithdrawProposalResponse): _84.MsgWithdrawProposalResponseAmino;
                fromAminoMsg(object: _84.MsgWithdrawProposalResponseAminoMsg): _84.MsgWithdrawProposalResponse;
                toAminoMsg(message: _84.MsgWithdrawProposalResponse): _84.MsgWithdrawProposalResponseAminoMsg;
                fromProtoMsg(message: _84.MsgWithdrawProposalResponseProtoMsg): _84.MsgWithdrawProposalResponse;
                toProto(message: _84.MsgWithdrawProposalResponse): Uint8Array;
                toProtoMsg(message: _84.MsgWithdrawProposalResponse): _84.MsgWithdrawProposalResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgVote;
                fromJSON(object: any): _84.MsgVote;
                toJSON(message: _84.MsgVote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _85.VoteOption;
                    metadata?: string;
                    exec?: _84.Exec;
                }): _84.MsgVote;
                fromSDK(object: _84.MsgVoteSDKType): _84.MsgVote;
                toSDK(message: _84.MsgVote): _84.MsgVoteSDKType;
                fromAmino(object: _84.MsgVoteAmino): _84.MsgVote;
                toAmino(message: _84.MsgVote): _84.MsgVoteAmino;
                fromAminoMsg(object: _84.MsgVoteAminoMsg): _84.MsgVote;
                toAminoMsg(message: _84.MsgVote): _84.MsgVoteAminoMsg;
                fromProtoMsg(message: _84.MsgVoteProtoMsg): _84.MsgVote;
                toProto(message: _84.MsgVote): Uint8Array;
                toProtoMsg(message: _84.MsgVote): _84.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgVoteResponse;
                fromJSON(_: any): _84.MsgVoteResponse;
                toJSON(_: _84.MsgVoteResponse): unknown;
                fromPartial(_: {}): _84.MsgVoteResponse;
                fromSDK(_: _84.MsgVoteResponseSDKType): _84.MsgVoteResponse;
                toSDK(_: _84.MsgVoteResponse): _84.MsgVoteResponseSDKType;
                fromAmino(_: _84.MsgVoteResponseAmino): _84.MsgVoteResponse;
                toAmino(_: _84.MsgVoteResponse): _84.MsgVoteResponseAmino;
                fromAminoMsg(object: _84.MsgVoteResponseAminoMsg): _84.MsgVoteResponse;
                toAminoMsg(message: _84.MsgVoteResponse): _84.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _84.MsgVoteResponseProtoMsg): _84.MsgVoteResponse;
                toProto(message: _84.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _84.MsgVoteResponse): _84.MsgVoteResponseProtoMsg;
            };
            MsgExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgExec;
                fromJSON(object: any): _84.MsgExec;
                toJSON(message: _84.MsgExec): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    signer?: string;
                }): _84.MsgExec;
                fromSDK(object: _84.MsgExecSDKType): _84.MsgExec;
                toSDK(message: _84.MsgExec): _84.MsgExecSDKType;
                fromAmino(object: _84.MsgExecAmino): _84.MsgExec;
                toAmino(message: _84.MsgExec): _84.MsgExecAmino;
                fromAminoMsg(object: _84.MsgExecAminoMsg): _84.MsgExec;
                toAminoMsg(message: _84.MsgExec): _84.MsgExecAminoMsg;
                fromProtoMsg(message: _84.MsgExecProtoMsg): _84.MsgExec;
                toProto(message: _84.MsgExec): Uint8Array;
                toProtoMsg(message: _84.MsgExec): _84.MsgExecProtoMsg;
            };
            MsgExecResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgExecResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgExecResponse;
                fromJSON(_: any): _84.MsgExecResponse;
                toJSON(_: _84.MsgExecResponse): unknown;
                fromPartial(_: {}): _84.MsgExecResponse;
                fromSDK(_: _84.MsgExecResponseSDKType): _84.MsgExecResponse;
                toSDK(_: _84.MsgExecResponse): _84.MsgExecResponseSDKType;
                fromAmino(_: _84.MsgExecResponseAmino): _84.MsgExecResponse;
                toAmino(_: _84.MsgExecResponse): _84.MsgExecResponseAmino;
                fromAminoMsg(object: _84.MsgExecResponseAminoMsg): _84.MsgExecResponse;
                toAminoMsg(message: _84.MsgExecResponse): _84.MsgExecResponseAminoMsg;
                fromProtoMsg(message: _84.MsgExecResponseProtoMsg): _84.MsgExecResponse;
                toProto(message: _84.MsgExecResponse): Uint8Array;
                toProtoMsg(message: _84.MsgExecResponse): _84.MsgExecResponseProtoMsg;
            };
            MsgLeaveGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.MsgLeaveGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgLeaveGroup;
                fromJSON(object: any): _84.MsgLeaveGroup;
                toJSON(message: _84.MsgLeaveGroup): unknown;
                fromPartial(object: {
                    address?: string;
                    groupId?: bigint;
                }): _84.MsgLeaveGroup;
                fromSDK(object: _84.MsgLeaveGroupSDKType): _84.MsgLeaveGroup;
                toSDK(message: _84.MsgLeaveGroup): _84.MsgLeaveGroupSDKType;
                fromAmino(object: _84.MsgLeaveGroupAmino): _84.MsgLeaveGroup;
                toAmino(message: _84.MsgLeaveGroup): _84.MsgLeaveGroupAmino;
                fromAminoMsg(object: _84.MsgLeaveGroupAminoMsg): _84.MsgLeaveGroup;
                toAminoMsg(message: _84.MsgLeaveGroup): _84.MsgLeaveGroupAminoMsg;
                fromProtoMsg(message: _84.MsgLeaveGroupProtoMsg): _84.MsgLeaveGroup;
                toProto(message: _84.MsgLeaveGroup): Uint8Array;
                toProtoMsg(message: _84.MsgLeaveGroup): _84.MsgLeaveGroupProtoMsg;
            };
            MsgLeaveGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _84.MsgLeaveGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.MsgLeaveGroupResponse;
                fromJSON(_: any): _84.MsgLeaveGroupResponse;
                toJSON(_: _84.MsgLeaveGroupResponse): unknown;
                fromPartial(_: {}): _84.MsgLeaveGroupResponse;
                fromSDK(_: _84.MsgLeaveGroupResponseSDKType): _84.MsgLeaveGroupResponse;
                toSDK(_: _84.MsgLeaveGroupResponse): _84.MsgLeaveGroupResponseSDKType;
                fromAmino(_: _84.MsgLeaveGroupResponseAmino): _84.MsgLeaveGroupResponse;
                toAmino(_: _84.MsgLeaveGroupResponse): _84.MsgLeaveGroupResponseAmino;
                fromAminoMsg(object: _84.MsgLeaveGroupResponseAminoMsg): _84.MsgLeaveGroupResponse;
                toAminoMsg(message: _84.MsgLeaveGroupResponse): _84.MsgLeaveGroupResponseAminoMsg;
                fromProtoMsg(message: _84.MsgLeaveGroupResponseProtoMsg): _84.MsgLeaveGroupResponse;
                toProto(message: _84.MsgLeaveGroupResponse): Uint8Array;
                toProtoMsg(message: _84.MsgLeaveGroupResponse): _84.MsgLeaveGroupResponseProtoMsg;
            };
            QueryGroupInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupInfoRequest;
                fromJSON(object: any): _83.QueryGroupInfoRequest;
                toJSON(message: _83.QueryGroupInfoRequest): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                }): _83.QueryGroupInfoRequest;
                fromSDK(object: _83.QueryGroupInfoRequestSDKType): _83.QueryGroupInfoRequest;
                toSDK(message: _83.QueryGroupInfoRequest): _83.QueryGroupInfoRequestSDKType;
                fromAmino(object: _83.QueryGroupInfoRequestAmino): _83.QueryGroupInfoRequest;
                toAmino(message: _83.QueryGroupInfoRequest): _83.QueryGroupInfoRequestAmino;
                fromAminoMsg(object: _83.QueryGroupInfoRequestAminoMsg): _83.QueryGroupInfoRequest;
                toAminoMsg(message: _83.QueryGroupInfoRequest): _83.QueryGroupInfoRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupInfoRequestProtoMsg): _83.QueryGroupInfoRequest;
                toProto(message: _83.QueryGroupInfoRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupInfoRequest): _83.QueryGroupInfoRequestProtoMsg;
            };
            QueryGroupInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupInfoResponse;
                fromJSON(object: any): _83.QueryGroupInfoResponse;
                toJSON(message: _83.QueryGroupInfoResponse): unknown;
                fromPartial(object: {
                    info?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    };
                }): _83.QueryGroupInfoResponse;
                fromSDK(object: _83.QueryGroupInfoResponseSDKType): _83.QueryGroupInfoResponse;
                toSDK(message: _83.QueryGroupInfoResponse): _83.QueryGroupInfoResponseSDKType;
                fromAmino(object: _83.QueryGroupInfoResponseAmino): _83.QueryGroupInfoResponse;
                toAmino(message: _83.QueryGroupInfoResponse): _83.QueryGroupInfoResponseAmino;
                fromAminoMsg(object: _83.QueryGroupInfoResponseAminoMsg): _83.QueryGroupInfoResponse;
                toAminoMsg(message: _83.QueryGroupInfoResponse): _83.QueryGroupInfoResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupInfoResponseProtoMsg): _83.QueryGroupInfoResponse;
                toProto(message: _83.QueryGroupInfoResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupInfoResponse): _83.QueryGroupInfoResponseProtoMsg;
            };
            QueryGroupPolicyInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPolicyInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPolicyInfoRequest;
                fromJSON(object: any): _83.QueryGroupPolicyInfoRequest;
                toJSON(message: _83.QueryGroupPolicyInfoRequest): unknown;
                fromPartial(object: {
                    address?: string;
                }): _83.QueryGroupPolicyInfoRequest;
                fromSDK(object: _83.QueryGroupPolicyInfoRequestSDKType): _83.QueryGroupPolicyInfoRequest;
                toSDK(message: _83.QueryGroupPolicyInfoRequest): _83.QueryGroupPolicyInfoRequestSDKType;
                fromAmino(object: _83.QueryGroupPolicyInfoRequestAmino): _83.QueryGroupPolicyInfoRequest;
                toAmino(message: _83.QueryGroupPolicyInfoRequest): _83.QueryGroupPolicyInfoRequestAmino;
                fromAminoMsg(object: _83.QueryGroupPolicyInfoRequestAminoMsg): _83.QueryGroupPolicyInfoRequest;
                toAminoMsg(message: _83.QueryGroupPolicyInfoRequest): _83.QueryGroupPolicyInfoRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPolicyInfoRequestProtoMsg): _83.QueryGroupPolicyInfoRequest;
                toProto(message: _83.QueryGroupPolicyInfoRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPolicyInfoRequest): _83.QueryGroupPolicyInfoRequestProtoMsg;
            };
            QueryGroupPolicyInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPolicyInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPolicyInfoResponse;
                fromJSON(object: any): _83.QueryGroupPolicyInfoResponse;
                toJSON(message: _83.QueryGroupPolicyInfoResponse): unknown;
                fromPartial(object: {
                    info?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        createdAt?: Date;
                    };
                }): _83.QueryGroupPolicyInfoResponse;
                fromSDK(object: _83.QueryGroupPolicyInfoResponseSDKType): _83.QueryGroupPolicyInfoResponse;
                toSDK(message: _83.QueryGroupPolicyInfoResponse): _83.QueryGroupPolicyInfoResponseSDKType;
                fromAmino(object: _83.QueryGroupPolicyInfoResponseAmino): _83.QueryGroupPolicyInfoResponse;
                toAmino(message: _83.QueryGroupPolicyInfoResponse): _83.QueryGroupPolicyInfoResponseAmino;
                fromAminoMsg(object: _83.QueryGroupPolicyInfoResponseAminoMsg): _83.QueryGroupPolicyInfoResponse;
                toAminoMsg(message: _83.QueryGroupPolicyInfoResponse): _83.QueryGroupPolicyInfoResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPolicyInfoResponseProtoMsg): _83.QueryGroupPolicyInfoResponse;
                toProto(message: _83.QueryGroupPolicyInfoResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPolicyInfoResponse): _83.QueryGroupPolicyInfoResponseProtoMsg;
            };
            QueryGroupMembersRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupMembersRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupMembersRequest;
                fromJSON(object: any): _83.QueryGroupMembersRequest;
                toJSON(message: _83.QueryGroupMembersRequest): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryGroupMembersRequest;
                fromSDK(object: _83.QueryGroupMembersRequestSDKType): _83.QueryGroupMembersRequest;
                toSDK(message: _83.QueryGroupMembersRequest): _83.QueryGroupMembersRequestSDKType;
                fromAmino(object: _83.QueryGroupMembersRequestAmino): _83.QueryGroupMembersRequest;
                toAmino(message: _83.QueryGroupMembersRequest): _83.QueryGroupMembersRequestAmino;
                fromAminoMsg(object: _83.QueryGroupMembersRequestAminoMsg): _83.QueryGroupMembersRequest;
                toAminoMsg(message: _83.QueryGroupMembersRequest): _83.QueryGroupMembersRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupMembersRequestProtoMsg): _83.QueryGroupMembersRequest;
                toProto(message: _83.QueryGroupMembersRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupMembersRequest): _83.QueryGroupMembersRequestProtoMsg;
            };
            QueryGroupMembersResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupMembersResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupMembersResponse;
                fromJSON(object: any): _83.QueryGroupMembersResponse;
                toJSON(message: _83.QueryGroupMembersResponse): unknown;
                fromPartial(object: {
                    members?: {
                        groupId?: bigint;
                        member?: {
                            address?: string;
                            weight?: string;
                            metadata?: string;
                            addedAt?: Date;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryGroupMembersResponse;
                fromSDK(object: _83.QueryGroupMembersResponseSDKType): _83.QueryGroupMembersResponse;
                toSDK(message: _83.QueryGroupMembersResponse): _83.QueryGroupMembersResponseSDKType;
                fromAmino(object: _83.QueryGroupMembersResponseAmino): _83.QueryGroupMembersResponse;
                toAmino(message: _83.QueryGroupMembersResponse): _83.QueryGroupMembersResponseAmino;
                fromAminoMsg(object: _83.QueryGroupMembersResponseAminoMsg): _83.QueryGroupMembersResponse;
                toAminoMsg(message: _83.QueryGroupMembersResponse): _83.QueryGroupMembersResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupMembersResponseProtoMsg): _83.QueryGroupMembersResponse;
                toProto(message: _83.QueryGroupMembersResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupMembersResponse): _83.QueryGroupMembersResponseProtoMsg;
            };
            QueryGroupsByAdminRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupsByAdminRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupsByAdminRequest;
                fromJSON(object: any): _83.QueryGroupsByAdminRequest;
                toJSON(message: _83.QueryGroupsByAdminRequest): unknown;
                fromPartial(object: {
                    admin?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryGroupsByAdminRequest;
                fromSDK(object: _83.QueryGroupsByAdminRequestSDKType): _83.QueryGroupsByAdminRequest;
                toSDK(message: _83.QueryGroupsByAdminRequest): _83.QueryGroupsByAdminRequestSDKType;
                fromAmino(object: _83.QueryGroupsByAdminRequestAmino): _83.QueryGroupsByAdminRequest;
                toAmino(message: _83.QueryGroupsByAdminRequest): _83.QueryGroupsByAdminRequestAmino;
                fromAminoMsg(object: _83.QueryGroupsByAdminRequestAminoMsg): _83.QueryGroupsByAdminRequest;
                toAminoMsg(message: _83.QueryGroupsByAdminRequest): _83.QueryGroupsByAdminRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupsByAdminRequestProtoMsg): _83.QueryGroupsByAdminRequest;
                toProto(message: _83.QueryGroupsByAdminRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupsByAdminRequest): _83.QueryGroupsByAdminRequestProtoMsg;
            };
            QueryGroupsByAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupsByAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupsByAdminResponse;
                fromJSON(object: any): _83.QueryGroupsByAdminResponse;
                toJSON(message: _83.QueryGroupsByAdminResponse): unknown;
                fromPartial(object: {
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryGroupsByAdminResponse;
                fromSDK(object: _83.QueryGroupsByAdminResponseSDKType): _83.QueryGroupsByAdminResponse;
                toSDK(message: _83.QueryGroupsByAdminResponse): _83.QueryGroupsByAdminResponseSDKType;
                fromAmino(object: _83.QueryGroupsByAdminResponseAmino): _83.QueryGroupsByAdminResponse;
                toAmino(message: _83.QueryGroupsByAdminResponse): _83.QueryGroupsByAdminResponseAmino;
                fromAminoMsg(object: _83.QueryGroupsByAdminResponseAminoMsg): _83.QueryGroupsByAdminResponse;
                toAminoMsg(message: _83.QueryGroupsByAdminResponse): _83.QueryGroupsByAdminResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupsByAdminResponseProtoMsg): _83.QueryGroupsByAdminResponse;
                toProto(message: _83.QueryGroupsByAdminResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupsByAdminResponse): _83.QueryGroupsByAdminResponseProtoMsg;
            };
            QueryGroupPoliciesByGroupRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPoliciesByGroupRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPoliciesByGroupRequest;
                fromJSON(object: any): _83.QueryGroupPoliciesByGroupRequest;
                toJSON(message: _83.QueryGroupPoliciesByGroupRequest): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryGroupPoliciesByGroupRequest;
                fromSDK(object: _83.QueryGroupPoliciesByGroupRequestSDKType): _83.QueryGroupPoliciesByGroupRequest;
                toSDK(message: _83.QueryGroupPoliciesByGroupRequest): _83.QueryGroupPoliciesByGroupRequestSDKType;
                fromAmino(object: _83.QueryGroupPoliciesByGroupRequestAmino): _83.QueryGroupPoliciesByGroupRequest;
                toAmino(message: _83.QueryGroupPoliciesByGroupRequest): _83.QueryGroupPoliciesByGroupRequestAmino;
                fromAminoMsg(object: _83.QueryGroupPoliciesByGroupRequestAminoMsg): _83.QueryGroupPoliciesByGroupRequest;
                toAminoMsg(message: _83.QueryGroupPoliciesByGroupRequest): _83.QueryGroupPoliciesByGroupRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPoliciesByGroupRequestProtoMsg): _83.QueryGroupPoliciesByGroupRequest;
                toProto(message: _83.QueryGroupPoliciesByGroupRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPoliciesByGroupRequest): _83.QueryGroupPoliciesByGroupRequestProtoMsg;
            };
            QueryGroupPoliciesByGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPoliciesByGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPoliciesByGroupResponse;
                fromJSON(object: any): _83.QueryGroupPoliciesByGroupResponse;
                toJSON(message: _83.QueryGroupPoliciesByGroupResponse): unknown;
                fromPartial(object: {
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryGroupPoliciesByGroupResponse;
                fromSDK(object: _83.QueryGroupPoliciesByGroupResponseSDKType): _83.QueryGroupPoliciesByGroupResponse;
                toSDK(message: _83.QueryGroupPoliciesByGroupResponse): _83.QueryGroupPoliciesByGroupResponseSDKType;
                fromAmino(object: _83.QueryGroupPoliciesByGroupResponseAmino): _83.QueryGroupPoliciesByGroupResponse;
                toAmino(message: _83.QueryGroupPoliciesByGroupResponse): _83.QueryGroupPoliciesByGroupResponseAmino;
                fromAminoMsg(object: _83.QueryGroupPoliciesByGroupResponseAminoMsg): _83.QueryGroupPoliciesByGroupResponse;
                toAminoMsg(message: _83.QueryGroupPoliciesByGroupResponse): _83.QueryGroupPoliciesByGroupResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPoliciesByGroupResponseProtoMsg): _83.QueryGroupPoliciesByGroupResponse;
                toProto(message: _83.QueryGroupPoliciesByGroupResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPoliciesByGroupResponse): _83.QueryGroupPoliciesByGroupResponseProtoMsg;
            };
            QueryGroupPoliciesByAdminRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPoliciesByAdminRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPoliciesByAdminRequest;
                fromJSON(object: any): _83.QueryGroupPoliciesByAdminRequest;
                toJSON(message: _83.QueryGroupPoliciesByAdminRequest): unknown;
                fromPartial(object: {
                    admin?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryGroupPoliciesByAdminRequest;
                fromSDK(object: _83.QueryGroupPoliciesByAdminRequestSDKType): _83.QueryGroupPoliciesByAdminRequest;
                toSDK(message: _83.QueryGroupPoliciesByAdminRequest): _83.QueryGroupPoliciesByAdminRequestSDKType;
                fromAmino(object: _83.QueryGroupPoliciesByAdminRequestAmino): _83.QueryGroupPoliciesByAdminRequest;
                toAmino(message: _83.QueryGroupPoliciesByAdminRequest): _83.QueryGroupPoliciesByAdminRequestAmino;
                fromAminoMsg(object: _83.QueryGroupPoliciesByAdminRequestAminoMsg): _83.QueryGroupPoliciesByAdminRequest;
                toAminoMsg(message: _83.QueryGroupPoliciesByAdminRequest): _83.QueryGroupPoliciesByAdminRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPoliciesByAdminRequestProtoMsg): _83.QueryGroupPoliciesByAdminRequest;
                toProto(message: _83.QueryGroupPoliciesByAdminRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPoliciesByAdminRequest): _83.QueryGroupPoliciesByAdminRequestProtoMsg;
            };
            QueryGroupPoliciesByAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupPoliciesByAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupPoliciesByAdminResponse;
                fromJSON(object: any): _83.QueryGroupPoliciesByAdminResponse;
                toJSON(message: _83.QueryGroupPoliciesByAdminResponse): unknown;
                fromPartial(object: {
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryGroupPoliciesByAdminResponse;
                fromSDK(object: _83.QueryGroupPoliciesByAdminResponseSDKType): _83.QueryGroupPoliciesByAdminResponse;
                toSDK(message: _83.QueryGroupPoliciesByAdminResponse): _83.QueryGroupPoliciesByAdminResponseSDKType;
                fromAmino(object: _83.QueryGroupPoliciesByAdminResponseAmino): _83.QueryGroupPoliciesByAdminResponse;
                toAmino(message: _83.QueryGroupPoliciesByAdminResponse): _83.QueryGroupPoliciesByAdminResponseAmino;
                fromAminoMsg(object: _83.QueryGroupPoliciesByAdminResponseAminoMsg): _83.QueryGroupPoliciesByAdminResponse;
                toAminoMsg(message: _83.QueryGroupPoliciesByAdminResponse): _83.QueryGroupPoliciesByAdminResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupPoliciesByAdminResponseProtoMsg): _83.QueryGroupPoliciesByAdminResponse;
                toProto(message: _83.QueryGroupPoliciesByAdminResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupPoliciesByAdminResponse): _83.QueryGroupPoliciesByAdminResponseProtoMsg;
            };
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryProposalRequest;
                fromJSON(object: any): _83.QueryProposalRequest;
                toJSON(message: _83.QueryProposalRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _83.QueryProposalRequest;
                fromSDK(object: _83.QueryProposalRequestSDKType): _83.QueryProposalRequest;
                toSDK(message: _83.QueryProposalRequest): _83.QueryProposalRequestSDKType;
                fromAmino(object: _83.QueryProposalRequestAmino): _83.QueryProposalRequest;
                toAmino(message: _83.QueryProposalRequest): _83.QueryProposalRequestAmino;
                fromAminoMsg(object: _83.QueryProposalRequestAminoMsg): _83.QueryProposalRequest;
                toAminoMsg(message: _83.QueryProposalRequest): _83.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _83.QueryProposalRequestProtoMsg): _83.QueryProposalRequest;
                toProto(message: _83.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _83.QueryProposalRequest): _83.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryProposalResponse;
                fromJSON(object: any): _83.QueryProposalResponse;
                toJSON(message: _83.QueryProposalResponse): unknown;
                fromPartial(object: {
                    proposal?: {
                        id?: bigint;
                        address?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _85.ProposalStatus;
                        result?: _85.ProposalResult;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _85.ProposalExecutorResult;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    };
                }): _83.QueryProposalResponse;
                fromSDK(object: _83.QueryProposalResponseSDKType): _83.QueryProposalResponse;
                toSDK(message: _83.QueryProposalResponse): _83.QueryProposalResponseSDKType;
                fromAmino(object: _83.QueryProposalResponseAmino): _83.QueryProposalResponse;
                toAmino(message: _83.QueryProposalResponse): _83.QueryProposalResponseAmino;
                fromAminoMsg(object: _83.QueryProposalResponseAminoMsg): _83.QueryProposalResponse;
                toAminoMsg(message: _83.QueryProposalResponse): _83.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _83.QueryProposalResponseProtoMsg): _83.QueryProposalResponse;
                toProto(message: _83.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _83.QueryProposalResponse): _83.QueryProposalResponseProtoMsg;
            };
            QueryProposalsByGroupPolicyRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryProposalsByGroupPolicyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryProposalsByGroupPolicyRequest;
                fromJSON(object: any): _83.QueryProposalsByGroupPolicyRequest;
                toJSON(message: _83.QueryProposalsByGroupPolicyRequest): unknown;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryProposalsByGroupPolicyRequest;
                fromSDK(object: _83.QueryProposalsByGroupPolicyRequestSDKType): _83.QueryProposalsByGroupPolicyRequest;
                toSDK(message: _83.QueryProposalsByGroupPolicyRequest): _83.QueryProposalsByGroupPolicyRequestSDKType;
                fromAmino(object: _83.QueryProposalsByGroupPolicyRequestAmino): _83.QueryProposalsByGroupPolicyRequest;
                toAmino(message: _83.QueryProposalsByGroupPolicyRequest): _83.QueryProposalsByGroupPolicyRequestAmino;
                fromAminoMsg(object: _83.QueryProposalsByGroupPolicyRequestAminoMsg): _83.QueryProposalsByGroupPolicyRequest;
                toAminoMsg(message: _83.QueryProposalsByGroupPolicyRequest): _83.QueryProposalsByGroupPolicyRequestAminoMsg;
                fromProtoMsg(message: _83.QueryProposalsByGroupPolicyRequestProtoMsg): _83.QueryProposalsByGroupPolicyRequest;
                toProto(message: _83.QueryProposalsByGroupPolicyRequest): Uint8Array;
                toProtoMsg(message: _83.QueryProposalsByGroupPolicyRequest): _83.QueryProposalsByGroupPolicyRequestProtoMsg;
            };
            QueryProposalsByGroupPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryProposalsByGroupPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryProposalsByGroupPolicyResponse;
                fromJSON(object: any): _83.QueryProposalsByGroupPolicyResponse;
                toJSON(message: _83.QueryProposalsByGroupPolicyResponse): unknown;
                fromPartial(object: {
                    proposals?: {
                        id?: bigint;
                        address?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _85.ProposalStatus;
                        result?: _85.ProposalResult;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _85.ProposalExecutorResult;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryProposalsByGroupPolicyResponse;
                fromSDK(object: _83.QueryProposalsByGroupPolicyResponseSDKType): _83.QueryProposalsByGroupPolicyResponse;
                toSDK(message: _83.QueryProposalsByGroupPolicyResponse): _83.QueryProposalsByGroupPolicyResponseSDKType;
                fromAmino(object: _83.QueryProposalsByGroupPolicyResponseAmino): _83.QueryProposalsByGroupPolicyResponse;
                toAmino(message: _83.QueryProposalsByGroupPolicyResponse): _83.QueryProposalsByGroupPolicyResponseAmino;
                fromAminoMsg(object: _83.QueryProposalsByGroupPolicyResponseAminoMsg): _83.QueryProposalsByGroupPolicyResponse;
                toAminoMsg(message: _83.QueryProposalsByGroupPolicyResponse): _83.QueryProposalsByGroupPolicyResponseAminoMsg;
                fromProtoMsg(message: _83.QueryProposalsByGroupPolicyResponseProtoMsg): _83.QueryProposalsByGroupPolicyResponse;
                toProto(message: _83.QueryProposalsByGroupPolicyResponse): Uint8Array;
                toProtoMsg(message: _83.QueryProposalsByGroupPolicyResponse): _83.QueryProposalsByGroupPolicyResponseProtoMsg;
            };
            QueryVoteByProposalVoterRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVoteByProposalVoterRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVoteByProposalVoterRequest;
                fromJSON(object: any): _83.QueryVoteByProposalVoterRequest;
                toJSON(message: _83.QueryVoteByProposalVoterRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _83.QueryVoteByProposalVoterRequest;
                fromSDK(object: _83.QueryVoteByProposalVoterRequestSDKType): _83.QueryVoteByProposalVoterRequest;
                toSDK(message: _83.QueryVoteByProposalVoterRequest): _83.QueryVoteByProposalVoterRequestSDKType;
                fromAmino(object: _83.QueryVoteByProposalVoterRequestAmino): _83.QueryVoteByProposalVoterRequest;
                toAmino(message: _83.QueryVoteByProposalVoterRequest): _83.QueryVoteByProposalVoterRequestAmino;
                fromAminoMsg(object: _83.QueryVoteByProposalVoterRequestAminoMsg): _83.QueryVoteByProposalVoterRequest;
                toAminoMsg(message: _83.QueryVoteByProposalVoterRequest): _83.QueryVoteByProposalVoterRequestAminoMsg;
                fromProtoMsg(message: _83.QueryVoteByProposalVoterRequestProtoMsg): _83.QueryVoteByProposalVoterRequest;
                toProto(message: _83.QueryVoteByProposalVoterRequest): Uint8Array;
                toProtoMsg(message: _83.QueryVoteByProposalVoterRequest): _83.QueryVoteByProposalVoterRequestProtoMsg;
            };
            QueryVoteByProposalVoterResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVoteByProposalVoterResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVoteByProposalVoterResponse;
                fromJSON(object: any): _83.QueryVoteByProposalVoterResponse;
                toJSON(message: _83.QueryVoteByProposalVoterResponse): unknown;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _85.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    };
                }): _83.QueryVoteByProposalVoterResponse;
                fromSDK(object: _83.QueryVoteByProposalVoterResponseSDKType): _83.QueryVoteByProposalVoterResponse;
                toSDK(message: _83.QueryVoteByProposalVoterResponse): _83.QueryVoteByProposalVoterResponseSDKType;
                fromAmino(object: _83.QueryVoteByProposalVoterResponseAmino): _83.QueryVoteByProposalVoterResponse;
                toAmino(message: _83.QueryVoteByProposalVoterResponse): _83.QueryVoteByProposalVoterResponseAmino;
                fromAminoMsg(object: _83.QueryVoteByProposalVoterResponseAminoMsg): _83.QueryVoteByProposalVoterResponse;
                toAminoMsg(message: _83.QueryVoteByProposalVoterResponse): _83.QueryVoteByProposalVoterResponseAminoMsg;
                fromProtoMsg(message: _83.QueryVoteByProposalVoterResponseProtoMsg): _83.QueryVoteByProposalVoterResponse;
                toProto(message: _83.QueryVoteByProposalVoterResponse): Uint8Array;
                toProtoMsg(message: _83.QueryVoteByProposalVoterResponse): _83.QueryVoteByProposalVoterResponseProtoMsg;
            };
            QueryVotesByProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVotesByProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVotesByProposalRequest;
                fromJSON(object: any): _83.QueryVotesByProposalRequest;
                toJSON(message: _83.QueryVotesByProposalRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryVotesByProposalRequest;
                fromSDK(object: _83.QueryVotesByProposalRequestSDKType): _83.QueryVotesByProposalRequest;
                toSDK(message: _83.QueryVotesByProposalRequest): _83.QueryVotesByProposalRequestSDKType;
                fromAmino(object: _83.QueryVotesByProposalRequestAmino): _83.QueryVotesByProposalRequest;
                toAmino(message: _83.QueryVotesByProposalRequest): _83.QueryVotesByProposalRequestAmino;
                fromAminoMsg(object: _83.QueryVotesByProposalRequestAminoMsg): _83.QueryVotesByProposalRequest;
                toAminoMsg(message: _83.QueryVotesByProposalRequest): _83.QueryVotesByProposalRequestAminoMsg;
                fromProtoMsg(message: _83.QueryVotesByProposalRequestProtoMsg): _83.QueryVotesByProposalRequest;
                toProto(message: _83.QueryVotesByProposalRequest): Uint8Array;
                toProtoMsg(message: _83.QueryVotesByProposalRequest): _83.QueryVotesByProposalRequestProtoMsg;
            };
            QueryVotesByProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVotesByProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVotesByProposalResponse;
                fromJSON(object: any): _83.QueryVotesByProposalResponse;
                toJSON(message: _83.QueryVotesByProposalResponse): unknown;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _85.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryVotesByProposalResponse;
                fromSDK(object: _83.QueryVotesByProposalResponseSDKType): _83.QueryVotesByProposalResponse;
                toSDK(message: _83.QueryVotesByProposalResponse): _83.QueryVotesByProposalResponseSDKType;
                fromAmino(object: _83.QueryVotesByProposalResponseAmino): _83.QueryVotesByProposalResponse;
                toAmino(message: _83.QueryVotesByProposalResponse): _83.QueryVotesByProposalResponseAmino;
                fromAminoMsg(object: _83.QueryVotesByProposalResponseAminoMsg): _83.QueryVotesByProposalResponse;
                toAminoMsg(message: _83.QueryVotesByProposalResponse): _83.QueryVotesByProposalResponseAminoMsg;
                fromProtoMsg(message: _83.QueryVotesByProposalResponseProtoMsg): _83.QueryVotesByProposalResponse;
                toProto(message: _83.QueryVotesByProposalResponse): Uint8Array;
                toProtoMsg(message: _83.QueryVotesByProposalResponse): _83.QueryVotesByProposalResponseProtoMsg;
            };
            QueryVotesByVoterRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVotesByVoterRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVotesByVoterRequest;
                fromJSON(object: any): _83.QueryVotesByVoterRequest;
                toJSON(message: _83.QueryVotesByVoterRequest): unknown;
                fromPartial(object: {
                    voter?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryVotesByVoterRequest;
                fromSDK(object: _83.QueryVotesByVoterRequestSDKType): _83.QueryVotesByVoterRequest;
                toSDK(message: _83.QueryVotesByVoterRequest): _83.QueryVotesByVoterRequestSDKType;
                fromAmino(object: _83.QueryVotesByVoterRequestAmino): _83.QueryVotesByVoterRequest;
                toAmino(message: _83.QueryVotesByVoterRequest): _83.QueryVotesByVoterRequestAmino;
                fromAminoMsg(object: _83.QueryVotesByVoterRequestAminoMsg): _83.QueryVotesByVoterRequest;
                toAminoMsg(message: _83.QueryVotesByVoterRequest): _83.QueryVotesByVoterRequestAminoMsg;
                fromProtoMsg(message: _83.QueryVotesByVoterRequestProtoMsg): _83.QueryVotesByVoterRequest;
                toProto(message: _83.QueryVotesByVoterRequest): Uint8Array;
                toProtoMsg(message: _83.QueryVotesByVoterRequest): _83.QueryVotesByVoterRequestProtoMsg;
            };
            QueryVotesByVoterResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryVotesByVoterResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryVotesByVoterResponse;
                fromJSON(object: any): _83.QueryVotesByVoterResponse;
                toJSON(message: _83.QueryVotesByVoterResponse): unknown;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _85.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryVotesByVoterResponse;
                fromSDK(object: _83.QueryVotesByVoterResponseSDKType): _83.QueryVotesByVoterResponse;
                toSDK(message: _83.QueryVotesByVoterResponse): _83.QueryVotesByVoterResponseSDKType;
                fromAmino(object: _83.QueryVotesByVoterResponseAmino): _83.QueryVotesByVoterResponse;
                toAmino(message: _83.QueryVotesByVoterResponse): _83.QueryVotesByVoterResponseAmino;
                fromAminoMsg(object: _83.QueryVotesByVoterResponseAminoMsg): _83.QueryVotesByVoterResponse;
                toAminoMsg(message: _83.QueryVotesByVoterResponse): _83.QueryVotesByVoterResponseAminoMsg;
                fromProtoMsg(message: _83.QueryVotesByVoterResponseProtoMsg): _83.QueryVotesByVoterResponse;
                toProto(message: _83.QueryVotesByVoterResponse): Uint8Array;
                toProtoMsg(message: _83.QueryVotesByVoterResponse): _83.QueryVotesByVoterResponseProtoMsg;
            };
            QueryGroupsByMemberRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupsByMemberRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupsByMemberRequest;
                fromJSON(object: any): _83.QueryGroupsByMemberRequest;
                toJSON(message: _83.QueryGroupsByMemberRequest): unknown;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _83.QueryGroupsByMemberRequest;
                fromSDK(object: _83.QueryGroupsByMemberRequestSDKType): _83.QueryGroupsByMemberRequest;
                toSDK(message: _83.QueryGroupsByMemberRequest): _83.QueryGroupsByMemberRequestSDKType;
                fromAmino(object: _83.QueryGroupsByMemberRequestAmino): _83.QueryGroupsByMemberRequest;
                toAmino(message: _83.QueryGroupsByMemberRequest): _83.QueryGroupsByMemberRequestAmino;
                fromAminoMsg(object: _83.QueryGroupsByMemberRequestAminoMsg): _83.QueryGroupsByMemberRequest;
                toAminoMsg(message: _83.QueryGroupsByMemberRequest): _83.QueryGroupsByMemberRequestAminoMsg;
                fromProtoMsg(message: _83.QueryGroupsByMemberRequestProtoMsg): _83.QueryGroupsByMemberRequest;
                toProto(message: _83.QueryGroupsByMemberRequest): Uint8Array;
                toProtoMsg(message: _83.QueryGroupsByMemberRequest): _83.QueryGroupsByMemberRequestProtoMsg;
            };
            QueryGroupsByMemberResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryGroupsByMemberResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryGroupsByMemberResponse;
                fromJSON(object: any): _83.QueryGroupsByMemberResponse;
                toJSON(message: _83.QueryGroupsByMemberResponse): unknown;
                fromPartial(object: {
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _83.QueryGroupsByMemberResponse;
                fromSDK(object: _83.QueryGroupsByMemberResponseSDKType): _83.QueryGroupsByMemberResponse;
                toSDK(message: _83.QueryGroupsByMemberResponse): _83.QueryGroupsByMemberResponseSDKType;
                fromAmino(object: _83.QueryGroupsByMemberResponseAmino): _83.QueryGroupsByMemberResponse;
                toAmino(message: _83.QueryGroupsByMemberResponse): _83.QueryGroupsByMemberResponseAmino;
                fromAminoMsg(object: _83.QueryGroupsByMemberResponseAminoMsg): _83.QueryGroupsByMemberResponse;
                toAminoMsg(message: _83.QueryGroupsByMemberResponse): _83.QueryGroupsByMemberResponseAminoMsg;
                fromProtoMsg(message: _83.QueryGroupsByMemberResponseProtoMsg): _83.QueryGroupsByMemberResponse;
                toProto(message: _83.QueryGroupsByMemberResponse): Uint8Array;
                toProtoMsg(message: _83.QueryGroupsByMemberResponse): _83.QueryGroupsByMemberResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryTallyResultRequest;
                fromJSON(object: any): _83.QueryTallyResultRequest;
                toJSON(message: _83.QueryTallyResultRequest): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _83.QueryTallyResultRequest;
                fromSDK(object: _83.QueryTallyResultRequestSDKType): _83.QueryTallyResultRequest;
                toSDK(message: _83.QueryTallyResultRequest): _83.QueryTallyResultRequestSDKType;
                fromAmino(object: _83.QueryTallyResultRequestAmino): _83.QueryTallyResultRequest;
                toAmino(message: _83.QueryTallyResultRequest): _83.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _83.QueryTallyResultRequestAminoMsg): _83.QueryTallyResultRequest;
                toAminoMsg(message: _83.QueryTallyResultRequest): _83.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _83.QueryTallyResultRequestProtoMsg): _83.QueryTallyResultRequest;
                toProto(message: _83.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _83.QueryTallyResultRequest): _83.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _83.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.QueryTallyResultResponse;
                fromJSON(object: any): _83.QueryTallyResultResponse;
                toJSON(message: _83.QueryTallyResultResponse): unknown;
                fromPartial(object: {
                    tally?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                }): _83.QueryTallyResultResponse;
                fromSDK(object: _83.QueryTallyResultResponseSDKType): _83.QueryTallyResultResponse;
                toSDK(message: _83.QueryTallyResultResponse): _83.QueryTallyResultResponseSDKType;
                fromAmino(object: _83.QueryTallyResultResponseAmino): _83.QueryTallyResultResponse;
                toAmino(message: _83.QueryTallyResultResponse): _83.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _83.QueryTallyResultResponseAminoMsg): _83.QueryTallyResultResponse;
                toAminoMsg(message: _83.QueryTallyResultResponse): _83.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _83.QueryTallyResultResponseProtoMsg): _83.QueryTallyResultResponse;
                toProto(message: _83.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _83.QueryTallyResultResponse): _83.QueryTallyResultResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _82.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.GenesisState;
                fromJSON(object: any): _82.GenesisState;
                toJSON(message: _82.GenesisState): unknown;
                fromPartial(object: {
                    groupSeq?: bigint;
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    groupMembers?: {
                        groupId?: bigint;
                        member?: {
                            address?: string;
                            weight?: string;
                            metadata?: string;
                            addedAt?: Date;
                        };
                    }[];
                    groupPolicySeq?: bigint;
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        createdAt?: Date;
                    }[];
                    proposalSeq?: bigint;
                    proposals?: {
                        id?: bigint;
                        address?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _85.ProposalStatus;
                        result?: _85.ProposalResult;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _85.ProposalExecutorResult;
                        messages?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _85.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                }): _82.GenesisState;
                fromSDK(object: _82.GenesisStateSDKType): _82.GenesisState;
                toSDK(message: _82.GenesisState): _82.GenesisStateSDKType;
                fromAmino(object: _82.GenesisStateAmino): _82.GenesisState;
                toAmino(message: _82.GenesisState): _82.GenesisStateAmino;
                fromAminoMsg(object: _82.GenesisStateAminoMsg): _82.GenesisState;
                toAminoMsg(message: _82.GenesisState): _82.GenesisStateAminoMsg;
                fromProtoMsg(message: _82.GenesisStateProtoMsg): _82.GenesisState;
                toProto(message: _82.GenesisState): Uint8Array;
                toProtoMsg(message: _82.GenesisState): _82.GenesisStateProtoMsg;
            };
            EventCreateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventCreateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventCreateGroup;
                fromJSON(object: any): _81.EventCreateGroup;
                toJSON(message: _81.EventCreateGroup): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                }): _81.EventCreateGroup;
                fromSDK(object: _81.EventCreateGroupSDKType): _81.EventCreateGroup;
                toSDK(message: _81.EventCreateGroup): _81.EventCreateGroupSDKType;
                fromAmino(object: _81.EventCreateGroupAmino): _81.EventCreateGroup;
                toAmino(message: _81.EventCreateGroup): _81.EventCreateGroupAmino;
                fromAminoMsg(object: _81.EventCreateGroupAminoMsg): _81.EventCreateGroup;
                toAminoMsg(message: _81.EventCreateGroup): _81.EventCreateGroupAminoMsg;
                fromProtoMsg(message: _81.EventCreateGroupProtoMsg): _81.EventCreateGroup;
                toProto(message: _81.EventCreateGroup): Uint8Array;
                toProtoMsg(message: _81.EventCreateGroup): _81.EventCreateGroupProtoMsg;
            };
            EventUpdateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventUpdateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventUpdateGroup;
                fromJSON(object: any): _81.EventUpdateGroup;
                toJSON(message: _81.EventUpdateGroup): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                }): _81.EventUpdateGroup;
                fromSDK(object: _81.EventUpdateGroupSDKType): _81.EventUpdateGroup;
                toSDK(message: _81.EventUpdateGroup): _81.EventUpdateGroupSDKType;
                fromAmino(object: _81.EventUpdateGroupAmino): _81.EventUpdateGroup;
                toAmino(message: _81.EventUpdateGroup): _81.EventUpdateGroupAmino;
                fromAminoMsg(object: _81.EventUpdateGroupAminoMsg): _81.EventUpdateGroup;
                toAminoMsg(message: _81.EventUpdateGroup): _81.EventUpdateGroupAminoMsg;
                fromProtoMsg(message: _81.EventUpdateGroupProtoMsg): _81.EventUpdateGroup;
                toProto(message: _81.EventUpdateGroup): Uint8Array;
                toProtoMsg(message: _81.EventUpdateGroup): _81.EventUpdateGroupProtoMsg;
            };
            EventCreateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventCreateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventCreateGroupPolicy;
                fromJSON(object: any): _81.EventCreateGroupPolicy;
                toJSON(message: _81.EventCreateGroupPolicy): unknown;
                fromPartial(object: {
                    address?: string;
                }): _81.EventCreateGroupPolicy;
                fromSDK(object: _81.EventCreateGroupPolicySDKType): _81.EventCreateGroupPolicy;
                toSDK(message: _81.EventCreateGroupPolicy): _81.EventCreateGroupPolicySDKType;
                fromAmino(object: _81.EventCreateGroupPolicyAmino): _81.EventCreateGroupPolicy;
                toAmino(message: _81.EventCreateGroupPolicy): _81.EventCreateGroupPolicyAmino;
                fromAminoMsg(object: _81.EventCreateGroupPolicyAminoMsg): _81.EventCreateGroupPolicy;
                toAminoMsg(message: _81.EventCreateGroupPolicy): _81.EventCreateGroupPolicyAminoMsg;
                fromProtoMsg(message: _81.EventCreateGroupPolicyProtoMsg): _81.EventCreateGroupPolicy;
                toProto(message: _81.EventCreateGroupPolicy): Uint8Array;
                toProtoMsg(message: _81.EventCreateGroupPolicy): _81.EventCreateGroupPolicyProtoMsg;
            };
            EventUpdateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventUpdateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventUpdateGroupPolicy;
                fromJSON(object: any): _81.EventUpdateGroupPolicy;
                toJSON(message: _81.EventUpdateGroupPolicy): unknown;
                fromPartial(object: {
                    address?: string;
                }): _81.EventUpdateGroupPolicy;
                fromSDK(object: _81.EventUpdateGroupPolicySDKType): _81.EventUpdateGroupPolicy;
                toSDK(message: _81.EventUpdateGroupPolicy): _81.EventUpdateGroupPolicySDKType;
                fromAmino(object: _81.EventUpdateGroupPolicyAmino): _81.EventUpdateGroupPolicy;
                toAmino(message: _81.EventUpdateGroupPolicy): _81.EventUpdateGroupPolicyAmino;
                fromAminoMsg(object: _81.EventUpdateGroupPolicyAminoMsg): _81.EventUpdateGroupPolicy;
                toAminoMsg(message: _81.EventUpdateGroupPolicy): _81.EventUpdateGroupPolicyAminoMsg;
                fromProtoMsg(message: _81.EventUpdateGroupPolicyProtoMsg): _81.EventUpdateGroupPolicy;
                toProto(message: _81.EventUpdateGroupPolicy): Uint8Array;
                toProtoMsg(message: _81.EventUpdateGroupPolicy): _81.EventUpdateGroupPolicyProtoMsg;
            };
            EventSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventSubmitProposal;
                fromJSON(object: any): _81.EventSubmitProposal;
                toJSON(message: _81.EventSubmitProposal): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _81.EventSubmitProposal;
                fromSDK(object: _81.EventSubmitProposalSDKType): _81.EventSubmitProposal;
                toSDK(message: _81.EventSubmitProposal): _81.EventSubmitProposalSDKType;
                fromAmino(object: _81.EventSubmitProposalAmino): _81.EventSubmitProposal;
                toAmino(message: _81.EventSubmitProposal): _81.EventSubmitProposalAmino;
                fromAminoMsg(object: _81.EventSubmitProposalAminoMsg): _81.EventSubmitProposal;
                toAminoMsg(message: _81.EventSubmitProposal): _81.EventSubmitProposalAminoMsg;
                fromProtoMsg(message: _81.EventSubmitProposalProtoMsg): _81.EventSubmitProposal;
                toProto(message: _81.EventSubmitProposal): Uint8Array;
                toProtoMsg(message: _81.EventSubmitProposal): _81.EventSubmitProposalProtoMsg;
            };
            EventWithdrawProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventWithdrawProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventWithdrawProposal;
                fromJSON(object: any): _81.EventWithdrawProposal;
                toJSON(message: _81.EventWithdrawProposal): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _81.EventWithdrawProposal;
                fromSDK(object: _81.EventWithdrawProposalSDKType): _81.EventWithdrawProposal;
                toSDK(message: _81.EventWithdrawProposal): _81.EventWithdrawProposalSDKType;
                fromAmino(object: _81.EventWithdrawProposalAmino): _81.EventWithdrawProposal;
                toAmino(message: _81.EventWithdrawProposal): _81.EventWithdrawProposalAmino;
                fromAminoMsg(object: _81.EventWithdrawProposalAminoMsg): _81.EventWithdrawProposal;
                toAminoMsg(message: _81.EventWithdrawProposal): _81.EventWithdrawProposalAminoMsg;
                fromProtoMsg(message: _81.EventWithdrawProposalProtoMsg): _81.EventWithdrawProposal;
                toProto(message: _81.EventWithdrawProposal): Uint8Array;
                toProtoMsg(message: _81.EventWithdrawProposal): _81.EventWithdrawProposalProtoMsg;
            };
            EventVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventVote;
                fromJSON(object: any): _81.EventVote;
                toJSON(message: _81.EventVote): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _81.EventVote;
                fromSDK(object: _81.EventVoteSDKType): _81.EventVote;
                toSDK(message: _81.EventVote): _81.EventVoteSDKType;
                fromAmino(object: _81.EventVoteAmino): _81.EventVote;
                toAmino(message: _81.EventVote): _81.EventVoteAmino;
                fromAminoMsg(object: _81.EventVoteAminoMsg): _81.EventVote;
                toAminoMsg(message: _81.EventVote): _81.EventVoteAminoMsg;
                fromProtoMsg(message: _81.EventVoteProtoMsg): _81.EventVote;
                toProto(message: _81.EventVote): Uint8Array;
                toProtoMsg(message: _81.EventVote): _81.EventVoteProtoMsg;
            };
            EventExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventExec;
                fromJSON(object: any): _81.EventExec;
                toJSON(message: _81.EventExec): unknown;
                fromPartial(object: {
                    proposalId?: bigint;
                    result?: _85.ProposalExecutorResult;
                }): _81.EventExec;
                fromSDK(object: _81.EventExecSDKType): _81.EventExec;
                toSDK(message: _81.EventExec): _81.EventExecSDKType;
                fromAmino(object: _81.EventExecAmino): _81.EventExec;
                toAmino(message: _81.EventExec): _81.EventExecAmino;
                fromAminoMsg(object: _81.EventExecAminoMsg): _81.EventExec;
                toAminoMsg(message: _81.EventExec): _81.EventExecAminoMsg;
                fromProtoMsg(message: _81.EventExecProtoMsg): _81.EventExec;
                toProto(message: _81.EventExec): Uint8Array;
                toProtoMsg(message: _81.EventExec): _81.EventExecProtoMsg;
            };
            EventLeaveGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.EventLeaveGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.EventLeaveGroup;
                fromJSON(object: any): _81.EventLeaveGroup;
                toJSON(message: _81.EventLeaveGroup): unknown;
                fromPartial(object: {
                    groupId?: bigint;
                    address?: string;
                }): _81.EventLeaveGroup;
                fromSDK(object: _81.EventLeaveGroupSDKType): _81.EventLeaveGroup;
                toSDK(message: _81.EventLeaveGroup): _81.EventLeaveGroupSDKType;
                fromAmino(object: _81.EventLeaveGroupAmino): _81.EventLeaveGroup;
                toAmino(message: _81.EventLeaveGroup): _81.EventLeaveGroupAmino;
                fromAminoMsg(object: _81.EventLeaveGroupAminoMsg): _81.EventLeaveGroup;
                toAminoMsg(message: _81.EventLeaveGroup): _81.EventLeaveGroupAminoMsg;
                fromProtoMsg(message: _81.EventLeaveGroupProtoMsg): _81.EventLeaveGroup;
                toProto(message: _81.EventLeaveGroup): Uint8Array;
                toProtoMsg(message: _81.EventLeaveGroup): _81.EventLeaveGroupProtoMsg;
            };
        };
    }
    namespace msg {
        const v1: {};
    }
    namespace nft {
        const v1beta1: {
            MsgClientImpl: typeof _224.MsgClientImpl;
            QueryClientImpl: typeof _211.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                balance(request: _90.QueryBalanceRequest): Promise<_90.QueryBalanceResponse>;
                owner(request: _90.QueryOwnerRequest): Promise<_90.QueryOwnerResponse>;
                supply(request: _90.QuerySupplyRequest): Promise<_90.QuerySupplyResponse>;
                nFTs(request: _90.QueryNFTsRequest): Promise<_90.QueryNFTsResponse>;
                nFT(request: _90.QueryNFTRequest): Promise<_90.QueryNFTResponse>;
                class(request: _90.QueryClassRequest): Promise<_90.QueryClassResponse>;
                classes(request?: _90.QueryClassesRequest): Promise<_90.QueryClassesResponse>;
            };
            createRpcQueryHooks: (rpc: import("@cosmjs/stargate").ProtobufRpcClient) => {
                useBalance: <TData = _90.QueryBalanceResponse>({ request, options }: _211.UseBalanceQuery<TData>) => import("@tanstack/react-query").UseQueryResult<TData, Error>;
                useOwner: <TData_1 = _90.QueryOwnerResponse>({ request, options }: _211.UseOwnerQuery<TData_1>) => import("@tanstack/react-query").UseQueryResult<TData_1, Error>;
                useSupply: <TData_2 = _90.QuerySupplyResponse>({ request, options }: _211.UseSupplyQuery<TData_2>) => import("@tanstack/react-query").UseQueryResult<TData_2, Error>;
                useNFTs: <TData_3 = _90.QueryNFTsResponse>({ request, options }: _211.UseNFTsQuery<TData_3>) => import("@tanstack/react-query").UseQueryResult<TData_3, Error>;
                useNFT: <TData_4 = _90.QueryNFTResponse>({ request, options }: _211.UseNFTQuery<TData_4>) => import("@tanstack/react-query").UseQueryResult<TData_4, Error>;
                useClass: <TData_5 = _90.QueryClassResponse>({ request, options }: _211.UseClassQuery<TData_5>) => import("@tanstack/react-query").UseQueryResult<TData_5, Error>;
                useClasses: <TData_6 = _90.QueryClassesResponse>({ request, options }: _211.UseClassesQuery<TData_6>) => import("@tanstack/react-query").UseQueryResult<TData_6, Error>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    send(value: _91.MsgSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    send(value: _91.MsgSend): {
                        typeUrl: string;
                        value: _91.MsgSend;
                    };
                };
                toJSON: {
                    send(value: _91.MsgSend): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    send(value: any): {
                        typeUrl: string;
                        value: _91.MsgSend;
                    };
                };
                fromPartial: {
                    send(value: _91.MsgSend): {
                        typeUrl: string;
                        value: _91.MsgSend;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.nft.v1beta1.MsgSend": {
                    aminoType: string;
                    toAmino: (message: _91.MsgSend) => _91.MsgSendAmino;
                    fromAmino: (object: _91.MsgSendAmino) => _91.MsgSend;
                };
            };
            MsgSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _91.MsgSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.MsgSend;
                fromJSON(object: any): _91.MsgSend;
                toJSON(message: _91.MsgSend): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                    sender?: string;
                    receiver?: string;
                }): _91.MsgSend;
                fromSDK(object: _91.MsgSendSDKType): _91.MsgSend;
                toSDK(message: _91.MsgSend): _91.MsgSendSDKType;
                fromAmino(object: _91.MsgSendAmino): _91.MsgSend;
                toAmino(message: _91.MsgSend): _91.MsgSendAmino;
                fromAminoMsg(object: _91.MsgSendAminoMsg): _91.MsgSend;
                toAminoMsg(message: _91.MsgSend): _91.MsgSendAminoMsg;
                fromProtoMsg(message: _91.MsgSendProtoMsg): _91.MsgSend;
                toProto(message: _91.MsgSend): Uint8Array;
                toProtoMsg(message: _91.MsgSend): _91.MsgSendProtoMsg;
            };
            MsgSendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _91.MsgSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.MsgSendResponse;
                fromJSON(_: any): _91.MsgSendResponse;
                toJSON(_: _91.MsgSendResponse): unknown;
                fromPartial(_: {}): _91.MsgSendResponse;
                fromSDK(_: _91.MsgSendResponseSDKType): _91.MsgSendResponse;
                toSDK(_: _91.MsgSendResponse): _91.MsgSendResponseSDKType;
                fromAmino(_: _91.MsgSendResponseAmino): _91.MsgSendResponse;
                toAmino(_: _91.MsgSendResponse): _91.MsgSendResponseAmino;
                fromAminoMsg(object: _91.MsgSendResponseAminoMsg): _91.MsgSendResponse;
                toAminoMsg(message: _91.MsgSendResponse): _91.MsgSendResponseAminoMsg;
                fromProtoMsg(message: _91.MsgSendResponseProtoMsg): _91.MsgSendResponse;
                toProto(message: _91.MsgSendResponse): Uint8Array;
                toProtoMsg(message: _91.MsgSendResponse): _91.MsgSendResponseProtoMsg;
            };
            QueryBalanceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryBalanceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryBalanceRequest;
                fromJSON(object: any): _90.QueryBalanceRequest;
                toJSON(message: _90.QueryBalanceRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                    owner?: string;
                }): _90.QueryBalanceRequest;
                fromSDK(object: _90.QueryBalanceRequestSDKType): _90.QueryBalanceRequest;
                toSDK(message: _90.QueryBalanceRequest): _90.QueryBalanceRequestSDKType;
                fromAmino(object: _90.QueryBalanceRequestAmino): _90.QueryBalanceRequest;
                toAmino(message: _90.QueryBalanceRequest): _90.QueryBalanceRequestAmino;
                fromAminoMsg(object: _90.QueryBalanceRequestAminoMsg): _90.QueryBalanceRequest;
                toAminoMsg(message: _90.QueryBalanceRequest): _90.QueryBalanceRequestAminoMsg;
                fromProtoMsg(message: _90.QueryBalanceRequestProtoMsg): _90.QueryBalanceRequest;
                toProto(message: _90.QueryBalanceRequest): Uint8Array;
                toProtoMsg(message: _90.QueryBalanceRequest): _90.QueryBalanceRequestProtoMsg;
            };
            QueryBalanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryBalanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryBalanceResponse;
                fromJSON(object: any): _90.QueryBalanceResponse;
                toJSON(message: _90.QueryBalanceResponse): unknown;
                fromPartial(object: {
                    amount?: bigint;
                }): _90.QueryBalanceResponse;
                fromSDK(object: _90.QueryBalanceResponseSDKType): _90.QueryBalanceResponse;
                toSDK(message: _90.QueryBalanceResponse): _90.QueryBalanceResponseSDKType;
                fromAmino(object: _90.QueryBalanceResponseAmino): _90.QueryBalanceResponse;
                toAmino(message: _90.QueryBalanceResponse): _90.QueryBalanceResponseAmino;
                fromAminoMsg(object: _90.QueryBalanceResponseAminoMsg): _90.QueryBalanceResponse;
                toAminoMsg(message: _90.QueryBalanceResponse): _90.QueryBalanceResponseAminoMsg;
                fromProtoMsg(message: _90.QueryBalanceResponseProtoMsg): _90.QueryBalanceResponse;
                toProto(message: _90.QueryBalanceResponse): Uint8Array;
                toProtoMsg(message: _90.QueryBalanceResponse): _90.QueryBalanceResponseProtoMsg;
            };
            QueryOwnerRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryOwnerRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryOwnerRequest;
                fromJSON(object: any): _90.QueryOwnerRequest;
                toJSON(message: _90.QueryOwnerRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                }): _90.QueryOwnerRequest;
                fromSDK(object: _90.QueryOwnerRequestSDKType): _90.QueryOwnerRequest;
                toSDK(message: _90.QueryOwnerRequest): _90.QueryOwnerRequestSDKType;
                fromAmino(object: _90.QueryOwnerRequestAmino): _90.QueryOwnerRequest;
                toAmino(message: _90.QueryOwnerRequest): _90.QueryOwnerRequestAmino;
                fromAminoMsg(object: _90.QueryOwnerRequestAminoMsg): _90.QueryOwnerRequest;
                toAminoMsg(message: _90.QueryOwnerRequest): _90.QueryOwnerRequestAminoMsg;
                fromProtoMsg(message: _90.QueryOwnerRequestProtoMsg): _90.QueryOwnerRequest;
                toProto(message: _90.QueryOwnerRequest): Uint8Array;
                toProtoMsg(message: _90.QueryOwnerRequest): _90.QueryOwnerRequestProtoMsg;
            };
            QueryOwnerResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryOwnerResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryOwnerResponse;
                fromJSON(object: any): _90.QueryOwnerResponse;
                toJSON(message: _90.QueryOwnerResponse): unknown;
                fromPartial(object: {
                    owner?: string;
                }): _90.QueryOwnerResponse;
                fromSDK(object: _90.QueryOwnerResponseSDKType): _90.QueryOwnerResponse;
                toSDK(message: _90.QueryOwnerResponse): _90.QueryOwnerResponseSDKType;
                fromAmino(object: _90.QueryOwnerResponseAmino): _90.QueryOwnerResponse;
                toAmino(message: _90.QueryOwnerResponse): _90.QueryOwnerResponseAmino;
                fromAminoMsg(object: _90.QueryOwnerResponseAminoMsg): _90.QueryOwnerResponse;
                toAminoMsg(message: _90.QueryOwnerResponse): _90.QueryOwnerResponseAminoMsg;
                fromProtoMsg(message: _90.QueryOwnerResponseProtoMsg): _90.QueryOwnerResponse;
                toProto(message: _90.QueryOwnerResponse): Uint8Array;
                toProtoMsg(message: _90.QueryOwnerResponse): _90.QueryOwnerResponseProtoMsg;
            };
            QuerySupplyRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QuerySupplyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QuerySupplyRequest;
                fromJSON(object: any): _90.QuerySupplyRequest;
                toJSON(message: _90.QuerySupplyRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                }): _90.QuerySupplyRequest;
                fromSDK(object: _90.QuerySupplyRequestSDKType): _90.QuerySupplyRequest;
                toSDK(message: _90.QuerySupplyRequest): _90.QuerySupplyRequestSDKType;
                fromAmino(object: _90.QuerySupplyRequestAmino): _90.QuerySupplyRequest;
                toAmino(message: _90.QuerySupplyRequest): _90.QuerySupplyRequestAmino;
                fromAminoMsg(object: _90.QuerySupplyRequestAminoMsg): _90.QuerySupplyRequest;
                toAminoMsg(message: _90.QuerySupplyRequest): _90.QuerySupplyRequestAminoMsg;
                fromProtoMsg(message: _90.QuerySupplyRequestProtoMsg): _90.QuerySupplyRequest;
                toProto(message: _90.QuerySupplyRequest): Uint8Array;
                toProtoMsg(message: _90.QuerySupplyRequest): _90.QuerySupplyRequestProtoMsg;
            };
            QuerySupplyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QuerySupplyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QuerySupplyResponse;
                fromJSON(object: any): _90.QuerySupplyResponse;
                toJSON(message: _90.QuerySupplyResponse): unknown;
                fromPartial(object: {
                    amount?: bigint;
                }): _90.QuerySupplyResponse;
                fromSDK(object: _90.QuerySupplyResponseSDKType): _90.QuerySupplyResponse;
                toSDK(message: _90.QuerySupplyResponse): _90.QuerySupplyResponseSDKType;
                fromAmino(object: _90.QuerySupplyResponseAmino): _90.QuerySupplyResponse;
                toAmino(message: _90.QuerySupplyResponse): _90.QuerySupplyResponseAmino;
                fromAminoMsg(object: _90.QuerySupplyResponseAminoMsg): _90.QuerySupplyResponse;
                toAminoMsg(message: _90.QuerySupplyResponse): _90.QuerySupplyResponseAminoMsg;
                fromProtoMsg(message: _90.QuerySupplyResponseProtoMsg): _90.QuerySupplyResponse;
                toProto(message: _90.QuerySupplyResponse): Uint8Array;
                toProtoMsg(message: _90.QuerySupplyResponse): _90.QuerySupplyResponseProtoMsg;
            };
            QueryNFTsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryNFTsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryNFTsRequest;
                fromJSON(object: any): _90.QueryNFTsRequest;
                toJSON(message: _90.QueryNFTsRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                    owner?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _90.QueryNFTsRequest;
                fromSDK(object: _90.QueryNFTsRequestSDKType): _90.QueryNFTsRequest;
                toSDK(message: _90.QueryNFTsRequest): _90.QueryNFTsRequestSDKType;
                fromAmino(object: _90.QueryNFTsRequestAmino): _90.QueryNFTsRequest;
                toAmino(message: _90.QueryNFTsRequest): _90.QueryNFTsRequestAmino;
                fromAminoMsg(object: _90.QueryNFTsRequestAminoMsg): _90.QueryNFTsRequest;
                toAminoMsg(message: _90.QueryNFTsRequest): _90.QueryNFTsRequestAminoMsg;
                fromProtoMsg(message: _90.QueryNFTsRequestProtoMsg): _90.QueryNFTsRequest;
                toProto(message: _90.QueryNFTsRequest): Uint8Array;
                toProtoMsg(message: _90.QueryNFTsRequest): _90.QueryNFTsRequestProtoMsg;
            };
            QueryNFTsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryNFTsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryNFTsResponse;
                fromJSON(object: any): _90.QueryNFTsResponse;
                toJSON(message: _90.QueryNFTsResponse): unknown;
                fromPartial(object: {
                    nfts?: {
                        classId?: string;
                        id?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _90.QueryNFTsResponse;
                fromSDK(object: _90.QueryNFTsResponseSDKType): _90.QueryNFTsResponse;
                toSDK(message: _90.QueryNFTsResponse): _90.QueryNFTsResponseSDKType;
                fromAmino(object: _90.QueryNFTsResponseAmino): _90.QueryNFTsResponse;
                toAmino(message: _90.QueryNFTsResponse): _90.QueryNFTsResponseAmino;
                fromAminoMsg(object: _90.QueryNFTsResponseAminoMsg): _90.QueryNFTsResponse;
                toAminoMsg(message: _90.QueryNFTsResponse): _90.QueryNFTsResponseAminoMsg;
                fromProtoMsg(message: _90.QueryNFTsResponseProtoMsg): _90.QueryNFTsResponse;
                toProto(message: _90.QueryNFTsResponse): Uint8Array;
                toProtoMsg(message: _90.QueryNFTsResponse): _90.QueryNFTsResponseProtoMsg;
            };
            QueryNFTRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryNFTRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryNFTRequest;
                fromJSON(object: any): _90.QueryNFTRequest;
                toJSON(message: _90.QueryNFTRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                }): _90.QueryNFTRequest;
                fromSDK(object: _90.QueryNFTRequestSDKType): _90.QueryNFTRequest;
                toSDK(message: _90.QueryNFTRequest): _90.QueryNFTRequestSDKType;
                fromAmino(object: _90.QueryNFTRequestAmino): _90.QueryNFTRequest;
                toAmino(message: _90.QueryNFTRequest): _90.QueryNFTRequestAmino;
                fromAminoMsg(object: _90.QueryNFTRequestAminoMsg): _90.QueryNFTRequest;
                toAminoMsg(message: _90.QueryNFTRequest): _90.QueryNFTRequestAminoMsg;
                fromProtoMsg(message: _90.QueryNFTRequestProtoMsg): _90.QueryNFTRequest;
                toProto(message: _90.QueryNFTRequest): Uint8Array;
                toProtoMsg(message: _90.QueryNFTRequest): _90.QueryNFTRequestProtoMsg;
            };
            QueryNFTResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryNFTResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryNFTResponse;
                fromJSON(object: any): _90.QueryNFTResponse;
                toJSON(message: _90.QueryNFTResponse): unknown;
                fromPartial(object: {
                    nft?: {
                        classId?: string;
                        id?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _90.QueryNFTResponse;
                fromSDK(object: _90.QueryNFTResponseSDKType): _90.QueryNFTResponse;
                toSDK(message: _90.QueryNFTResponse): _90.QueryNFTResponseSDKType;
                fromAmino(object: _90.QueryNFTResponseAmino): _90.QueryNFTResponse;
                toAmino(message: _90.QueryNFTResponse): _90.QueryNFTResponseAmino;
                fromAminoMsg(object: _90.QueryNFTResponseAminoMsg): _90.QueryNFTResponse;
                toAminoMsg(message: _90.QueryNFTResponse): _90.QueryNFTResponseAminoMsg;
                fromProtoMsg(message: _90.QueryNFTResponseProtoMsg): _90.QueryNFTResponse;
                toProto(message: _90.QueryNFTResponse): Uint8Array;
                toProtoMsg(message: _90.QueryNFTResponse): _90.QueryNFTResponseProtoMsg;
            };
            QueryClassRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryClassRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryClassRequest;
                fromJSON(object: any): _90.QueryClassRequest;
                toJSON(message: _90.QueryClassRequest): unknown;
                fromPartial(object: {
                    classId?: string;
                }): _90.QueryClassRequest;
                fromSDK(object: _90.QueryClassRequestSDKType): _90.QueryClassRequest;
                toSDK(message: _90.QueryClassRequest): _90.QueryClassRequestSDKType;
                fromAmino(object: _90.QueryClassRequestAmino): _90.QueryClassRequest;
                toAmino(message: _90.QueryClassRequest): _90.QueryClassRequestAmino;
                fromAminoMsg(object: _90.QueryClassRequestAminoMsg): _90.QueryClassRequest;
                toAminoMsg(message: _90.QueryClassRequest): _90.QueryClassRequestAminoMsg;
                fromProtoMsg(message: _90.QueryClassRequestProtoMsg): _90.QueryClassRequest;
                toProto(message: _90.QueryClassRequest): Uint8Array;
                toProtoMsg(message: _90.QueryClassRequest): _90.QueryClassRequestProtoMsg;
            };
            QueryClassResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryClassResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryClassResponse;
                fromJSON(object: any): _90.QueryClassResponse;
                toJSON(message: _90.QueryClassResponse): unknown;
                fromPartial(object: {
                    class?: {
                        id?: string;
                        name?: string;
                        symbol?: string;
                        description?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _90.QueryClassResponse;
                fromSDK(object: _90.QueryClassResponseSDKType): _90.QueryClassResponse;
                toSDK(message: _90.QueryClassResponse): _90.QueryClassResponseSDKType;
                fromAmino(object: _90.QueryClassResponseAmino): _90.QueryClassResponse;
                toAmino(message: _90.QueryClassResponse): _90.QueryClassResponseAmino;
                fromAminoMsg(object: _90.QueryClassResponseAminoMsg): _90.QueryClassResponse;
                toAminoMsg(message: _90.QueryClassResponse): _90.QueryClassResponseAminoMsg;
                fromProtoMsg(message: _90.QueryClassResponseProtoMsg): _90.QueryClassResponse;
                toProto(message: _90.QueryClassResponse): Uint8Array;
                toProtoMsg(message: _90.QueryClassResponse): _90.QueryClassResponseProtoMsg;
            };
            QueryClassesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryClassesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryClassesRequest;
                fromJSON(object: any): _90.QueryClassesRequest;
                toJSON(message: _90.QueryClassesRequest): unknown;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _90.QueryClassesRequest;
                fromSDK(object: _90.QueryClassesRequestSDKType): _90.QueryClassesRequest;
                toSDK(message: _90.QueryClassesRequest): _90.QueryClassesRequestSDKType;
                fromAmino(object: _90.QueryClassesRequestAmino): _90.QueryClassesRequest;
                toAmino(message: _90.QueryClassesRequest): _90.QueryClassesRequestAmino;
                fromAminoMsg(object: _90.QueryClassesRequestAminoMsg): _90.QueryClassesRequest;
                toAminoMsg(message: _90.QueryClassesRequest): _90.QueryClassesRequestAminoMsg;
                fromProtoMsg(message: _90.QueryClassesRequestProtoMsg): _90.QueryClassesRequest;
                toProto(message: _90.QueryClassesRequest): Uint8Array;
                toProtoMsg(message: _90.QueryClassesRequest): _90.QueryClassesRequestProtoMsg;
            };
            QueryClassesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _90.QueryClassesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.QueryClassesResponse;
                fromJSON(object: any): _90.QueryClassesResponse;
                toJSON(message: _90.QueryClassesResponse): unknown;
                fromPartial(object: {
                    classes?: {
                        id?: string;
                        name?: string;
                        symbol?: string;
                        description?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _90.QueryClassesResponse;
                fromSDK(object: _90.QueryClassesResponseSDKType): _90.QueryClassesResponse;
                toSDK(message: _90.QueryClassesResponse): _90.QueryClassesResponseSDKType;
                fromAmino(object: _90.QueryClassesResponseAmino): _90.QueryClassesResponse;
                toAmino(message: _90.QueryClassesResponse): _90.QueryClassesResponseAmino;
                fromAminoMsg(object: _90.QueryClassesResponseAminoMsg): _90.QueryClassesResponse;
                toAminoMsg(message: _90.QueryClassesResponse): _90.QueryClassesResponseAminoMsg;
                fromProtoMsg(message: _90.QueryClassesResponseProtoMsg): _90.QueryClassesResponse;
                toProto(message: _90.QueryClassesResponse): Uint8Array;
                toProtoMsg(message: _90.QueryClassesResponse): _90.QueryClassesResponseProtoMsg;
            };
            Class: {
                typeUrl: string;
                aminoType: string;
                encode(message: _89.Class, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.Class;
                fromJSON(object: any): _89.Class;
                toJSON(message: _89.Class): unknown;
                fromPartial(object: {
                    id?: string;
                    name?: string;
                    symbol?: string;
                    description?: string;
                    uri?: string;
                    uriHash?: string;
                    data?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _89.Class;
                fromSDK(object: _89.ClassSDKType): _89.Class;
                toSDK(message: _89.Class): _89.ClassSDKType;
                fromAmino(object: _89.ClassAmino): _89.Class;
                toAmino(message: _89.Class): _89.ClassAmino;
                fromAminoMsg(object: _89.ClassAminoMsg): _89.Class;
                toAminoMsg(message: _89.Class): _89.ClassAminoMsg;
                fromProtoMsg(message: _89.ClassProtoMsg): _89.Class;
                toProto(message: _89.Class): Uint8Array;
                toProtoMsg(message: _89.Class): _89.ClassProtoMsg;
            };
            NFT: {
                typeUrl: string;
                aminoType: string;
                encode(message: _89.NFT, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.NFT;
                fromJSON(object: any): _89.NFT;
                toJSON(message: _89.NFT): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                    uri?: string;
                    uriHash?: string;
                    data?: {
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _89.NFT;
                fromSDK(object: _89.NFTSDKType): _89.NFT;
                toSDK(message: _89.NFT): _89.NFTSDKType;
                fromAmino(object: _89.NFTAmino): _89.NFT;
                toAmino(message: _89.NFT): _89.NFTAmino;
                fromAminoMsg(object: _89.NFTAminoMsg): _89.NFT;
                toAminoMsg(message: _89.NFT): _89.NFTAminoMsg;
                fromProtoMsg(message: _89.NFTProtoMsg): _89.NFT;
                toProto(message: _89.NFT): Uint8Array;
                toProtoMsg(message: _89.NFT): _89.NFTProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.GenesisState;
                fromJSON(object: any): _88.GenesisState;
                toJSON(message: _88.GenesisState): unknown;
                fromPartial(object: {
                    classes?: {
                        id?: string;
                        name?: string;
                        symbol?: string;
                        description?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                    entries?: {
                        owner?: string;
                        nfts?: {
                            classId?: string;
                            id?: string;
                            uri?: string;
                            uriHash?: string;
                            data?: {
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        }[];
                    }[];
                }): _88.GenesisState;
                fromSDK(object: _88.GenesisStateSDKType): _88.GenesisState;
                toSDK(message: _88.GenesisState): _88.GenesisStateSDKType;
                fromAmino(object: _88.GenesisStateAmino): _88.GenesisState;
                toAmino(message: _88.GenesisState): _88.GenesisStateAmino;
                fromAminoMsg(object: _88.GenesisStateAminoMsg): _88.GenesisState;
                toAminoMsg(message: _88.GenesisState): _88.GenesisStateAminoMsg;
                fromProtoMsg(message: _88.GenesisStateProtoMsg): _88.GenesisState;
                toProto(message: _88.GenesisState): Uint8Array;
                toProtoMsg(message: _88.GenesisState): _88.GenesisStateProtoMsg;
            };
            Entry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.Entry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.Entry;
                fromJSON(object: any): _88.Entry;
                toJSON(message: _88.Entry): unknown;
                fromPartial(object: {
                    owner?: string;
                    nfts?: {
                        classId?: string;
                        id?: string;
                        uri?: string;
                        uriHash?: string;
                        data?: {
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }[];
                }): _88.Entry;
                fromSDK(object: _88.EntrySDKType): _88.Entry;
                toSDK(message: _88.Entry): _88.EntrySDKType;
                fromAmino(object: _88.EntryAmino): _88.Entry;
                toAmino(message: _88.Entry): _88.EntryAmino;
                fromAminoMsg(object: _88.EntryAminoMsg): _88.Entry;
                toAminoMsg(message: _88.Entry): _88.EntryAminoMsg;
                fromProtoMsg(message: _88.EntryProtoMsg): _88.Entry;
                toProto(message: _88.Entry): Uint8Array;
                toProtoMsg(message: _88.Entry): _88.EntryProtoMsg;
            };
            EventSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.EventSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.EventSend;
                fromJSON(object: any): _87.EventSend;
                toJSON(message: _87.EventSend): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                    sender?: string;
                    receiver?: string;
                }): _87.EventSend;
                fromSDK(object: _87.EventSendSDKType): _87.EventSend;
                toSDK(message: _87.EventSend): _87.EventSendSDKType;
                fromAmino(object: _87.EventSendAmino): _87.EventSend;
                toAmino(message: _87.EventSend): _87.EventSendAmino;
                fromAminoMsg(object: _87.EventSendAminoMsg): _87.EventSend;
                toAminoMsg(message: _87.EventSend): _87.EventSendAminoMsg;
                fromProtoMsg(message: _87.EventSendProtoMsg): _87.EventSend;
                toProto(message: _87.EventSend): Uint8Array;
                toProtoMsg(message: _87.EventSend): _87.EventSendProtoMsg;
            };
            EventMint: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.EventMint, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.EventMint;
                fromJSON(object: any): _87.EventMint;
                toJSON(message: _87.EventMint): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                    owner?: string;
                }): _87.EventMint;
                fromSDK(object: _87.EventMintSDKType): _87.EventMint;
                toSDK(message: _87.EventMint): _87.EventMintSDKType;
                fromAmino(object: _87.EventMintAmino): _87.EventMint;
                toAmino(message: _87.EventMint): _87.EventMintAmino;
                fromAminoMsg(object: _87.EventMintAminoMsg): _87.EventMint;
                toAminoMsg(message: _87.EventMint): _87.EventMintAminoMsg;
                fromProtoMsg(message: _87.EventMintProtoMsg): _87.EventMint;
                toProto(message: _87.EventMint): Uint8Array;
                toProtoMsg(message: _87.EventMint): _87.EventMintProtoMsg;
            };
            EventBurn: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.EventBurn, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.EventBurn;
                fromJSON(object: any): _87.EventBurn;
                toJSON(message: _87.EventBurn): unknown;
                fromPartial(object: {
                    classId?: string;
                    id?: string;
                    owner?: string;
                }): _87.EventBurn;
                fromSDK(object: _87.EventBurnSDKType): _87.EventBurn;
                toSDK(message: _87.EventBurn): _87.EventBurnSDKType;
                fromAmino(object: _87.EventBurnAmino): _87.EventBurn;
                toAmino(message: _87.EventBurn): _87.EventBurnAmino;
                fromAminoMsg(object: _87.EventBurnAminoMsg): _87.EventBurn;
                toAminoMsg(message: _87.EventBurn): _87.EventBurnAminoMsg;
                fromProtoMsg(message: _87.EventBurnProtoMsg): _87.EventBurn;
                toProto(message: _87.EventBurn): Uint8Array;
                toProtoMsg(message: _87.EventBurn): _87.EventBurnProtoMsg;
            };
        };
    }
    namespace orm {
        const v1: {
            TableDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.TableDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.TableDescriptor;
                fromJSON(object: any): _92.TableDescriptor;
                toJSON(message: _92.TableDescriptor): unknown;
                fromPartial(object: {
                    primaryKey?: {
                        fields?: string;
                        autoIncrement?: boolean;
                    };
                    index?: {
                        fields?: string;
                        id?: number;
                        unique?: boolean;
                    }[];
                    id?: number;
                }): _92.TableDescriptor;
                fromSDK(object: _92.TableDescriptorSDKType): _92.TableDescriptor;
                toSDK(message: _92.TableDescriptor): _92.TableDescriptorSDKType;
                fromAmino(object: _92.TableDescriptorAmino): _92.TableDescriptor;
                toAmino(message: _92.TableDescriptor): _92.TableDescriptorAmino;
                fromAminoMsg(object: _92.TableDescriptorAminoMsg): _92.TableDescriptor;
                toAminoMsg(message: _92.TableDescriptor): _92.TableDescriptorAminoMsg;
                fromProtoMsg(message: _92.TableDescriptorProtoMsg): _92.TableDescriptor;
                toProto(message: _92.TableDescriptor): Uint8Array;
                toProtoMsg(message: _92.TableDescriptor): _92.TableDescriptorProtoMsg;
            };
            PrimaryKeyDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.PrimaryKeyDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.PrimaryKeyDescriptor;
                fromJSON(object: any): _92.PrimaryKeyDescriptor;
                toJSON(message: _92.PrimaryKeyDescriptor): unknown;
                fromPartial(object: {
                    fields?: string;
                    autoIncrement?: boolean;
                }): _92.PrimaryKeyDescriptor;
                fromSDK(object: _92.PrimaryKeyDescriptorSDKType): _92.PrimaryKeyDescriptor;
                toSDK(message: _92.PrimaryKeyDescriptor): _92.PrimaryKeyDescriptorSDKType;
                fromAmino(object: _92.PrimaryKeyDescriptorAmino): _92.PrimaryKeyDescriptor;
                toAmino(message: _92.PrimaryKeyDescriptor): _92.PrimaryKeyDescriptorAmino;
                fromAminoMsg(object: _92.PrimaryKeyDescriptorAminoMsg): _92.PrimaryKeyDescriptor;
                toAminoMsg(message: _92.PrimaryKeyDescriptor): _92.PrimaryKeyDescriptorAminoMsg;
                fromProtoMsg(message: _92.PrimaryKeyDescriptorProtoMsg): _92.PrimaryKeyDescriptor;
                toProto(message: _92.PrimaryKeyDescriptor): Uint8Array;
                toProtoMsg(message: _92.PrimaryKeyDescriptor): _92.PrimaryKeyDescriptorProtoMsg;
            };
            SecondaryIndexDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.SecondaryIndexDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.SecondaryIndexDescriptor;
                fromJSON(object: any): _92.SecondaryIndexDescriptor;
                toJSON(message: _92.SecondaryIndexDescriptor): unknown;
                fromPartial(object: {
                    fields?: string;
                    id?: number;
                    unique?: boolean;
                }): _92.SecondaryIndexDescriptor;
                fromSDK(object: _92.SecondaryIndexDescriptorSDKType): _92.SecondaryIndexDescriptor;
                toSDK(message: _92.SecondaryIndexDescriptor): _92.SecondaryIndexDescriptorSDKType;
                fromAmino(object: _92.SecondaryIndexDescriptorAmino): _92.SecondaryIndexDescriptor;
                toAmino(message: _92.SecondaryIndexDescriptor): _92.SecondaryIndexDescriptorAmino;
                fromAminoMsg(object: _92.SecondaryIndexDescriptorAminoMsg): _92.SecondaryIndexDescriptor;
                toAminoMsg(message: _92.SecondaryIndexDescriptor): _92.SecondaryIndexDescriptorAminoMsg;
                fromProtoMsg(message: _92.SecondaryIndexDescriptorProtoMsg): _92.SecondaryIndexDescriptor;
                toProto(message: _92.SecondaryIndexDescriptor): Uint8Array;
                toProtoMsg(message: _92.SecondaryIndexDescriptor): _92.SecondaryIndexDescriptorProtoMsg;
            };
            SingletonDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.SingletonDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.SingletonDescriptor;
                fromJSON(object: any): _92.SingletonDescriptor;
                toJSON(message: _92.SingletonDescriptor): unknown;
                fromPartial(object: {
                    id?: number;
                }): _92.SingletonDescriptor;
                fromSDK(object: _92.SingletonDescriptorSDKType): _92.SingletonDescriptor;
                toSDK(message: _92.SingletonDescriptor): _92.SingletonDescriptorSDKType;
                fromAmino(object: _92.SingletonDescriptorAmino): _92.SingletonDescriptor;
                toAmino(message: _92.SingletonDescriptor): _92.SingletonDescriptorAmino;
                fromAminoMsg(object: _92.SingletonDescriptorAminoMsg): _92.SingletonDescriptor;
                toAminoMsg(message: _92.SingletonDescriptor): _92.SingletonDescriptorAminoMsg;
                fromProtoMsg(message: _92.SingletonDescriptorProtoMsg): _92.SingletonDescriptor;
                toProto(message: _92.SingletonDescriptor): Uint8Array;
                toProtoMsg(message: _92.SingletonDescriptor): _92.SingletonDescriptorProtoMsg;
            };
        };
        const v1alpha1: {
            storageTypeFromJSON(object: any): _93.StorageType;
            storageTypeToJSON(object: _93.StorageType): string;
            StorageType: typeof _93.StorageType;
            StorageTypeSDKType: typeof _93.StorageType;
            StorageTypeAmino: typeof _93.StorageType;
            ModuleSchemaDescriptor: {
                typeUrl: string;
                aminoType: string;
                encode(message: _93.ModuleSchemaDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.ModuleSchemaDescriptor;
                fromJSON(object: any): _93.ModuleSchemaDescriptor;
                toJSON(message: _93.ModuleSchemaDescriptor): unknown;
                fromPartial(object: {
                    schemaFile?: {
                        id?: number;
                        protoFileName?: string;
                        storageType?: _93.StorageType;
                    }[];
                    prefix?: Uint8Array;
                }): _93.ModuleSchemaDescriptor;
                fromSDK(object: _93.ModuleSchemaDescriptorSDKType): _93.ModuleSchemaDescriptor;
                toSDK(message: _93.ModuleSchemaDescriptor): _93.ModuleSchemaDescriptorSDKType;
                fromAmino(object: _93.ModuleSchemaDescriptorAmino): _93.ModuleSchemaDescriptor;
                toAmino(message: _93.ModuleSchemaDescriptor): _93.ModuleSchemaDescriptorAmino;
                fromAminoMsg(object: _93.ModuleSchemaDescriptorAminoMsg): _93.ModuleSchemaDescriptor;
                toAminoMsg(message: _93.ModuleSchemaDescriptor): _93.ModuleSchemaDescriptorAminoMsg;
                fromProtoMsg(message: _93.ModuleSchemaDescriptorProtoMsg): _93.ModuleSchemaDescriptor;
                toProto(message: _93.ModuleSchemaDescriptor): Uint8Array;
                toProtoMsg(message: _93.ModuleSchemaDescriptor): _93.ModuleSchemaDescriptorProtoMsg;
            };
            ModuleSchemaDescriptor_FileEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _93.ModuleSchemaDescriptor_FileEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.ModuleSchemaDescriptor_FileEntry;
                fromJSON(object: any): _93.ModuleSchemaDescriptor_FileEntry;
                toJSON(message: _93.ModuleSchemaDescriptor_FileEntry): unknown;
                fromPartial(object: {
                    id?: number;
                    protoFileName?: string;
                    storageType?: _93.StorageType;
                }): _93.ModuleSchemaDescriptor_FileEntry;
                fromSDK(object: _93.ModuleSchemaDescriptor_FileEntrySDKType): _93.ModuleSchemaDescriptor_FileEntry;
                toSDK(message: _93.ModuleSchemaDescriptor_FileEntry): _93.ModuleSchemaDescriptor_FileEntrySDKType;
                fromAmino(object: _93.ModuleSchemaDescriptor_FileEntryAmino): _93.ModuleSchemaDescriptor_FileEntry;
                toAmino(message: _93.ModuleSchemaDescriptor_FileEntry): _93.ModuleSchemaDescriptor_FileEntryAmino;
                fromAminoMsg(object: _93.ModuleSchemaDescriptor_FileEntryAminoMsg): _93.ModuleSchemaDescriptor_FileEntry;
                toAminoMsg(message: _93.ModuleSchemaDescriptor_FileEntry): _93.ModuleSchemaDescriptor_FileEntryAminoMsg;
                fromProtoMsg(message: _93.ModuleSchemaDescriptor_FileEntryProtoMsg): _93.ModuleSchemaDescriptor_FileEntry;
                toProto(message: _93.ModuleSchemaDescriptor_FileEntry): Uint8Array;
                toProtoMsg(message: _93.ModuleSchemaDescriptor_FileEntry): _93.ModuleSchemaDescriptor_FileEntryProtoMsg;
            };
        };
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                authz: {
                    v1beta1: _212.MsgClientImpl;
                };
                bank: {
                    v1beta1: _213.MsgClientImpl;
                };
                crisis: {
                    v1beta1: _214.MsgClientImpl;
                };
                distribution: {
                    v1beta1: _215.MsgClientImpl;
                };
                evidence: {
                    v1beta1: _216.MsgClientImpl;
                };
                feegrant: {
                    v1beta1: _217.MsgClientImpl;
                };
                gov: {
                    v1beta1: _218.MsgClientImpl;
                    v1: _222.MsgClientImpl;
                };
                slashing: {
                    v1beta1: _219.MsgClientImpl;
                };
                staking: {
                    v1beta1: _220.MsgClientImpl;
                };
                vesting: {
                    v1beta1: _221.MsgClientImpl;
                };
                group: {
                    v1: _223.MsgClientImpl;
                };
                nft: {
                    v1beta1: _224.MsgClientImpl;
                };
                upgrade: {
                    v1beta1: _225.MsgClientImpl;
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: {
                        accounts(request?: _3.QueryAccountsRequest): Promise<_3.QueryAccountsResponse>;
                        account(request: _3.QueryAccountRequest): Promise<_3.QueryAccountResponse>;
                        params(request?: _3.QueryParamsRequest): Promise<_3.QueryParamsResponse>;
                        moduleAccounts(request?: _3.QueryModuleAccountsRequest): Promise<_3.QueryModuleAccountsResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: _7.QueryGrantsRequest): Promise<_7.QueryGrantsResponse>;
                        granterGrants(request: _7.QueryGranterGrantsRequest): Promise<_7.QueryGranterGrantsResponse>;
                        granteeGrants(request: _7.QueryGranteeGrantsRequest): Promise<_7.QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: _12.QueryBalanceRequest): Promise<_12.QueryBalanceResponse>;
                        allBalances(request: _12.QueryAllBalancesRequest): Promise<_12.QueryAllBalancesResponse>;
                        totalSupply(request?: _12.QueryTotalSupplyRequest): Promise<_12.QueryTotalSupplyResponse>;
                        supplyOf(request: _12.QuerySupplyOfRequest): Promise<_12.QuerySupplyOfResponse>;
                        totalSupplyWithoutOffset(request?: _12.QueryTotalSupplyWithoutOffsetRequest): Promise<_12.QueryTotalSupplyWithoutOffsetResponse>;
                        supplyOfWithoutOffset(request: _12.QuerySupplyOfWithoutOffsetRequest): Promise<_12.QuerySupplyOfWithoutOffsetResponse>;
                        params(request?: _12.QueryParamsRequest): Promise<_12.QueryParamsResponse>;
                        denomMetadata(request: _12.QueryDenomMetadataRequest): Promise<_12.QueryDenomMetadataResponse>;
                        denomsMetadata(request?: _12.QueryDenomsMetadataRequest): Promise<_12.QueryDenomsMetadataResponse>;
                        baseDenom(request: _12.QueryBaseDenomRequest): Promise<_12.QueryBaseDenomResponse>;
                    };
                };
                base: {
                    node: {
                        v1beta1: {
                            config(request?: _16.ConfigRequest): Promise<_16.ConfigResponse>;
                        };
                    };
                    tendermint: {
                        v1beta1: {
                            getNodeInfo(request?: _23.GetNodeInfoRequest): Promise<_23.GetNodeInfoResponse>;
                            getSyncing(request?: _23.GetSyncingRequest): Promise<_23.GetSyncingResponse>;
                            getLatestBlock(request?: _23.GetLatestBlockRequest): Promise<_23.GetLatestBlockResponse>;
                            getBlockByHeight(request: _23.GetBlockByHeightRequest): Promise<_23.GetBlockByHeightResponse>;
                            getLatestValidatorSet(request?: _23.GetLatestValidatorSetRequest): Promise<_23.GetLatestValidatorSetResponse>;
                            getValidatorSetByHeight(request: _23.GetValidatorSetByHeightRequest): Promise<_23.GetValidatorSetByHeightResponse>;
                        };
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: _37.QueryParamsRequest): Promise<_37.QueryParamsResponse>;
                        validatorOutstandingRewards(request: _37.QueryValidatorOutstandingRewardsRequest): Promise<_37.QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: _37.QueryValidatorCommissionRequest): Promise<_37.QueryValidatorCommissionResponse>;
                        validatorSlashes(request: _37.QueryValidatorSlashesRequest): Promise<_37.QueryValidatorSlashesResponse>;
                        delegationRewards(request: _37.QueryDelegationRewardsRequest): Promise<_37.QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: _37.QueryDelegationTotalRewardsRequest): Promise<_37.QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: _37.QueryDelegatorValidatorsRequest): Promise<_37.QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: _37.QueryDelegatorWithdrawAddressRequest): Promise<_37.QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: _37.QueryCommunityPoolRequest): Promise<_37.QueryCommunityPoolResponse>;
                    };
                };
                evidence: {
                    v1beta1: {
                        evidence(request: _41.QueryEvidenceRequest): Promise<_41.QueryEvidenceResponse>;
                        allEvidence(request?: _41.QueryAllEvidenceRequest): Promise<_41.QueryAllEvidenceResponse>;
                    };
                };
                feegrant: {
                    v1beta1: {
                        allowance(request: _45.QueryAllowanceRequest): Promise<_45.QueryAllowanceResponse>;
                        allowances(request: _45.QueryAllowancesRequest): Promise<_45.QueryAllowancesResponse>;
                    };
                };
                gov: {
                    v1beta1: {
                        proposal(request: _50.QueryProposalRequest): Promise<_50.QueryProposalResponse>;
                        proposals(request: _50.QueryProposalsRequest): Promise<_50.QueryProposalsResponse>;
                        vote(request: _50.QueryVoteRequest): Promise<_50.QueryVoteResponse>;
                        votes(request: _50.QueryVotesRequest): Promise<_50.QueryVotesResponse>;
                        params(request: _50.QueryParamsRequest): Promise<_50.QueryParamsResponse>;
                        deposit(request: _50.QueryDepositRequest): Promise<_50.QueryDepositResponse>;
                        deposits(request: _50.QueryDepositsRequest): Promise<_50.QueryDepositsResponse>;
                        tallyResult(request: _50.QueryTallyResultRequest): Promise<_50.QueryTallyResultResponse>;
                    };
                    v1: {
                        proposal(request: _54.QueryProposalRequest): Promise<_54.QueryProposalResponse>;
                        proposals(request: _54.QueryProposalsRequest): Promise<_54.QueryProposalsResponse>;
                        vote(request: _54.QueryVoteRequest): Promise<_54.QueryVoteResponse>;
                        votes(request: _54.QueryVotesRequest): Promise<_54.QueryVotesResponse>;
                        params(request: _54.QueryParamsRequest): Promise<_54.QueryParamsResponse>;
                        deposit(request: _54.QueryDepositRequest): Promise<_54.QueryDepositResponse>;
                        deposits(request: _54.QueryDepositsRequest): Promise<_54.QueryDepositsResponse>;
                        tallyResult(request: _54.QueryTallyResultRequest): Promise<_54.QueryTallyResultResponse>;
                    };
                };
                mint: {
                    v1beta1: {
                        params(request?: _58.QueryParamsRequest): Promise<_58.QueryParamsResponse>;
                        inflation(request?: _58.QueryInflationRequest): Promise<_58.QueryInflationResponse>;
                        annualProvisions(request?: _58.QueryAnnualProvisionsRequest): Promise<_58.QueryAnnualProvisionsResponse>;
                    };
                };
                params: {
                    v1beta1: {
                        params(request: _60.QueryParamsRequest): Promise<_60.QueryParamsResponse>;
                    };
                };
                slashing: {
                    v1beta1: {
                        params(request?: _62.QueryParamsRequest): Promise<_62.QueryParamsResponse>;
                        signingInfo(request: _62.QuerySigningInfoRequest): Promise<_62.QuerySigningInfoResponse>;
                        signingInfos(request?: _62.QuerySigningInfosRequest): Promise<_62.QuerySigningInfosResponse>;
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: _67.QueryValidatorsRequest): Promise<_67.QueryValidatorsResponse>;
                        validator(request: _67.QueryValidatorRequest): Promise<_67.QueryValidatorResponse>;
                        validatorDelegations(request: _67.QueryValidatorDelegationsRequest): Promise<_67.QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: _67.QueryValidatorUnbondingDelegationsRequest): Promise<_67.QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: _67.QueryDelegationRequest): Promise<_67.QueryDelegationResponse>;
                        unbondingDelegation(request: _67.QueryUnbondingDelegationRequest): Promise<_67.QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: _67.QueryDelegatorDelegationsRequest): Promise<_67.QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: _67.QueryDelegatorUnbondingDelegationsRequest): Promise<_67.QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: _67.QueryRedelegationsRequest): Promise<_67.QueryRedelegationsResponse>;
                        delegatorValidators(request: _67.QueryDelegatorValidatorsRequest): Promise<_67.QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: _67.QueryDelegatorValidatorRequest): Promise<_67.QueryDelegatorValidatorResponse>;
                        historicalInfo(request: _67.QueryHistoricalInfoRequest): Promise<_67.QueryHistoricalInfoResponse>;
                        pool(request?: _67.QueryPoolRequest): Promise<_67.QueryPoolResponse>;
                        params(request?: _67.QueryParamsRequest): Promise<_67.QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: _71.SimulateRequest): Promise<_71.SimulateResponse>;
                        getTx(request: _71.GetTxRequest): Promise<_71.GetTxResponse>;
                        broadcastTx(request: _71.BroadcastTxRequest): Promise<_71.BroadcastTxResponse>;
                        getTxsEvent(request: _71.GetTxsEventRequest): Promise<_71.GetTxsEventResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: _73.QueryCurrentPlanRequest): Promise<_73.QueryCurrentPlanResponse>;
                        appliedPlan(request: _73.QueryAppliedPlanRequest): Promise<_73.QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: _73.QueryUpgradedConsensusStateRequest): Promise<_73.QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: _73.QueryModuleVersionsRequest): Promise<_73.QueryModuleVersionsResponse>;
                    };
                };
                app: {
                    v1alpha1: {
                        config(request?: _80.QueryConfigRequest): Promise<_80.QueryConfigResponse>;
                    };
                };
                group: {
                    v1: {
                        groupInfo(request: _83.QueryGroupInfoRequest): Promise<_83.QueryGroupInfoResponse>;
                        groupPolicyInfo(request: _83.QueryGroupPolicyInfoRequest): Promise<_83.QueryGroupPolicyInfoResponse>;
                        groupMembers(request: _83.QueryGroupMembersRequest): Promise<_83.QueryGroupMembersResponse>;
                        groupsByAdmin(request: _83.QueryGroupsByAdminRequest): Promise<_83.QueryGroupsByAdminResponse>;
                        groupPoliciesByGroup(request: _83.QueryGroupPoliciesByGroupRequest): Promise<_83.QueryGroupPoliciesByGroupResponse>;
                        groupPoliciesByAdmin(request: _83.QueryGroupPoliciesByAdminRequest): Promise<_83.QueryGroupPoliciesByAdminResponse>;
                        proposal(request: _83.QueryProposalRequest): Promise<_83.QueryProposalResponse>;
                        proposalsByGroupPolicy(request: _83.QueryProposalsByGroupPolicyRequest): Promise<_83.QueryProposalsByGroupPolicyResponse>;
                        voteByProposalVoter(request: _83.QueryVoteByProposalVoterRequest): Promise<_83.QueryVoteByProposalVoterResponse>;
                        votesByProposal(request: _83.QueryVotesByProposalRequest): Promise<_83.QueryVotesByProposalResponse>;
                        votesByVoter(request: _83.QueryVotesByVoterRequest): Promise<_83.QueryVotesByVoterResponse>;
                        groupsByMember(request: _83.QueryGroupsByMemberRequest): Promise<_83.QueryGroupsByMemberResponse>;
                        tallyResult(request: _83.QueryTallyResultRequest): Promise<_83.QueryTallyResultResponse>;
                    };
                };
                nft: {
                    v1beta1: {
                        balance(request: _90.QueryBalanceRequest): Promise<_90.QueryBalanceResponse>;
                        owner(request: _90.QueryOwnerRequest): Promise<_90.QueryOwnerResponse>;
                        supply(request: _90.QuerySupplyRequest): Promise<_90.QuerySupplyResponse>;
                        nFTs(request: _90.QueryNFTsRequest): Promise<_90.QueryNFTsResponse>;
                        nFT(request: _90.QueryNFTRequest): Promise<_90.QueryNFTResponse>;
                        class(request: _90.QueryClassRequest): Promise<_90.QueryClassResponse>;
                        classes(request?: _90.QueryClassesRequest): Promise<_90.QueryClassesResponse>;
                    };
                };
            };
        }>;
    };
}
